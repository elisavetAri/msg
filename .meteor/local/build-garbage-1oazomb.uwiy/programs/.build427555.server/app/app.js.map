{"version":3,"sources":["meteor://ðŸ’»app/imports/api/user/user.js","meteor://ðŸ’»app/imports/startup/email/index.js","meteor://ðŸ’»app/imports/startup/rest/index.js","meteor://ðŸ’»app/imports/startup/server/index.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","User","Meteor","link","v","Mongo","Collection","isServer","publish","find","methods","name","password","phone","email","uid","insert","created_at","moment","valueOf","userId","remove","update","$set","oldPassword","newPassword","user","findOne","_id","process","env","MAIL_URL","Email","send","from","to","subject","text","Api","Restivus","useDefaultAuth","prettyJson","enableCors","addRoute","get","req","res","bodyParams","name1","queryParams","status","Login","country"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\r\nimport { Mongo } from 'meteor/mongo';\r\nexport const User = new Mongo.Collection('user');\r\nif (Meteor.isServer){\r\n  Meteor.publish('users',function(){\r\n    return User.find();\r\n  })\r\n}\r\n\r\nMeteor.methods({\r\n  \"user.insert\"(name,password,phone,email){\r\n    const uid = User.insert({\r\n      name:name,\r\n      password:password,\r\n      phone : phone,\r\n      email : email,\r\n      created_at:moment().valueOf()\r\n    });\r\n    return uid;\r\n  },\r\n  \"user.remove\"(userId){\r\n    return User.remove(userId);\r\n  },\r\n  \"user.update\"(userId,update){\r\n    return User.update(userId,{$set:update});\r\n  },\r\n  \"user.changePassword\"(userId,oldPassword,newPassword){\r\n    var user = User.findOne({\r\n      _id : userId,\r\n      password : oldPassword\r\n    });\r\n    if (user) {\r\n      return User.update(userId,{$set:{\r\n        password:newPassword\r\n      }});\r\n    }\r\n  }\r\n  // ,\r\n  // \"user.remove\"(userId){\r\n  //   return User.remove(userId);\r\n  // }\r\n});\r\n","process.env.MAIL_URL = 'smtp://user%40gmail.com:password@smtp.gmail.com:465';\r\nEmail.send({\r\nfrom: \"from@mailinator.com\",\r\nto: \"elisavet_ari@hotmail.co.uk\",\r\nsubject: \"Subject\",\r\ntext: \"Here is some text\"\r\n});\r\n","import { User } from '/imports/api/user/user.js';\r\n\r\nvar Api = new Restivus({\r\n  useDefaultAuth: false,\r\n  prettyJson: false,\r\n  enableCors : true\r\n});\r\n\r\nApi.addRoute('test', {\r\n  get : function(req, res){\r\n    var name = this.bodyParams.name;\r\n    var name1 = User.findOne({name:name});\r\n    var userId = this.queryParams.userId;\r\n    return {status : \"OK\", name: this.queryParams.name};\r\n  }\r\n});\r\n","import '/imports/api/user/user.js';\r\nimport { User } from '/imports/api/user/user.js';\r\nimport { Email } from 'meteor/email';\r\n\r\nMeteor.methods({\r\nLogin(name,password,country,phone,email){\r\n  var user = User.findOne({\r\n    name : name,\r\n    password : password,\r\n    phone : phone,\r\n    email :email\r\n  });\r\n  if (user) return user._id;\r\n  return false;\r\n}\r\n});\r\n","import \"/imports/startup/server\";\nimport \"/imports/startup/rest\";\nimport \"/imports/startup/email\";\n"]}