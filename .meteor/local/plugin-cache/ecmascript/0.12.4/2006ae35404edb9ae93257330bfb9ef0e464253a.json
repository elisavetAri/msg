{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Sandbox\\test\\imports\\startup\\email\\index.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.windows.x86_64"},"sourceFileName":"imports/startup/email/index.js","filename":"C:\\Sandbox\\test\\imports\\startup\\email\\index.js","passPerPreset":false,"envName":"development","cwd":"C:\\Sandbox\\test","root":"C:\\Sandbox\\test","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"C:\\Sandbox\\test\\imports\\startup\\email\\index.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/startup/email/index.js"}},"code":"process.env.MAIL_URL = 'smtps://elisavetar638@gmail.com:ELISAVET1311@smtp.gmail.com:465';\nMeteor.methods({\n  \"email.send\"(to, subject, text) {\n    Email.send({\n      from: \"from@mailinator.com\",\n      to: to,\n      subject: subject,\n      text: text\n    });\n  },\n\n  sendMessage: function (outgoingMessage) {\n    var phonebook = []; // Find all checked numbers across all groups\n\n    var recipients = Groups.find({\n      numbers: {\n        $elemMatch: {\n          \"checked\": true\n        }\n      }\n    }); // Add each number from our query to our phonebook\n\n    recipients.forEach(function (recipient) {\n      for (var index in recipient.numbers) {\n        phonebook.push(recipient.numbers[index].number);\n      }\n    }); // Place all numbers in a Set so no number is texted more than once\n\n    var uniquePhoneBook = new Set(phonebook); // Use Twilio REST API to text each number in the unique phonebook\n\n    uniquePhoneBook.forEach(function (number) {\n      HTTP.call(\"POST\", 'https://api.twilio.com/2010-04-01/Accounts/' + process.env.TWILIO_ACCOUNT_SID + '/SMS/Messages.json', {\n        params: {\n          From: process.env.TWILIO_NUMBER,\n          To: number,\n          Body: outgoingMessage\n        },\n        // Set your credentials as environment variables\n        // so that they are not loaded on the client\n        auth: process.env.TWILIO_ACCOUNT_SID + ':' + process.env.TWILIO_AUTH_TOKEN\n      }, // Print error or success to console\n      function (error) {\n        if (error) {\n          console.log(error);\n        } else {\n          console.log('SMS sent successfully.');\n        }\n      });\n    });\n  }\n});","map":{"version":3,"sources":["imports/startup/email/index.js"],"names":["process","env","MAIL_URL","Meteor","methods","to","subject","text","Email","send","from","sendMessage","outgoingMessage","phonebook","recipients","Groups","find","numbers","$elemMatch","forEach","recipient","index","push","number","uniquePhoneBook","Set","HTTP","call","TWILIO_ACCOUNT_SID","params","From","TWILIO_NUMBER","To","Body","auth","TWILIO_AUTH_TOKEN","error","console","log"],"mappings":"AAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAuB,iEAAvB;AAEAC,MAAM,CAACC,OAAP,CAAe;AACb,eAAaC,EAAb,EAAgBC,OAAhB,EAAyBC,IAAzB,EAA8B;AAC5BC,IAAAA,KAAK,CAACC,IAAN,CAAW;AACXC,MAAAA,IAAI,EAAE,qBADK;AAEXL,MAAAA,EAAE,EAAEA,EAFO;AAGXC,MAAAA,OAAO,EAAEA,OAHE;AAIXC,MAAAA,IAAI,EAAEA;AAJK,KAAX;AAMD,GARY;;AASbI,EAAAA,WAAW,EAAE,UAAUC,eAAV,EAA2B;AACtC,QAAIC,SAAS,GAAG,EAAhB,CADsC,CAEtC;;AACA,QAAIC,UAAU,GACVC,MAAM,CAACC,IAAP,CACI;AAACC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAC,qBAAW;AAAZ;AAAd;AAAV,KADJ,CADJ,CAHsC,CAOtC;;AACAJ,IAAAA,UAAU,CAACK,OAAX,CAAmB,UAAUC,SAAV,EAAqB;AACpC,WAAK,IAAIC,KAAT,IAAkBD,SAAS,CAACH,OAA5B,EAAqC;AACjCJ,QAAAA,SAAS,CAACS,IAAV,CAAeF,SAAS,CAACH,OAAV,CAAkBI,KAAlB,EAAyBE,MAAxC;AACH;AACJ,KAJD,EARsC,CAatC;;AACA,QAAIC,eAAe,GAAG,IAAIC,GAAJ,CAAQZ,SAAR,CAAtB,CAdsC,CAetC;;AACAW,IAAAA,eAAe,CAACL,OAAhB,CAAwB,UAAUI,MAAV,EAAkB;AACtCG,MAAAA,IAAI,CAACC,IAAL,CACI,MADJ,EAEI,gDACA3B,OAAO,CAACC,GAAR,CAAY2B,kBADZ,GACiC,oBAHrC,EAG2D;AACnDC,QAAAA,MAAM,EAAE;AACJC,UAAAA,IAAI,EAAE9B,OAAO,CAACC,GAAR,CAAY8B,aADd;AAEJC,UAAAA,EAAE,EAAET,MAFA;AAGJU,UAAAA,IAAI,EAAErB;AAHF,SAD2C;AAMnD;AACA;AACAsB,QAAAA,IAAI,EACAlC,OAAO,CAACC,GAAR,CAAY2B,kBAAZ,GAAiC,GAAjC,GACA5B,OAAO,CAACC,GAAR,CAAYkC;AAVmC,OAH3D,EAeI;AACA,gBAAUC,KAAV,EAAiB;AACb,YAAIA,KAAJ,EAAW;AACPC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,SAFD,MAGK;AACDC,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH;AACJ,OAvBL;AAyBH,KA1BD;AA2BH;AApDc,CAAf","sourcesContent":["process.env.MAIL_URL = 'smtps://elisavetar638@gmail.com:ELISAVET1311@smtp.gmail.com:465';\r\n\r\nMeteor.methods({\r\n  \"email.send\"(to,subject, text){\r\n    Email.send({\r\n    from: \"from@mailinator.com\",\r\n    to: to,\r\n    subject: subject,\r\n    text: text\r\n    });\r\n  },\r\n  sendMessage: function (outgoingMessage) {\r\n    var phonebook = [];\r\n    // Find all checked numbers across all groups\r\n    var recipients =\r\n        Groups.find(\r\n            {numbers: { $elemMatch: {\"checked\": true}}}\r\n        );\r\n    // Add each number from our query to our phonebook\r\n    recipients.forEach(function (recipient) {\r\n        for (var index in recipient.numbers) {\r\n            phonebook.push(recipient.numbers[index].number);\r\n        }\r\n    });\r\n    // Place all numbers in a Set so no number is texted more than once\r\n    var uniquePhoneBook = new Set(phonebook);\r\n    // Use Twilio REST API to text each number in the unique phonebook\r\n    uniquePhoneBook.forEach(function (number) {\r\n        HTTP.call(\r\n            \"POST\",\r\n            'https://api.twilio.com/2010-04-01/Accounts/' +\r\n            process.env.TWILIO_ACCOUNT_SID + '/SMS/Messages.json', {\r\n                params: {\r\n                    From: process.env.TWILIO_NUMBER,\r\n                    To: number,\r\n                    Body: outgoingMessage\r\n                },\r\n                // Set your credentials as environment variables\r\n                // so that they are not loaded on the client\r\n                auth:\r\n                    process.env.TWILIO_ACCOUNT_SID + ':' +\r\n                    process.env.TWILIO_AUTH_TOKEN\r\n            },\r\n            // Print error or success to console\r\n            function (error) {\r\n                if (error) {\r\n                    console.log(error);\r\n                }\r\n                else {\r\n                    console.log('SMS sent successfully.');\r\n                }\r\n            }\r\n        );\r\n    });\r\n}\r\n});\r\n"]},"sourceType":"script","hash":"2006ae35404edb9ae93257330bfb9ef0e464253a"}
