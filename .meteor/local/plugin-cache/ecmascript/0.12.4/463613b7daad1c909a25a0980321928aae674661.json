{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Sandbox\\test\\imports\\ui\\pages\\this\\this.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/ui/pages/this/this.js","filename":"C:\\Sandbox\\test\\imports\\ui\\pages\\this\\this.js","passPerPreset":false,"envName":"development","cwd":"C:\\Sandbox\\test","root":"C:\\Sandbox\\test","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Sandbox\\test\\imports\\ui\\pages\\this\\this.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/pages/this/this.js"}},"code":"module.link(\"./about.html\");\nlet ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar(v) {\n    ReactiveVar = v;\n  }\n\n}, 0);\n\n(function () {\n  var params = {},\n      r = /([^&=]+)=?([^&]*)/g;\n\n  function d(s) {\n    return decodeURIComponent(s.replace(/\\+/g, ' '));\n  }\n\n  var match,\n      search = window.location.search;\n\n  while (match = r.exec(search.substring(1))) {\n    params[d(match[1])] = d(match[2]);\n\n    if (d(match[2]) === 'true' || d(match[2]) === 'false') {\n      params[d(match[1])] = d(match[2]) === 'true' ? true : false;\n    }\n  }\n\n  window.params = params;\n})();\n\nfunction addStreamStopListener(stream, callback) {\n  stream.addEventListener('ended', function () {\n    callback();\n\n    callback = function () {};\n  }, false);\n  stream.addEventListener('inactive', function () {\n    callback();\n\n    callback = function () {};\n  }, false);\n  stream.getTracks().forEach(function (track) {\n    track.addEventListener('ended', function () {\n      callback();\n\n      callback = function () {};\n    }, false);\n    track.addEventListener('inactive', function () {\n      callback();\n\n      callback = function () {};\n    }, false);\n  });\n}\n\nvar video = document.createElement('video');\nvideo.controls = false;\nvar mediaElement = getHTMLMediaElement(video, {\n  title: 'Recording status: inactive',\n  buttons: ['full-screen'\n  /*, 'take-snapshot'*/\n  ],\n  showOnMouseEnter: false,\n  width: 360,\n  onTakeSnapshot: function () {\n    var canvas = document.createElement('canvas');\n    canvas.width = mediaElement.clientWidth;\n    canvas.height = mediaElement.clientHeight;\n    var context = canvas.getContext('2d');\n    context.drawImage(recordingPlayer, 0, 0, canvas.width, canvas.height);\n    window.open(canvas.toDataURL('image/png'));\n  }\n});\ndocument.getElementById('recording-player').appendChild(mediaElement);\nvar div = document.createElement('section');\nmediaElement.media.parentNode.appendChild(div);\nmediaElement.media.muted = false;\nmediaElement.media.autoplay = true;\nmediaElement.media.playsinline = true;\ndiv.appendChild(mediaElement.media);\nvar recordingPlayer = mediaElement.media;\nvar recordingMedia = document.querySelector('.recording-media');\nvar mediaContainerFormat = document.querySelector('.media-container-format');\nvar mimeType = 'video/webm';\nvar fileExtension = 'webm';\nvar type = 'video';\nvar recorderType;\nvar defaultWidth;\nvar defaultHeight;\nvar btnStartRecording = document.querySelector('#btn-start-recording');\n\nwindow.onbeforeunload = function () {\n  btnStartRecording.disabled = false;\n  recordingMedia.disabled = false;\n  mediaContainerFormat.disabled = false;\n  chkFixSeeking.parentNode.style.display = 'inline-block';\n};\n\nbtnStartRecording.onclick = function (event) {\n  var button = btnStartRecording;\n\n  if (button.innerHTML === 'Stop Recording') {\n    btnPauseRecording.style.display = 'none';\n    button.disabled = true;\n    button.disableStateWaiting = true;\n    setTimeout(function () {\n      button.disabled = false;\n      button.disableStateWaiting = false;\n    }, 2000);\n    button.innerHTML = 'Start Recording';\n\n    function stopStream() {\n      if (button.stream && button.stream.stop) {\n        button.stream.stop();\n        button.stream = null;\n      }\n\n      if (button.stream instanceof Array) {\n        button.stream.forEach(function (stream) {\n          stream.stop();\n        });\n        button.stream = null;\n      }\n\n      videoBitsPerSecond = null;\n      var html = 'Recording status: stopped';\n      html += '<br>Size: ' + bytesToSize(button.recordRTC.getBlob().size);\n      recordingPlayer.parentNode.parentNode.querySelector('h2').innerHTML = html;\n    }\n\n    if (button.recordRTC) {\n      if (button.recordRTC.length) {\n        button.recordRTC[0].stopRecording(function (url) {\n          if (!button.recordRTC[1]) {\n            button.recordingEndedCallback(url);\n            stopStream();\n            saveToDiskOrOpenNewTab(button.recordRTC[0]);\n            return;\n          }\n\n          button.recordRTC[1].stopRecording(function (url) {\n            button.recordingEndedCallback(url);\n            stopStream();\n          });\n        });\n      } else {\n        button.recordRTC.stopRecording(function (url) {\n          if (button.blobs && button.blobs.length) {\n            var blob = new File(button.blobs, getFileName(fileExtension), {\n              type: mimeType\n            });\n\n            button.recordRTC.getBlob = function () {\n              return blob;\n            };\n\n            url = URL.createObjectURL(blob);\n          }\n\n          if (chkFixSeeking.checked === true) {\n            // to fix video seeking issues\n            getSeekableBlob(button.recordRTC.getBlob(), function (seekableBlob) {\n              button.recordRTC.getBlob = function () {\n                return seekableBlob;\n              };\n\n              url = URL.createObjectURL(seekableBlob);\n              button.recordingEndedCallback(url);\n              saveToDiskOrOpenNewTab(button.recordRTC);\n              stopStream();\n            });\n            return;\n          }\n\n          button.recordingEndedCallback(url);\n          saveToDiskOrOpenNewTab(button.recordRTC);\n          stopStream();\n        });\n      }\n    }\n\n    return;\n  }\n\n  if (!event) return;\n  button.disabled = true;\n  var commonConfig = {\n    onMediaCaptured: function (stream) {\n      button.stream = stream;\n\n      if (button.mediaCapturedCallback) {\n        button.mediaCapturedCallback();\n      }\n\n      button.innerHTML = 'Stop Recording';\n      button.disabled = false;\n      chkFixSeeking.parentNode.style.display = 'none';\n    },\n    onMediaStopped: function () {\n      button.innerHTML = 'Start Recording';\n\n      if (!button.disableStateWaiting) {\n        button.disabled = false;\n      }\n\n      chkFixSeeking.parentNode.style.display = 'inline-block';\n    },\n    onMediaCapturingFailed: function (error) {\n      console.error('onMediaCapturingFailed:', error);\n\n      if (error.toString().indexOf('no audio or video tracks available') !== -1) {\n        alert('RecordRTC failed to start because there are no audio or video tracks available.');\n      }\n\n      if (error.name === 'PermissionDeniedError' && DetectRTC.browser.name === 'Firefox') {\n        alert('Firefox requires version >= 52. Firefox also requires HTTPs.');\n      }\n\n      commonConfig.onMediaStopped();\n    }\n  };\n\n  if (mediaContainerFormat.value === 'h264') {\n    mimeType = 'video/webm\\;codecs=h264';\n    fileExtension = 'mp4'; // video/mp4;codecs=avc1\n\n    if (isMimeTypeSupported('video/mpeg')) {\n      mimeType = 'video/mpeg';\n    }\n  }\n\n  if (mediaContainerFormat.value === 'mkv' && isMimeTypeSupported('video/x-matroska;codecs=avc1')) {\n    mimeType = 'video/x-matroska;codecs=avc1';\n    fileExtension = 'mkv';\n  }\n\n  if (mediaContainerFormat.value === 'vp8' && isMimeTypeSupported('video/webm\\;codecs=vp8')) {\n    mimeType = 'video/webm\\;codecs=vp8';\n    fileExtension = 'webm';\n    recorderType = null;\n    type = 'video';\n  }\n\n  if (mediaContainerFormat.value === 'vp9' && isMimeTypeSupported('video/webm\\;codecs=vp9')) {\n    mimeType = 'video/webm\\;codecs=vp9';\n    fileExtension = 'webm';\n    recorderType = null;\n    type = 'video';\n  }\n\n  if (mediaContainerFormat.value === 'pcm') {\n    mimeType = 'audio/wav';\n    fileExtension = 'wav';\n    recorderType = StereoAudioRecorder;\n    type = 'audio';\n  }\n\n  if (mediaContainerFormat.value === 'opus' || mediaContainerFormat.value === 'ogg') {\n    if (isMimeTypeSupported('audio/webm')) {\n      mimeType = 'audio/webm';\n      fileExtension = 'webm'; // webm\n    }\n\n    if (isMimeTypeSupported('audio/ogg')) {\n      mimeType = 'audio/ogg; codecs=opus';\n      fileExtension = 'ogg'; // ogg\n    }\n\n    recorderType = null;\n    type = 'audio';\n  }\n\n  if (mediaContainerFormat.value === 'whammy') {\n    mimeType = 'video/webm';\n    fileExtension = 'webm';\n    recorderType = WhammyRecorder;\n    type = 'video';\n  }\n\n  if (mediaContainerFormat.value === 'WebAssembly') {\n    mimeType = 'video/webm';\n    fileExtension = 'webm';\n    recorderType = WebAssemblyRecorder;\n    type = 'video';\n  }\n\n  if (mediaContainerFormat.value === 'gif') {\n    mimeType = 'image/gif';\n    fileExtension = 'gif';\n    recorderType = GifRecorder;\n    type = 'gif';\n  }\n\n  if (mediaContainerFormat.value === 'default') {\n    mimeType = 'video/webm';\n    fileExtension = 'webm';\n    recorderType = null;\n    type = 'video';\n  }\n\n  if (recordingMedia.value === 'record-audio') {\n    captureAudio(commonConfig);\n\n    button.mediaCapturedCallback = function () {\n      var options = {\n        type: type,\n        mimeType: mimeType,\n        leftChannel: params.leftChannel || false,\n        disableLogs: params.disableLogs || false\n      };\n\n      if (params.sampleRate) {\n        options.sampleRate = parseInt(params.sampleRate);\n      }\n\n      if (params.bufferSize) {\n        options.bufferSize = parseInt(params.bufferSize);\n      }\n\n      if (recorderType) {\n        options.recorderType = recorderType;\n      }\n\n      if (videoBitsPerSecond) {\n        options.videoBitsPerSecond = videoBitsPerSecond;\n      }\n\n      if (DetectRTC.browser.name === 'Edge') {\n        options.numberOfAudioChannels = 1;\n      }\n\n      options.ignoreMutedMedia = false;\n      button.recordRTC = RecordRTC(button.stream, options);\n\n      button.recordingEndedCallback = function (url) {\n        setVideoURL(url);\n      };\n\n      button.recordRTC.startRecording();\n      btnPauseRecording.style.display = '';\n    };\n  }\n\n  if (recordingMedia.value === 'record-audio-plus-video') {\n    captureAudioPlusVideo(commonConfig);\n\n    button.mediaCapturedCallback = function () {\n      if (typeof MediaRecorder === 'undefined') {\n        // opera or chrome etc.\n        button.recordRTC = [];\n\n        if (!params.bufferSize) {\n          // it fixes audio issues whilst recording 720p\n          params.bufferSize = 16384;\n        }\n\n        var options = {\n          type: 'audio',\n          // hard-code to set \"audio\"\n          leftChannel: params.leftChannel || false,\n          disableLogs: params.disableLogs || false,\n          video: recordingPlayer\n        };\n\n        if (params.sampleRate) {\n          options.sampleRate = parseInt(params.sampleRate);\n        }\n\n        if (params.bufferSize) {\n          options.bufferSize = parseInt(params.bufferSize);\n        }\n\n        if (params.frameInterval) {\n          options.frameInterval = parseInt(params.frameInterval);\n        }\n\n        if (recorderType) {\n          options.recorderType = recorderType;\n        }\n\n        if (videoBitsPerSecond) {\n          options.videoBitsPerSecond = videoBitsPerSecond;\n        }\n\n        options.ignoreMutedMedia = false;\n        var audioRecorder = RecordRTC(button.stream, options);\n        options.type = type;\n        var videoRecorder = RecordRTC(button.stream, options); // to sync audio/video playbacks in browser!\n\n        videoRecorder.initRecorder(function () {\n          audioRecorder.initRecorder(function () {\n            audioRecorder.startRecording();\n            videoRecorder.startRecording();\n            btnPauseRecording.style.display = '';\n          });\n        });\n        button.recordRTC.push(audioRecorder, videoRecorder);\n\n        button.recordingEndedCallback = function () {\n          var audio = new Audio();\n          audio.src = audioRecorder.toURL();\n          audio.controls = true;\n          audio.autoplay = true;\n          recordingPlayer.parentNode.appendChild(document.createElement('hr'));\n          recordingPlayer.parentNode.appendChild(audio);\n          if (audio.paused) audio.play();\n        };\n\n        return;\n      }\n\n      var options = {\n        type: type,\n        mimeType: mimeType,\n        disableLogs: params.disableLogs || false,\n        getNativeBlob: false,\n        // enable it for longer recordings\n        video: recordingPlayer\n      };\n\n      if (recorderType) {\n        options.recorderType = recorderType;\n\n        if (recorderType == WhammyRecorder || recorderType == GifRecorder || recorderType == WebAssemblyRecorder) {\n          options.canvas = options.video = {\n            width: defaultWidth || 320,\n            height: defaultHeight || 240\n          };\n        }\n      }\n\n      if (videoBitsPerSecond) {\n        options.videoBitsPerSecond = videoBitsPerSecond;\n      }\n\n      if (timeSlice && typeof MediaRecorder !== 'undefined') {\n        options.timeSlice = timeSlice;\n        button.blobs = [];\n\n        options.ondataavailable = function (blob) {\n          button.blobs.push(blob);\n        };\n      }\n\n      options.ignoreMutedMedia = false;\n      button.recordRTC = RecordRTC(button.stream, options);\n\n      button.recordingEndedCallback = function (url) {\n        setVideoURL(url);\n      };\n\n      button.recordRTC.startRecording();\n      btnPauseRecording.style.display = '';\n      recordingPlayer.parentNode.parentNode.querySelector('h2').innerHTML = '<img src=\"https://cdn.webrtc-experiment.com/images/progress.gif\">';\n    };\n  }\n\n  if (recordingMedia.value === 'record-screen') {\n    captureScreen(commonConfig);\n\n    button.mediaCapturedCallback = function () {\n      var options = {\n        type: type,\n        mimeType: mimeType,\n        disableLogs: params.disableLogs || false,\n        getNativeBlob: false,\n        // enable it for longer recordings\n        video: recordingPlayer\n      };\n\n      if (recorderType) {\n        options.recorderType = recorderType;\n\n        if (recorderType == WhammyRecorder || recorderType == GifRecorder || recorderType == WebAssemblyRecorder) {\n          options.canvas = options.video = {\n            width: defaultWidth || 320,\n            height: defaultHeight || 240\n          };\n        }\n      }\n\n      if (videoBitsPerSecond) {\n        options.videoBitsPerSecond = videoBitsPerSecond;\n      }\n\n      options.ignoreMutedMedia = false;\n      button.recordRTC = RecordRTC(button.stream, options);\n\n      button.recordingEndedCallback = function (url) {\n        setVideoURL(url);\n      };\n\n      button.recordRTC.startRecording();\n      btnPauseRecording.style.display = '';\n    };\n  } // note: audio+tab is supported in Chrome 50+\n  // todo: add audio+tab recording\n\n\n  if (recordingMedia.value === 'record-audio-plus-screen') {\n    captureAudioPlusScreen(commonConfig);\n\n    button.mediaCapturedCallback = function () {\n      var options = {\n        type: type,\n        mimeType: mimeType,\n        disableLogs: params.disableLogs || false,\n        getNativeBlob: false,\n        // enable it for longer recordings\n        video: recordingPlayer\n      };\n\n      if (recorderType) {\n        options.recorderType = recorderType;\n\n        if (recorderType == WhammyRecorder || recorderType == GifRecorder || recorderType == WebAssemblyRecorder) {\n          options.canvas = options.video = {\n            width: defaultWidth || 320,\n            height: defaultHeight || 240\n          };\n        }\n      }\n\n      if (videoBitsPerSecond) {\n        options.videoBitsPerSecond = videoBitsPerSecond;\n      }\n\n      options.ignoreMutedMedia = false;\n      button.recordRTC = RecordRTC(button.stream, options);\n\n      button.recordingEndedCallback = function (url) {\n        setVideoURL(url);\n      };\n\n      button.recordRTC.startRecording();\n      btnPauseRecording.style.display = '';\n    };\n  }\n};\n\nfunction captureVideo(config) {\n  captureUserMedia({\n    video: true\n  }, function (videoStream) {\n    config.onMediaCaptured(videoStream);\n    addStreamStopListener(videoStream, function () {\n      config.onMediaStopped();\n    });\n  }, function (error) {\n    config.onMediaCapturingFailed(error);\n  });\n}\n\nfunction captureAudio(config) {\n  captureUserMedia({\n    audio: true\n  }, function (audioStream) {\n    config.onMediaCaptured(audioStream);\n    addStreamStopListener(audioStream, function () {\n      config.onMediaStopped();\n    });\n  }, function (error) {\n    config.onMediaCapturingFailed(error);\n  });\n}\n\nfunction captureAudioPlusVideo(config) {\n  captureUserMedia({\n    video: true,\n    audio: true\n  }, function (audioVideoStream) {\n    config.onMediaCaptured(audioVideoStream);\n\n    if (audioVideoStream instanceof Array) {\n      audioVideoStream.forEach(function (stream) {\n        addStreamStopListener(stream, function () {\n          config.onMediaStopped();\n        });\n      });\n      return;\n    }\n\n    addStreamStopListener(audioVideoStream, function () {\n      config.onMediaStopped();\n    });\n  }, function (error) {\n    config.onMediaCapturingFailed(error);\n  });\n}\n\nvar MY_DOMAIN = 'webrtc-experiment.com';\n\nfunction isMyOwnDomain() {\n  // replace \"webrtc-experiment.com\" with your own domain name\n  return document.domain.indexOf(MY_DOMAIN) !== -1;\n}\n\nfunction isLocalHost() {\n  // \"chrome.exe\" --enable-usermedia-screen-capturing\n  // or firefox => about:config => \"media.getusermedia.screensharing.allowed_domains\" => add \"localhost\"\n  return document.domain === 'localhost' || document.domain === 'http://127.0.0.1:3000/';\n}\n\nvar videoBitsPerSecond;\n\nfunction setVideoBitrates() {\n  var select = document.querySelector('.media-bitrates');\n  var value = select.value;\n\n  if (value == 'default') {\n    videoBitsPerSecond = null;\n    return;\n  }\n\n  videoBitsPerSecond = parseInt(value);\n}\n\nfunction getFrameRates(mediaConstraints) {\n  if (!mediaConstraints.video) {\n    return mediaConstraints;\n  }\n\n  var select = document.querySelector('.media-framerates');\n  var value = select.value;\n\n  if (value == 'default') {\n    return mediaConstraints;\n  }\n\n  value = parseInt(value);\n\n  if (DetectRTC.browser.name === 'Firefox') {\n    mediaConstraints.video.frameRate = value;\n    return mediaConstraints;\n  }\n\n  if (!mediaConstraints.video.mandatory) {\n    mediaConstraints.video.mandatory = {};\n    mediaConstraints.video.optional = [];\n  }\n\n  var isScreen = recordingMedia.value.toString().toLowerCase().indexOf('screen') != -1;\n\n  if (isScreen) {\n    mediaConstraints.video.mandatory.maxFrameRate = value;\n  } else {\n    mediaConstraints.video.mandatory.minFrameRate = value;\n  }\n\n  return mediaConstraints;\n}\n\nfunction setGetFromLocalStorage(selectors) {\n  selectors.forEach(function (selector) {\n    var storageItem = selector.replace(/\\.|#/g, '');\n\n    if (localStorage.getItem(storageItem)) {\n      document.querySelector(selector).value = localStorage.getItem(storageItem);\n    }\n\n    addEventListenerToUploadLocalStorageItem(selector, ['change', 'blur'], function () {\n      localStorage.setItem(storageItem, document.querySelector(selector).value);\n    });\n  });\n}\n\nfunction addEventListenerToUploadLocalStorageItem(selector, arr, callback) {\n  arr.forEach(function (event) {\n    document.querySelector(selector).addEventListener(event, callback, false);\n  });\n}\n\nsetGetFromLocalStorage(['.media-resolutions', '.media-framerates', '.media-bitrates', '.recording-media', '.media-container-format']);\n\nfunction getVideoResolutions(mediaConstraints) {\n  if (!mediaConstraints.video) {\n    return mediaConstraints;\n  }\n\n  var select = document.querySelector('.media-resolutions');\n  var value = select.value;\n\n  if (value == 'default') {\n    return mediaConstraints;\n  }\n\n  value = value.split('x');\n\n  if (value.length != 2) {\n    return mediaConstraints;\n  }\n\n  defaultWidth = parseInt(value[0]);\n  defaultHeight = parseInt(value[1]);\n\n  if (DetectRTC.browser.name === 'Firefox') {\n    mediaConstraints.video.width = defaultWidth;\n    mediaConstraints.video.height = defaultHeight;\n    return mediaConstraints;\n  }\n\n  if (!mediaConstraints.video.mandatory) {\n    mediaConstraints.video.mandatory = {};\n    mediaConstraints.video.optional = [];\n  }\n\n  var isScreen = recordingMedia.value.toString().toLowerCase().indexOf('screen') != -1;\n\n  if (isScreen) {\n    mediaConstraints.video.mandatory.maxWidth = defaultWidth;\n    mediaConstraints.video.mandatory.maxHeight = defaultHeight;\n  } else {\n    mediaConstraints.video.mandatory.minWidth = defaultWidth;\n    mediaConstraints.video.mandatory.minHeight = defaultHeight;\n  }\n\n  return mediaConstraints;\n}\n\nfunction captureUserMedia(mediaConstraints, successCallback, errorCallback) {\n  if (mediaConstraints.video == true) {\n    mediaConstraints.video = {};\n  }\n\n  setVideoBitrates();\n  mediaConstraints = getVideoResolutions(mediaConstraints);\n  mediaConstraints = getFrameRates(mediaConstraints);\n  var isBlackBerry = !!/BB10|BlackBerry/i.test(navigator.userAgent || '');\n\n  if (isBlackBerry && !!(navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia)) {\n    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n    navigator.getUserMedia(mediaConstraints, successCallback, errorCallback);\n    return;\n  }\n\n  navigator.mediaDevices.getUserMedia(mediaConstraints).then(function (stream) {\n    successCallback(stream);\n    setVideoURL(stream, true);\n  }).catch(function (error) {\n    if (error && (error.name === 'ConstraintNotSatisfiedError' || error.name === 'OverconstrainedError')) {\n      alert('Your camera or browser does NOT supports selected resolutions or frame-rates. \\n\\nPlease select \"default\" resolutions.');\n    } else if (error && error.message) {\n      alert(error.message);\n    } else {\n      alert('Unable to make getUserMedia request. Please check browser console logs.');\n    }\n\n    errorCallback(error);\n  });\n}\n\nfunction setMediaContainerFormat(arrayOfOptionsSupported) {\n  var options = Array.prototype.slice.call(mediaContainerFormat.querySelectorAll('option'));\n  var localStorageItem;\n\n  if (localStorage.getItem('media-container-format')) {\n    localStorageItem = localStorage.getItem('media-container-format');\n  }\n\n  var selectedItem;\n  options.forEach(function (option) {\n    option.disabled = true;\n\n    if (arrayOfOptionsSupported.indexOf(option.value) !== -1) {\n      option.disabled = false;\n\n      if (localStorageItem && arrayOfOptionsSupported.indexOf(localStorageItem) != -1) {\n        if (option.value != localStorageItem) return;\n        option.selected = true;\n        selectedItem = option;\n        return;\n      }\n\n      if (!selectedItem) {\n        option.selected = true;\n        selectedItem = option;\n      }\n    }\n  });\n}\n\nfunction isMimeTypeSupported(mimeType) {\n  if (typeof MediaRecorder === 'undefined') {\n    return false;\n  }\n\n  if (typeof MediaRecorder.isTypeSupported !== 'function') {\n    return true;\n  }\n\n  return MediaRecorder.isTypeSupported(mimeType);\n}\n\nrecordingMedia.onchange = function () {\n  if (recordingMedia.value === 'record-audio') {\n    var recordingOptions = [];\n\n    if (isMimeTypeSupported('audio/webm')) {\n      recordingOptions.push('opus');\n    }\n\n    if (isMimeTypeSupported('audio/ogg')) {\n      recordingOptions.push('ogg');\n    }\n\n    recordingOptions.push('pcm');\n    setMediaContainerFormat(recordingOptions);\n    return;\n  }\n\n  var isChrome = !!window.chrome && !(!!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0);\n  var recordingOptions = ['vp8']; // MediaStreamRecorder with vp8\n\n  if (isMimeTypeSupported('video/webm\\;codecs=vp9')) {\n    recordingOptions.push('vp9'); // MediaStreamRecorder with vp9\n  }\n\n  if (isMimeTypeSupported('video/webm\\;codecs=h264')) {\n    recordingOptions.push('h264'); // MediaStreamRecorder with h264\n  }\n\n  if (isMimeTypeSupported('video/x-matroska;codecs=avc1')) {\n    recordingOptions.push('mkv'); // MediaStreamRecorder with mkv/matroska\n  }\n\n  recordingOptions.push('gif'); // GifRecorder\n\n  if (DetectRTC.browser.name == 'Chrome') {\n    recordingOptions.push('whammy'); // WhammyRecorder\n  }\n\n  if (DetectRTC.browser.name == 'Chrome') {\n    recordingOptions.push('WebAssembly'); // WebAssemblyRecorder\n  }\n\n  recordingOptions.push('default'); // Default mimeType for MediaStreamRecorder\n\n  setMediaContainerFormat(recordingOptions);\n};\n\nrecordingMedia.onchange();\n\nif (typeof MediaRecorder === 'undefined' && (DetectRTC.browser.name === 'Edge' || DetectRTC.browser.name === 'Safari')) {\n  // webp isn't supported in Microsoft Edge\n  // neither MediaRecorder API\n  // so lets disable both video/screen recording options\n  console.warn('Neither MediaRecorder API nor webp is supported in ' + DetectRTC.browser.name + '. You cam merely record audio.');\n  recordingMedia.innerHTML = '<option value=\"record-audio\">Audio</option>';\n  setMediaContainerFormat(['pcm']);\n}\n\nfunction stringify(obj) {\n  var result = '';\n  Object.keys(obj).forEach(function (key) {\n    if (typeof obj[key] === 'function') {\n      return;\n    }\n\n    if (result.length) {\n      result += ',';\n    }\n\n    result += key + ': ' + obj[key];\n  });\n  return result;\n}\n\nfunction mediaRecorderToStringify(mediaRecorder) {\n  var result = '';\n  result += 'mimeType: ' + mediaRecorder.mimeType;\n  result += ', state: ' + mediaRecorder.state;\n  result += ', audioBitsPerSecond: ' + mediaRecorder.audioBitsPerSecond;\n  result += ', videoBitsPerSecond: ' + mediaRecorder.videoBitsPerSecond;\n\n  if (mediaRecorder.stream) {\n    result += ', streamid: ' + mediaRecorder.stream.id;\n    result += ', stream-active: ' + mediaRecorder.stream.active;\n  }\n\n  return result;\n}\n\nfunction getFailureReport() {\n  var info = 'RecordRTC seems failed. \\n\\n' + stringify(DetectRTC.browser) + '\\n\\n' + DetectRTC.osName + ' ' + DetectRTC.osVersion + '\\n';\n\n  if (typeof recorderType !== 'undefined' && recorderType) {\n    info += '\\nrecorderType: ' + recorderType.name;\n  }\n\n  if (typeof mimeType !== 'undefined') {\n    info += '\\nmimeType: ' + mimeType;\n  }\n\n  Array.prototype.slice.call(document.querySelectorAll('select')).forEach(function (select) {\n    info += '\\n' + (select.id || select.className) + ': ' + select.value;\n  });\n\n  if (btnStartRecording.recordRTC) {\n    info += '\\n\\ninternal-recorder: ' + btnStartRecording.recordRTC.getInternalRecorder().name;\n\n    if (btnStartRecording.recordRTC.getInternalRecorder().getAllStates) {\n      info += '\\n\\nrecorder-states: ' + btnStartRecording.recordRTC.getInternalRecorder().getAllStates();\n    }\n  }\n\n  if (btnStartRecording.stream) {\n    info += '\\n\\naudio-tracks: ' + getTracks(btnStartRecording.stream, 'audio').length;\n    info += '\\nvideo-tracks: ' + getTracks(btnStartRecording.stream, 'video').length;\n    info += '\\nstream-active? ' + !!btnStartRecording.stream.active;\n    btnStartRecording.stream.getTracks().forEach(function (track) {\n      info += '\\n' + track.kind + '-track-' + (track.label || track.id) + ': (enabled: ' + !!track.enabled + ', readyState: ' + track.readyState + ', muted: ' + !!track.muted + ')';\n\n      if (track.getConstraints && Object.keys(track.getConstraints()).length) {\n        info += '\\n' + track.kind + '-track-getConstraints: ' + stringify(track.getConstraints());\n      }\n\n      if (track.getSettings && Object.keys(track.getSettings()).length) {\n        info += '\\n' + track.kind + '-track-getSettings: ' + stringify(track.getSettings());\n      }\n    });\n  }\n\n  if (timeSlice && btnStartRecording.recordRTC) {\n    info += '\\ntimeSlice: ' + timeSlice;\n\n    if (btnStartRecording.recordRTC.getInternalRecorder().getArrayOfBlobs) {\n      var blobSizes = [];\n      btnStartRecording.recordRTC.getInternalRecorder().getArrayOfBlobs().forEach(function (blob) {\n        blobSizes.push(blob.size);\n      });\n      info += '\\nblobSizes: ' + blobSizes;\n    }\n  } else if (btnStartRecording.recordRTC && btnStartRecording.recordRTC.getBlob()) {\n    info += '\\n\\nblobSize: ' + bytesToSize(btnStartRecording.recordRTC.getBlob().size);\n  }\n\n  if (btnStartRecording.recordRTC && btnStartRecording.recordRTC.getInternalRecorder() && btnStartRecording.recordRTC.getInternalRecorder().getInternalRecorder && btnStartRecording.recordRTC.getInternalRecorder().getInternalRecorder()) {\n    info += '\\n\\ngetInternalRecorder: ' + mediaRecorderToStringify(btnStartRecording.recordRTC.getInternalRecorder().getInternalRecorder());\n  }\n\n  return info;\n}\n\nfunction saveToDiskOrOpenNewTab(recordRTC) {\n  if (!recordRTC.getBlob().size) {\n    var info = getFailureReport();\n    console.log('blob', recordRTC.getBlob());\n    console.log('recordrtc instance', recordRTC);\n    console.log('report', info);\n\n    if (mediaContainerFormat.value !== 'default') {\n      alert('RecordRTC seems failed recording using ' + mediaContainerFormat.value + '. Please choose \"default\" option from the drop down and record again.');\n    } else {\n      alert('RecordRTC seems failed. Unexpected issue. You can read the email in your console log. \\n\\nPlease report using disqus chat below.');\n    }\n\n    if (mediaContainerFormat.value !== 'vp9' && DetectRTC.browser.name === 'Chrome') {\n      alert('Please record using VP9 encoder. (select from the dropdown)');\n    }\n  }\n\n  var fileName = getFileName(fileExtension);\n  document.querySelector('#save-to-disk').parentNode.style.display = 'block';\n\n  document.querySelector('#save-to-disk').onclick = function () {\n    if (!recordRTC) return alert('No recording found.');\n    var file = new File([recordRTC.getBlob()], fileName, {\n      type: mimeType\n    });\n    invokeSaveAsDialog(file, file.name);\n  };\n\n  document.querySelector('#open-new-tab').onclick = function () {\n    if (!recordRTC) return alert('No recording found.');\n    var file = new File([recordRTC.getBlob()], fileName, {\n      type: mimeType\n    });\n    window.open(URL.createObjectURL(file));\n  }; // upload to PHP server\n\n\n  if (isMyOwnDomain()) {\n    document.querySelector('#upload-to-php').disabled = true;\n    document.querySelector('#upload-to-php').style.display = 'none';\n  } else {\n    document.querySelector('#upload-to-php').disabled = false;\n  }\n\n  document.querySelector('#upload-to-php').onclick = function () {\n    if (isMyOwnDomain()) {\n      alert('PHP Upload is not available on this domain.');\n      return;\n    }\n\n    if (!recordRTC) return alert('No recording found.');\n    this.disabled = true;\n    var button = this;\n    uploadToPHPServer(fileName, recordRTC, function (progress, fileURL) {\n      if (progress === 'ended') {\n        button.disabled = false;\n        button.innerHTML = 'Click to download from server';\n\n        button.onclick = function () {\n          SaveFileURLToDisk(fileURL, fileName);\n        };\n\n        setVideoURL(fileURL);\n        var html = 'Uploaded to PHP.<br>Download using below link:<br>';\n        html += '<a href=\"' + fileURL + '\" download=\"' + fileName + '\" style=\"color: yellow; display: block; margin-top: 15px;\">' + fileName + '</a>';\n        recordingPlayer.parentNode.parentNode.querySelector('h2').innerHTML = html;\n        return;\n      }\n\n      button.innerHTML = progress;\n      recordingPlayer.parentNode.parentNode.querySelector('h2').innerHTML = progress;\n    });\n  }; // upload to YouTube!\n\n\n  document.querySelector('#upload-to-youtube').disabled = false;\n\n  document.querySelector('#upload-to-youtube').onclick = function () {\n    if (!recordRTC) return alert('No recording found.');\n    this.disabled = true;\n\n    if (isLocalHost()) {\n      alert('This feature is NOT available on localhost.');\n      return;\n    }\n\n    if (isMyOwnDomain() === false) {\n      var url = 'https://github.com/muaz-khan/RecordRTC/wiki/Upload-to-YouTube';\n      alert('YouTube API key is configured to work only on webrtc-experiment.com. Please create your own YouTube key + oAuth client-id and use it instead.\\n\\nWiki page: ' + url); // check instructions on the wiki page\n\n      location.href = url;\n      return;\n    }\n\n    var button = this;\n    uploadToYouTube(fileName, recordRTC, function (percentageComplete, fileURL) {\n      if (percentageComplete == 'uploaded') {\n        button.disabled = false;\n        button.innerHTML = 'Uploaded. However YouTube is still processing.';\n\n        button.onclick = function () {\n          window.open(fileURL);\n        };\n\n        return;\n      }\n\n      if (percentageComplete == 'processed') {\n        button.disabled = false;\n        button.innerHTML = 'Uploaded & Processed. Click to open YouTube video.';\n\n        button.onclick = function () {\n          window.open(fileURL);\n        };\n\n        document.querySelector('h1').innerHTML = 'Your video has been uploaded.';\n        window.scrollTo(0, 0);\n        alert('Your video has been uploaded.');\n        return;\n      }\n\n      if (percentageComplete == 'failed') {\n        button.disabled = false;\n        button.innerHTML = 'YouTube failed transcoding the video.';\n\n        button.onclick = function () {\n          window.open(fileURL);\n        };\n\n        return;\n      }\n\n      button.innerHTML = percentageComplete + '% uploaded to YouTube.';\n    });\n  };\n}\n\nfunction uploadToPHPServer(fileName, recordRTC, callback) {\n  var blob = recordRTC instanceof Blob ? recordRTC : recordRTC.getBlob();\n  blob = new File([blob], getFileName(fileExtension), {\n    type: mimeType\n  }); // create FormData\n\n  var formData = new FormData();\n  formData.append('video-filename', fileName);\n  formData.append('video-blob', blob);\n  callback('Uploading recorded-file to server.'); // var upload_url = 'https://your-domain.com/files-uploader/';\n\n  var upload_url = 'RecordRTC-to-PHP/save.php'; // var upload_directory = upload_url;\n\n  var upload_directory = 'RecordRTC-to-PHP/uploads/';\n  makeXMLHttpRequest(upload_url, formData, function (progress) {\n    if (progress !== 'upload-ended') {\n      callback(progress);\n      return;\n    }\n\n    callback('ended', upload_directory + fileName);\n  });\n}\n\nfunction makeXMLHttpRequest(url, data, callback) {\n  var request = new XMLHttpRequest();\n\n  request.onreadystatechange = function () {\n    if (request.readyState == 4 && request.status == 200) {\n      if (request.responseText === 'success') {\n        callback('upload-ended');\n        return;\n      }\n\n      document.querySelector('.header').parentNode.style = 'text-align: left; color: red; padding: 5px 10px;';\n      document.querySelector('.header').parentNode.innerHTML = request.responseText;\n    }\n  };\n\n  request.upload.onloadstart = function () {\n    callback('Upload started...');\n  };\n\n  request.upload.onprogress = function (event) {\n    callback('Upload Progress ' + Math.round(event.loaded / event.total * 100) + \"%\");\n  };\n\n  request.upload.onload = function () {\n    callback('progress-about-to-end');\n  };\n\n  request.upload.onload = function () {\n    callback('Getting File URL..');\n  };\n\n  request.upload.onerror = function (error) {\n    callback('Failed to upload to server');\n  };\n\n  request.upload.onabort = function (error) {\n    callback('Upload aborted.');\n  };\n\n  request.open('POST', url);\n  request.send(data);\n}\n\nfunction getRandomString() {\n  if (window.crypto && window.crypto.getRandomValues && navigator.userAgent.indexOf('Safari') === -1) {\n    var a = window.crypto.getRandomValues(new Uint32Array(3)),\n        token = '';\n\n    for (var i = 0, l = a.length; i < l; i++) {\n      token += a[i].toString(36);\n    }\n\n    return token;\n  } else {\n    return (Math.random() * new Date().getTime()).toString(36).replace(/\\./g, '');\n  }\n}\n\nfunction getFileName(fileExtension) {\n  var d = new Date();\n  var year = d.getUTCFullYear();\n  var month = d.getUTCMonth();\n  var date = d.getUTCDate();\n  return 'RecordRTC-' + year + month + date + '-' + getRandomString() + '.' + fileExtension;\n}\n\nfunction SaveFileURLToDisk(fileUrl, fileName) {\n  var hyperlink = document.createElement('a');\n  hyperlink.href = fileUrl;\n  hyperlink.target = '_blank';\n  hyperlink.download = fileName || fileUrl;\n  (document.body || document.documentElement).appendChild(hyperlink);\n\n  hyperlink.onclick = function () {\n    (document.body || document.documentElement).removeChild(hyperlink); // required for Firefox\n\n    window.URL.revokeObjectURL(hyperlink.href);\n  };\n\n  var mouseEvent = new MouseEvent('click', {\n    view: window,\n    bubbles: true,\n    cancelable: true\n  });\n  hyperlink.dispatchEvent(mouseEvent);\n}\n\nfunction getURL(arg) {\n  var url = arg;\n\n  if (arg instanceof Blob || arg instanceof File) {\n    url = URL.createObjectURL(arg);\n  }\n\n  if (arg instanceof RecordRTC || arg.getBlob) {\n    url = URL.createObjectURL(arg.getBlob());\n  }\n\n  if (arg instanceof MediaStream || arg.getTracks) {// url = URL.createObjectURL(arg);\n  }\n\n  return url;\n}\n\nfunction setVideoURL(arg, forceNonImage) {\n  var url = getURL(arg);\n  var parentNode = recordingPlayer.parentNode;\n  parentNode.removeChild(recordingPlayer);\n  parentNode.innerHTML = '';\n  var elem = 'video';\n\n  if (type == 'gif' && !forceNonImage) {\n    elem = 'img';\n  }\n\n  if (type == 'audio') {\n    elem = 'audio';\n  }\n\n  recordingPlayer = document.createElement(elem);\n\n  if (arg instanceof MediaStream) {\n    recordingPlayer.muted = true;\n  }\n\n  recordingPlayer.addEventListener('loadedmetadata', function () {\n    if (navigator.userAgent.toLowerCase().indexOf('android') == -1) return; // android\n\n    setTimeout(function () {\n      if (typeof recordingPlayer.play === 'function') {\n        recordingPlayer.play();\n      }\n    }, 2000);\n  }, false);\n  recordingPlayer.poster = '';\n\n  if (arg instanceof MediaStream) {\n    recordingPlayer.srcObject = arg;\n  } else {\n    recordingPlayer.src = url;\n  }\n\n  if (typeof recordingPlayer.play === 'function') {\n    recordingPlayer.play();\n  }\n\n  recordingPlayer.addEventListener('ended', function () {\n    url = getURL(arg);\n\n    if (arg instanceof MediaStream) {\n      recordingPlayer.srcObject = arg;\n    } else {\n      recordingPlayer.src = url;\n    }\n  });\n  parentNode.appendChild(recordingPlayer);\n}\n\nfunction captureScreen(config) {\n  if (navigator.getDisplayMedia) {\n    navigator.getDisplayMedia({\n      video: true\n    }).then(screenStream => {\n      config.onMediaCaptured(screenStream);\n      addStreamStopListener(screenStream, function () {\n        // config.onMediaStopped();\n        btnStartRecording.onclick();\n      });\n      setVideoURL(screenStream, true);\n    }).catch(function (error) {\n      config.onMediaCapturingFailed(error);\n    });\n  } else if (navigator.mediaDevices.getDisplayMedia) {\n    navigator.mediaDevices.getDisplayMedia({\n      video: true\n    }).then(screenStream => {\n      config.onMediaCaptured(screenStream);\n      addStreamStopListener(screenStream, function () {\n        // config.onMediaStopped();\n        btnStartRecording.onclick();\n      });\n      setVideoURL(screenStream, true);\n    }).catch(function (error) {\n      config.onMediaCapturingFailed(error);\n    });\n  } else {\n    var error = 'getDisplayMedia API are not supported in this browser.';\n    config.onMediaCapturingFailed(error);\n    alert(error);\n  }\n}\n\nfunction captureAudioPlusScreen(config) {\n  if (navigator.getDisplayMedia) {\n    navigator.getDisplayMedia({\n      video: true\n    }).then(screenStream => {\n      navigator.mediaDevices.getUserMedia({\n        audio: true\n      }).then(function (mic) {\n        screenStream.addTrack(mic.getTracks()[0]);\n        config.onMediaCaptured(screenStream);\n        addStreamStopListener(screenStream, function () {\n          // config.onMediaStopped();\n          btnStartRecording.onclick();\n        });\n        setVideoURL(screenStream, true);\n      });\n    }).catch(function (error) {\n      config.onMediaCapturingFailed(error);\n    });\n  } else if (navigator.mediaDevices.getDisplayMedia) {\n    navigator.mediaDevices.getDisplayMedia({\n      video: true\n    }).then(screenStream => {\n      navigator.mediaDevices.getUserMedia({\n        audio: true\n      }).then(function (mic) {\n        screenStream.addTrack(mic.getTracks()[0]);\n        config.onMediaCaptured(screenStream);\n        addStreamStopListener(screenStream, function () {\n          // config.onMediaStopped();\n          btnStartRecording.onclick();\n        });\n        setVideoURL(screenStream, true);\n      });\n    }).catch(function (error) {\n      config.onMediaCapturingFailed(error);\n    });\n  } else {\n    var error = 'getDisplayMedia API are not supported in this browser.';\n    config.onMediaCapturingFailed(error);\n    alert(error);\n  }\n}\n\nfunction uploadToYouTube(fileName, recordRTC, callback) {\n  var blob = recordRTC instanceof Blob ? recordRTC : recordRTC.getBlob();\n  blob = new File([blob], getFileName(fileExtension), {\n    type: mimeType\n  });\n\n  if (!uploadVideo) {\n    alert('YouTube API are not available.');\n    return;\n  }\n\n  uploadVideo.callback = callback;\n  uploadVideo.uploadFile(fileName, blob);\n}\n\nvar uploadVideo;\n\nvar signinCallback = function (result) {\n  if (result.access_token) {\n    uploadVideo = new UploadVideo();\n    uploadVideo.ready(result.access_token);\n    document.querySelector('#signinButton').style.display = 'none';\n  } else {// console.error('YouTube error', result);\n    // document.querySelector('#upload-to-youtube').style.display = 'none';\n  }\n};\n\nvar STATUS_POLLING_INTERVAL_MILLIS = 60 * 1000; // One minute.\n\nvar UploadVideo = function () {\n  this.tags = ['recordrtc'];\n  this.categoryId = 28; // via: http://stackoverflow.com/a/35877512/552182\n\n  this.videoId = '';\n  this.uploadStartTime = 0;\n};\n\nUploadVideo.prototype.ready = function (accessToken) {\n  this.accessToken = accessToken;\n  this.gapi = gapi;\n  this.authenticated = true;\n  false && this.gapi.client.request({\n    path: '/youtube/v3/channels',\n    params: {\n      part: 'snippet',\n      mine: true\n    },\n    callback: function (response) {\n      if (!response.error) {// response.items[0].snippet.title -- channel title\n        // response.items[0].snippet.thumbnails.default.url -- channel thumbnail\n      }\n    }.bind(this)\n  });\n};\n\nUploadVideo.prototype.uploadFile = function (fileName, file) {\n  var metadata = {\n    snippet: {\n      title: fileName,\n      description: fileName,\n      tags: this.tags,\n      categoryId: this.categoryId\n    },\n    status: {\n      privacyStatus: 'public'\n    }\n  };\n  var uploader = new MediaUploader({\n    baseUrl: 'http://127.0.0.1:3333/video',\n    file: file,\n    token: this.accessToken,\n    metadata: metadata,\n    params: {\n      part: Object.keys(metadata).join(',')\n    },\n    onError: function (data) {\n      var message = data;\n\n      try {\n        var errorResponse = JSON.parse(data);\n        message = errorResponse.error.message;\n      } finally {\n        alert(message);\n      }\n    }.bind(this),\n    onProgress: function (data) {\n      var bytesUploaded = data.loaded;\n      var totalBytes = parseInt(data.total);\n      var percentageComplete = parseInt(bytesUploaded * 100 / totalBytes);\n      uploadVideo.callback(percentageComplete);\n    }.bind(this),\n    onComplete: function (data) {\n      var uploadResponse = JSON.parse(data);\n      this.videoId = uploadResponse.id;\n      this.videoURL = 'https://www.youtube.com/watch?v=' + this.videoId;\n      uploadVideo.callback('uploaded', this.videoURL);\n      setTimeout(this.pollForVideoStatus, 2000);\n    }.bind(this)\n  });\n  this.uploadStartTime = Date.now();\n  uploader.upload();\n};\n\nUploadVideo.prototype.pollForVideoStatus = function () {\n  this.gapi.client.request({\n    path: '/youtube/v3/videos',\n    params: {\n      part: 'status,player',\n      id: this.videoId\n    },\n    callback: function (response) {\n      if (response.error) {\n        uploadVideo.pollForVideoStatus();\n      } else {\n        var uploadStatus = response.items[0].status.uploadStatus;\n\n        switch (uploadStatus) {\n          case 'uploaded':\n            uploadVideo.callback('uploaded', uploadVideo.videoURL);\n            uploadVideo.pollForVideoStatus();\n            break;\n\n          case 'processed':\n            uploadVideo.callback('processed', uploadVideo.videoURL);\n            break;\n\n          default:\n            uploadVideo.callback('failed', uploadVideo.videoURL);\n            break;\n        }\n      }\n    }.bind(this)\n  });\n};\n\nvar DRIVE_UPLOAD_URL = 'https://www.googleapis.com/upload/drive/v2/files/';\n\nvar RetryHandler = function () {\n  this.interval = 1000; // Start at one second\n\n  this.maxInterval = 60 * 1000; // Don't wait longer than a minute\n};\n\nRetryHandler.prototype.retry = function (fn) {\n  setTimeout(fn, this.interval);\n  this.interval = this.nextInterval_();\n};\n\nRetryHandler.prototype.reset = function () {\n  this.interval = 1000;\n};\n\nRetryHandler.prototype.nextInterval_ = function () {\n  var interval = this.interval * 2 + this.getRandomInt_(0, 1000);\n  return Math.min(interval, this.maxInterval);\n};\n\nRetryHandler.prototype.getRandomInt_ = function (min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nvar MediaUploader = function (options) {\n  var noop = function () {};\n\n  this.file = options.file;\n  this.contentType = options.contentType || this.file.type || 'application/octet-stream';\n  this.metadata = options.metadata || {\n    'title': this.file.name,\n    'mimeType': this.contentType\n  };\n  this.token = options.token;\n  this.onComplete = options.onComplete || noop;\n  this.onProgress = options.onProgress || noop;\n  this.onError = options.onError || noop;\n  this.offset = options.offset || 0;\n  this.chunkSize = options.chunkSize || 0;\n  this.retryHandler = new RetryHandler();\n  this.url = options.url;\n\n  if (!this.url) {\n    var params = options.params || {};\n    params.uploadType = 'resumable';\n    this.url = this.buildUrl_(options.fileId, params, options.baseUrl);\n  }\n\n  this.httpMethod = options.fileId ? 'PUT' : 'POST';\n};\n\nMediaUploader.prototype.upload = function () {\n  var self = this;\n  var xhr = new XMLHttpRequest();\n  xhr.open(this.httpMethod, this.url, true);\n  xhr.setRequestHeader('Authorization', 'Bearer ' + this.token);\n  xhr.setRequestHeader('Content-Type', 'application/json');\n  xhr.setRequestHeader('X-Upload-Content-Length', this.file.size);\n  xhr.setRequestHeader('X-Upload-Content-Type', this.contentType);\n\n  xhr.onload = function (e) {\n    if (e.target.status < 400) {\n      var location = e.target.getResponseHeader('Location');\n      this.url = location;\n      this.sendFile_();\n    } else {\n      this.onUploadError_(e);\n    }\n  }.bind(this);\n\n  xhr.onerror = this.onUploadError_.bind(this);\n  xhr.send(JSON.stringify(this.metadata));\n};\n\nMediaUploader.prototype.sendFile_ = function () {\n  var content = this.file;\n  var end = this.file.size;\n\n  if (this.offset || this.chunkSize) {\n    // Only bother to slice the file if we're either resuming or uploading in chunks\n    if (this.chunkSize) {\n      end = Math.min(this.offset + this.chunkSize, this.file.size);\n    }\n\n    content = content.slice(this.offset, end);\n  }\n\n  var xhr = new XMLHttpRequest();\n  xhr.open('PUT', this.url, true);\n  xhr.setRequestHeader('Content-Type', this.contentType);\n  xhr.setRequestHeader('Content-Range', 'bytes ' + this.offset + '-' + (end - 1) + '/' + this.file.size);\n  xhr.setRequestHeader('X-Upload-Content-Type', this.file.type);\n\n  if (xhr.upload) {\n    xhr.upload.addEventListener('progress', this.onProgress);\n  }\n\n  xhr.onload = this.onContentUploadSuccess_.bind(this);\n  xhr.onerror = this.onContentUploadError_.bind(this);\n  xhr.send(content);\n};\n\nMediaUploader.prototype.resume_ = function () {\n  var xhr = new XMLHttpRequest();\n  xhr.open('PUT', this.url, true);\n  xhr.setRequestHeader('Content-Range', 'bytes */' + this.file.size);\n  xhr.setRequestHeader('X-Upload-Content-Type', this.file.type);\n\n  if (xhr.upload) {\n    xhr.upload.addEventListener('progress', this.onProgress);\n  }\n\n  xhr.onload = this.onContentUploadSuccess_.bind(this);\n  xhr.onerror = this.onContentUploadError_.bind(this);\n  xhr.send();\n};\n\nMediaUploader.prototype.extractRange_ = function (xhr) {\n  var range = xhr.getResponseHeader('Range');\n\n  if (range) {\n    this.offset = parseInt(range.match(/\\d+/g).pop(), 10) + 1;\n  }\n};\n\nMediaUploader.prototype.onContentUploadSuccess_ = function (e) {\n  if (e.target.status == 200 || e.target.status == 201) {\n    this.onComplete(e.target.response);\n  } else if (e.target.status == 308) {\n    this.extractRange_(e.target);\n    this.retryHandler.reset();\n    this.sendFile_();\n  }\n};\n\nMediaUploader.prototype.onContentUploadError_ = function (e) {\n  if (e.target.status && e.target.status < 500) {\n    this.onError(e.target.response);\n  } else {\n    this.retryHandler.retry(this.resume_.bind(this));\n  }\n};\n\nMediaUploader.prototype.onUploadError_ = function (e) {\n  this.onError(e.target.response); // TODO - Retries for initial upload\n};\n\nMediaUploader.prototype.buildQuery_ = function (params) {\n  params = params || {};\n  return Object.keys(params).map(function (key) {\n    return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n  }).join('&');\n};\n\nMediaUploader.prototype.buildUrl_ = function (id, params, baseUrl) {\n  var url = baseUrl || DRIVE_UPLOAD_URL;\n\n  if (id) {\n    url += id;\n  }\n\n  var query = this.buildQuery_(params);\n\n  if (query) {\n    url += '?' + query;\n  }\n\n  return url;\n};\n\nvar chkFixSeeking = document.querySelector('#chk-fixSeeking');\n\nchkFixSeeking.onchange = function () {\n  if (this.checked === true) {\n    localStorage.setItem(this.id, 'true');\n  } else {\n    localStorage.removeItem(this.id);\n  }\n};\n\nif (localStorage.getItem(chkFixSeeking.id) === 'true') {\n  chkFixSeeking.checked = true;\n}\n\nvar chkTimeSlice = document.querySelector('#chk-timeSlice');\nvar timeSlice = false;\n\nif (typeof MediaRecorder === 'undefined') {\n  chkTimeSlice.disabled = true;\n}\n\nchkTimeSlice.addEventListener('change', function () {\n  if (chkTimeSlice.checked === true) {\n    var _timeSlice = prompt('Please enter timeSlice in milliseconds e.g. 1000 or 2000 or 3000.', 1000);\n\n    _timeSlice = parseInt(_timeSlice);\n\n    if (!_timeSlice || _timeSlice == NaN || typeof _timeSlice === 'undefined') {\n      timeSlice = false;\n      return;\n    }\n\n    timeSlice = _timeSlice;\n  } else {\n    timeSlice = false;\n  }\n}, false);\nvar btnPauseRecording = document.querySelector('#btn-pause-recording');\n\nbtnPauseRecording.onclick = function () {\n  if (!btnStartRecording.recordRTC) {\n    btnPauseRecording.style.display = 'none';\n    return;\n  }\n\n  btnPauseRecording.disabled = true;\n\n  if (btnPauseRecording.innerHTML === 'Pause') {\n    btnStartRecording.disabled = true;\n    chkFixSeeking.parentNode.style.display = 'none';\n    btnStartRecording.style.fontSize = '15px';\n    btnStartRecording.recordRTC.pauseRecording();\n    recordingPlayer.parentNode.parentNode.querySelector('h2').innerHTML = 'Recording status: paused';\n    recordingPlayer.pause();\n    btnPauseRecording.style.fontSize = 'inherit';\n    setTimeout(function () {\n      btnPauseRecording.innerHTML = 'Resume Recording';\n      btnPauseRecording.disabled = false;\n    }, 2000);\n  }\n\n  if (btnPauseRecording.innerHTML === 'Resume Recording') {\n    btnStartRecording.disabled = false;\n    chkFixSeeking.parentNode.style.display = 'none';\n    btnStartRecording.style.fontSize = 'inherit';\n    btnStartRecording.recordRTC.resumeRecording();\n    recordingPlayer.parentNode.parentNode.querySelector('h2').innerHTML = '<img src=\"https://cdn.webrtc-experiment.com/images/progress.gif\">';\n    recordingPlayer.play();\n    btnPauseRecording.style.fontSize = '15px';\n    btnPauseRecording.innerHTML = 'Pause';\n    setTimeout(function () {\n      btnPauseRecording.disabled = false;\n    }, 2000);\n  }\n};","map":{"version":3,"sources":["imports/ui/pages/this/this.js"],"names":["module","link","ReactiveVar","v","params","r","d","s","decodeURIComponent","replace","match","search","window","location","exec","substring","addStreamStopListener","stream","callback","addEventListener","getTracks","forEach","track","video","document","createElement","controls","mediaElement","getHTMLMediaElement","title","buttons","showOnMouseEnter","width","onTakeSnapshot","canvas","clientWidth","height","clientHeight","context","getContext","drawImage","recordingPlayer","open","toDataURL","getElementById","appendChild","div","media","parentNode","muted","autoplay","playsinline","recordingMedia","querySelector","mediaContainerFormat","mimeType","fileExtension","type","recorderType","defaultWidth","defaultHeight","btnStartRecording","onbeforeunload","disabled","chkFixSeeking","style","display","onclick","event","button","innerHTML","btnPauseRecording","disableStateWaiting","setTimeout","stopStream","stop","Array","videoBitsPerSecond","html","bytesToSize","recordRTC","getBlob","size","length","stopRecording","url","recordingEndedCallback","saveToDiskOrOpenNewTab","blobs","blob","File","getFileName","URL","createObjectURL","checked","getSeekableBlob","seekableBlob","commonConfig","onMediaCaptured","mediaCapturedCallback","onMediaStopped","onMediaCapturingFailed","error","console","toString","indexOf","alert","name","DetectRTC","browser","value","isMimeTypeSupported","StereoAudioRecorder","WhammyRecorder","WebAssemblyRecorder","GifRecorder","captureAudio","options","leftChannel","disableLogs","sampleRate","parseInt","bufferSize","numberOfAudioChannels","ignoreMutedMedia","RecordRTC","setVideoURL","startRecording","captureAudioPlusVideo","MediaRecorder","frameInterval","audioRecorder","videoRecorder","initRecorder","push","audio","Audio","src","toURL","paused","play","getNativeBlob","timeSlice","ondataavailable","captureScreen","captureAudioPlusScreen","captureVideo","config","captureUserMedia","videoStream","audioStream","audioVideoStream","MY_DOMAIN","isMyOwnDomain","domain","isLocalHost","setVideoBitrates","select","getFrameRates","mediaConstraints","frameRate","mandatory","optional","isScreen","toLowerCase","maxFrameRate","minFrameRate","setGetFromLocalStorage","selectors","selector","storageItem","localStorage","getItem","addEventListenerToUploadLocalStorageItem","setItem","arr","getVideoResolutions","split","maxWidth","maxHeight","minWidth","minHeight","successCallback","errorCallback","isBlackBerry","test","navigator","userAgent","getUserMedia","webkitGetUserMedia","mozGetUserMedia","mediaDevices","then","catch","message","setMediaContainerFormat","arrayOfOptionsSupported","prototype","slice","call","querySelectorAll","localStorageItem","selectedItem","option","selected","isTypeSupported","onchange","recordingOptions","isChrome","chrome","opera","warn","stringify","obj","result","Object","keys","key","mediaRecorderToStringify","mediaRecorder","state","audioBitsPerSecond","id","active","getFailureReport","info","osName","osVersion","className","getInternalRecorder","getAllStates","kind","label","enabled","readyState","getConstraints","getSettings","getArrayOfBlobs","blobSizes","log","fileName","file","invokeSaveAsDialog","uploadToPHPServer","progress","fileURL","SaveFileURLToDisk","href","uploadToYouTube","percentageComplete","scrollTo","Blob","formData","FormData","append","upload_url","upload_directory","makeXMLHttpRequest","data","request","XMLHttpRequest","onreadystatechange","status","responseText","upload","onloadstart","onprogress","Math","round","loaded","total","onload","onerror","onabort","send","getRandomString","crypto","getRandomValues","a","Uint32Array","token","i","l","random","Date","getTime","year","getUTCFullYear","month","getUTCMonth","date","getUTCDate","fileUrl","hyperlink","target","download","body","documentElement","removeChild","revokeObjectURL","mouseEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","getURL","arg","MediaStream","forceNonImage","elem","poster","srcObject","getDisplayMedia","screenStream","mic","addTrack","uploadVideo","uploadFile","signinCallback","access_token","UploadVideo","ready","STATUS_POLLING_INTERVAL_MILLIS","tags","categoryId","videoId","uploadStartTime","accessToken","gapi","authenticated","client","path","part","mine","response","bind","metadata","snippet","description","privacyStatus","uploader","MediaUploader","baseUrl","join","onError","errorResponse","JSON","parse","onProgress","bytesUploaded","totalBytes","onComplete","uploadResponse","videoURL","pollForVideoStatus","now","uploadStatus","items","DRIVE_UPLOAD_URL","RetryHandler","interval","maxInterval","retry","fn","nextInterval_","reset","getRandomInt_","min","max","floor","noop","contentType","offset","chunkSize","retryHandler","uploadType","buildUrl_","fileId","httpMethod","self","xhr","setRequestHeader","e","getResponseHeader","sendFile_","onUploadError_","content","end","onContentUploadSuccess_","onContentUploadError_","resume_","extractRange_","range","pop","buildQuery_","map","encodeURIComponent","query","removeItem","chkTimeSlice","_timeSlice","prompt","NaN","fontSize","pauseRecording","pause","resumeRecording"],"mappings":"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","sourcesContent":["import './about.html';\r\n\r\nimport { ReactiveVar } from 'meteor/reactive-var';\r\n\r\n\r\n(function() {\r\n    var params = {},\r\n        r = /([^&=]+)=?([^&]*)/g;\r\n\r\n    function d(s) {\r\n        return decodeURIComponent(s.replace(/\\+/g, ' '));\r\n    }\r\n\r\n    var match, search = window.location.search;\r\n    while (match = r.exec(search.substring(1))) {\r\n        params[d(match[1])] = d(match[2]);\r\n\r\n        if(d(match[2]) === 'true' || d(match[2]) === 'false') {\r\n            params[d(match[1])] = d(match[2]) === 'true' ? true : false;\r\n        }\r\n    }\r\n\r\n    window.params = params;\r\n})();\r\n\r\nfunction addStreamStopListener(stream, callback) {\r\n    stream.addEventListener('ended', function() {\r\n        callback();\r\n        callback = function() {};\r\n    }, false);\r\n    stream.addEventListener('inactive', function() {\r\n        callback();\r\n        callback = function() {};\r\n    }, false);\r\n    stream.getTracks().forEach(function(track) {\r\n        track.addEventListener('ended', function() {\r\n            callback();\r\n            callback = function() {};\r\n        }, false);\r\n        track.addEventListener('inactive', function() {\r\n            callback();\r\n            callback = function() {};\r\n        }, false);\r\n    });\r\n}\r\nvar video = document.createElement('video');\r\nvideo.controls = false;\r\nvar mediaElement = getHTMLMediaElement(video, {\r\n    title: 'Recording status: inactive',\r\n    buttons: ['full-screen'/*, 'take-snapshot'*/],\r\n    showOnMouseEnter: false,\r\n    width: 360,\r\n    onTakeSnapshot: function() {\r\n        var canvas = document.createElement('canvas');\r\n        canvas.width = mediaElement.clientWidth;\r\n        canvas.height = mediaElement.clientHeight;\r\n\r\n        var context = canvas.getContext('2d');\r\n        context.drawImage(recordingPlayer, 0, 0, canvas.width, canvas.height);\r\n\r\n        window.open(canvas.toDataURL('image/png'));\r\n    }\r\n});\r\ndocument.getElementById('recording-player').appendChild(mediaElement);\r\n\r\nvar div = document.createElement('section');\r\nmediaElement.media.parentNode.appendChild(div);\r\nmediaElement.media.muted = false;\r\nmediaElement.media.autoplay = true;\r\nmediaElement.media.playsinline = true;\r\ndiv.appendChild(mediaElement.media);\r\n\r\nvar recordingPlayer = mediaElement.media;\r\nvar recordingMedia = document.querySelector('.recording-media');\r\nvar mediaContainerFormat = document.querySelector('.media-container-format');\r\nvar mimeType = 'video/webm';\r\nvar fileExtension = 'webm';\r\nvar type = 'video';\r\nvar recorderType;\r\nvar defaultWidth;\r\nvar defaultHeight;\r\n\r\nvar btnStartRecording = document.querySelector('#btn-start-recording');\r\n\r\nwindow.onbeforeunload = function() {\r\n    btnStartRecording.disabled = false;\r\n    recordingMedia.disabled = false;\r\n    mediaContainerFormat.disabled = false;\r\n\r\n    chkFixSeeking.parentNode.style.display = 'inline-block';\r\n};\r\n\r\nbtnStartRecording.onclick = function(event) {\r\n    var button = btnStartRecording;\r\n\r\n    if(button.innerHTML === 'Stop Recording') {\r\n        btnPauseRecording.style.display = 'none';\r\n        button.disabled = true;\r\n        button.disableStateWaiting = true;\r\n        setTimeout(function() {\r\n            button.disabled = false;\r\n            button.disableStateWaiting = false;\r\n        }, 2000);\r\n\r\n        button.innerHTML = 'Start Recording';\r\n\r\n        function stopStream() {\r\n            if(button.stream && button.stream.stop) {\r\n                button.stream.stop();\r\n                button.stream = null;\r\n            }\r\n\r\n            if(button.stream instanceof Array) {\r\n                button.stream.forEach(function(stream) {\r\n                    stream.stop();\r\n                });\r\n                button.stream = null;\r\n            }\r\n\r\n            videoBitsPerSecond = null;\r\n            var html = 'Recording status: stopped';\r\n            html += '<br>Size: ' + bytesToSize(button.recordRTC.getBlob().size);\r\n            recordingPlayer.parentNode.parentNode.querySelector('h2').innerHTML = html;\r\n        }\r\n\r\n        if(button.recordRTC) {\r\n            if(button.recordRTC.length) {\r\n                button.recordRTC[0].stopRecording(function(url) {\r\n                    if(!button.recordRTC[1]) {\r\n                        button.recordingEndedCallback(url);\r\n                        stopStream();\r\n\r\n                        saveToDiskOrOpenNewTab(button.recordRTC[0]);\r\n                        return;\r\n                    }\r\n\r\n                    button.recordRTC[1].stopRecording(function(url) {\r\n                        button.recordingEndedCallback(url);\r\n                        stopStream();\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                button.recordRTC.stopRecording(function(url) {\r\n                    if(button.blobs && button.blobs.length) {\r\n                        var blob = new File(button.blobs, getFileName(fileExtension), {\r\n                            type: mimeType\r\n                        });\r\n\r\n                        button.recordRTC.getBlob = function() {\r\n                            return blob;\r\n                        };\r\n\r\n                        url = URL.createObjectURL(blob);\r\n                    }\r\n\r\n                    if(chkFixSeeking.checked === true) {\r\n                        // to fix video seeking issues\r\n                        getSeekableBlob(button.recordRTC.getBlob(), function(seekableBlob) {\r\n                            button.recordRTC.getBlob = function() {\r\n                                return seekableBlob;\r\n                            };\r\n\r\n                            url = URL.createObjectURL(seekableBlob);\r\n\r\n                            button.recordingEndedCallback(url);\r\n                            saveToDiskOrOpenNewTab(button.recordRTC);\r\n                            stopStream();\r\n                        })\r\n                        return;\r\n                    }\r\n\r\n                    button.recordingEndedCallback(url);\r\n                    saveToDiskOrOpenNewTab(button.recordRTC);\r\n                    stopStream();\r\n                });\r\n            }\r\n        }\r\n        return;\r\n    }\r\n    if(!event) return;\r\n\r\n    button.disabled = true;\r\n\r\n    var commonConfig = {\r\n        onMediaCaptured: function(stream) {\r\n            button.stream = stream;\r\n            if(button.mediaCapturedCallback) {\r\n                button.mediaCapturedCallback();\r\n            }\r\n\r\n            button.innerHTML = 'Stop Recording';\r\n            button.disabled = false;\r\n\r\n            chkFixSeeking.parentNode.style.display = 'none';\r\n        },\r\n        onMediaStopped: function() {\r\n            button.innerHTML = 'Start Recording';\r\n\r\n            if(!button.disableStateWaiting) {\r\n                button.disabled = false;\r\n            }\r\n\r\n            chkFixSeeking.parentNode.style.display = 'inline-block';\r\n        },\r\n        onMediaCapturingFailed: function(error) {\r\n            console.error('onMediaCapturingFailed:', error);\r\n\r\n            if(error.toString().indexOf('no audio or video tracks available') !== -1) {\r\n                alert('RecordRTC failed to start because there are no audio or video tracks available.');\r\n            }\r\n\r\n            if(error.name === 'PermissionDeniedError' && DetectRTC.browser.name === 'Firefox') {\r\n                alert('Firefox requires version >= 52. Firefox also requires HTTPs.');\r\n            }\r\n\r\n            commonConfig.onMediaStopped();\r\n        }\r\n    };\r\n\r\n    if(mediaContainerFormat.value === 'h264') {\r\n        mimeType = 'video/webm\\;codecs=h264';\r\n        fileExtension = 'mp4';\r\n\r\n        // video/mp4;codecs=avc1\r\n        if(isMimeTypeSupported('video/mpeg')) {\r\n            mimeType = 'video/mpeg';\r\n        }\r\n    }\r\n\r\n    if(mediaContainerFormat.value === 'mkv' && isMimeTypeSupported('video/x-matroska;codecs=avc1')) {\r\n        mimeType = 'video/x-matroska;codecs=avc1';\r\n        fileExtension = 'mkv';\r\n    }\r\n\r\n    if(mediaContainerFormat.value === 'vp8' && isMimeTypeSupported('video/webm\\;codecs=vp8')) {\r\n        mimeType = 'video/webm\\;codecs=vp8';\r\n        fileExtension = 'webm';\r\n        recorderType = null;\r\n        type = 'video';\r\n    }\r\n\r\n    if(mediaContainerFormat.value === 'vp9' && isMimeTypeSupported('video/webm\\;codecs=vp9')) {\r\n        mimeType = 'video/webm\\;codecs=vp9';\r\n        fileExtension = 'webm';\r\n        recorderType = null;\r\n        type = 'video';\r\n    }\r\n\r\n    if(mediaContainerFormat.value === 'pcm') {\r\n        mimeType = 'audio/wav';\r\n        fileExtension = 'wav';\r\n        recorderType = StereoAudioRecorder;\r\n        type = 'audio';\r\n    }\r\n\r\n    if(mediaContainerFormat.value === 'opus' || mediaContainerFormat.value === 'ogg') {\r\n        if(isMimeTypeSupported('audio/webm')) {\r\n            mimeType = 'audio/webm';\r\n            fileExtension = 'webm'; // webm\r\n        }\r\n\r\n        if(isMimeTypeSupported('audio/ogg')) {\r\n            mimeType = 'audio/ogg; codecs=opus';\r\n            fileExtension = 'ogg'; // ogg\r\n        }\r\n\r\n        recorderType = null;\r\n        type = 'audio';\r\n    }\r\n\r\n    if(mediaContainerFormat.value === 'whammy') {\r\n        mimeType = 'video/webm';\r\n        fileExtension = 'webm';\r\n        recorderType = WhammyRecorder;\r\n        type = 'video';\r\n    }\r\n\r\n    if(mediaContainerFormat.value === 'WebAssembly') {\r\n        mimeType = 'video/webm';\r\n        fileExtension = 'webm';\r\n        recorderType = WebAssemblyRecorder;\r\n        type = 'video';\r\n    }\r\n\r\n    if(mediaContainerFormat.value === 'gif') {\r\n        mimeType = 'image/gif';\r\n        fileExtension = 'gif';\r\n        recorderType = GifRecorder;\r\n        type = 'gif';\r\n    }\r\n\r\n    if(mediaContainerFormat.value === 'default') {\r\n        mimeType = 'video/webm';\r\n        fileExtension = 'webm';\r\n        recorderType = null;\r\n        type = 'video';\r\n    }\r\n\r\n    if(recordingMedia.value === 'record-audio') {\r\n        captureAudio(commonConfig);\r\n\r\n        button.mediaCapturedCallback = function() {\r\n            var options = {\r\n                type: type,\r\n                mimeType: mimeType,\r\n                leftChannel: params.leftChannel || false,\r\n                disableLogs: params.disableLogs || false\r\n            };\r\n\r\n            if(params.sampleRate) {\r\n                options.sampleRate = parseInt(params.sampleRate);\r\n            }\r\n\r\n            if(params.bufferSize) {\r\n                options.bufferSize = parseInt(params.bufferSize);\r\n            }\r\n\r\n            if(recorderType) {\r\n                options.recorderType = recorderType;\r\n            }\r\n\r\n            if(videoBitsPerSecond) {\r\n                options.videoBitsPerSecond = videoBitsPerSecond;\r\n            }\r\n\r\n            if(DetectRTC.browser.name === 'Edge') {\r\n                options.numberOfAudioChannels = 1;\r\n            }\r\n\r\n            options.ignoreMutedMedia = false;\r\n            button.recordRTC = RecordRTC(button.stream, options);\r\n\r\n            button.recordingEndedCallback = function(url) {\r\n                setVideoURL(url);\r\n            };\r\n\r\n            button.recordRTC.startRecording();\r\n            btnPauseRecording.style.display = '';\r\n        };\r\n    }\r\n\r\n    if(recordingMedia.value === 'record-audio-plus-video') {\r\n        captureAudioPlusVideo(commonConfig);\r\n\r\n        button.mediaCapturedCallback = function() {\r\n            if(typeof MediaRecorder === 'undefined') { // opera or chrome etc.\r\n                button.recordRTC = [];\r\n\r\n                if(!params.bufferSize) {\r\n                    // it fixes audio issues whilst recording 720p\r\n                    params.bufferSize = 16384;\r\n                }\r\n\r\n                var options = {\r\n                    type: 'audio', // hard-code to set \"audio\"\r\n                    leftChannel: params.leftChannel || false,\r\n                    disableLogs: params.disableLogs || false,\r\n                    video: recordingPlayer\r\n                };\r\n\r\n                if(params.sampleRate) {\r\n                    options.sampleRate = parseInt(params.sampleRate);\r\n                }\r\n\r\n                if(params.bufferSize) {\r\n                    options.bufferSize = parseInt(params.bufferSize);\r\n                }\r\n\r\n                if(params.frameInterval) {\r\n                    options.frameInterval = parseInt(params.frameInterval);\r\n                }\r\n\r\n                if(recorderType) {\r\n                    options.recorderType = recorderType;\r\n                }\r\n\r\n                if(videoBitsPerSecond) {\r\n                    options.videoBitsPerSecond = videoBitsPerSecond;\r\n                }\r\n\r\n                options.ignoreMutedMedia = false;\r\n                var audioRecorder = RecordRTC(button.stream, options);\r\n\r\n                options.type = type;\r\n                var videoRecorder = RecordRTC(button.stream, options);\r\n\r\n                // to sync audio/video playbacks in browser!\r\n                videoRecorder.initRecorder(function() {\r\n                    audioRecorder.initRecorder(function() {\r\n                        audioRecorder.startRecording();\r\n                        videoRecorder.startRecording();\r\n                        btnPauseRecording.style.display = '';\r\n                    });\r\n                });\r\n\r\n                button.recordRTC.push(audioRecorder, videoRecorder);\r\n\r\n                button.recordingEndedCallback = function() {\r\n                    var audio = new Audio();\r\n                    audio.src = audioRecorder.toURL();\r\n                    audio.controls = true;\r\n                    audio.autoplay = true;\r\n\r\n                    recordingPlayer.parentNode.appendChild(document.createElement('hr'));\r\n                    recordingPlayer.parentNode.appendChild(audio);\r\n\r\n                    if(audio.paused) audio.play();\r\n                };\r\n                return;\r\n            }\r\n\r\n            var options = {\r\n                type: type,\r\n                mimeType: mimeType,\r\n                disableLogs: params.disableLogs || false,\r\n                getNativeBlob: false, // enable it for longer recordings\r\n                video: recordingPlayer\r\n            };\r\n\r\n            if(recorderType) {\r\n                options.recorderType = recorderType;\r\n\r\n                if(recorderType == WhammyRecorder || recorderType == GifRecorder || recorderType == WebAssemblyRecorder) {\r\n                    options.canvas = options.video = {\r\n                        width: defaultWidth || 320,\r\n                        height: defaultHeight || 240\r\n                    };\r\n                }\r\n            }\r\n\r\n            if(videoBitsPerSecond) {\r\n                options.videoBitsPerSecond = videoBitsPerSecond;\r\n            }\r\n\r\n            if(timeSlice && typeof MediaRecorder !== 'undefined') {\r\n                options.timeSlice = timeSlice;\r\n                button.blobs = [];\r\n                options.ondataavailable = function(blob) {\r\n                    button.blobs.push(blob);\r\n                };\r\n            }\r\n\r\n            options.ignoreMutedMedia = false;\r\n            button.recordRTC = RecordRTC(button.stream, options);\r\n\r\n            button.recordingEndedCallback = function(url) {\r\n                setVideoURL(url);\r\n            };\r\n\r\n            button.recordRTC.startRecording();\r\n            btnPauseRecording.style.display = '';\r\n            recordingPlayer.parentNode.parentNode.querySelector('h2').innerHTML = '<img src=\"https://cdn.webrtc-experiment.com/images/progress.gif\">';\r\n        };\r\n    }\r\n\r\n    if(recordingMedia.value === 'record-screen') {\r\n        captureScreen(commonConfig);\r\n\r\n        button.mediaCapturedCallback = function() {\r\n            var options = {\r\n                type: type,\r\n                mimeType: mimeType,\r\n                disableLogs: params.disableLogs || false,\r\n                getNativeBlob: false, // enable it for longer recordings\r\n                video: recordingPlayer\r\n            };\r\n\r\n            if(recorderType) {\r\n                options.recorderType = recorderType;\r\n\r\n                if(recorderType == WhammyRecorder || recorderType == GifRecorder || recorderType == WebAssemblyRecorder) {\r\n                    options.canvas = options.video = {\r\n                        width: defaultWidth || 320,\r\n                        height: defaultHeight || 240\r\n                    };\r\n                }\r\n            }\r\n\r\n            if(videoBitsPerSecond) {\r\n                options.videoBitsPerSecond = videoBitsPerSecond;\r\n            }\r\n\r\n            options.ignoreMutedMedia = false;\r\n            button.recordRTC = RecordRTC(button.stream, options);\r\n\r\n            button.recordingEndedCallback = function(url) {\r\n                setVideoURL(url);\r\n            };\r\n\r\n            button.recordRTC.startRecording();\r\n            btnPauseRecording.style.display = '';\r\n        };\r\n    }\r\n\r\n    // note: audio+tab is supported in Chrome 50+\r\n    // todo: add audio+tab recording\r\n    if(recordingMedia.value === 'record-audio-plus-screen') {\r\n        captureAudioPlusScreen(commonConfig);\r\n\r\n        button.mediaCapturedCallback = function() {\r\n            var options = {\r\n                type: type,\r\n                mimeType: mimeType,\r\n                disableLogs: params.disableLogs || false,\r\n                getNativeBlob: false, // enable it for longer recordings\r\n                video: recordingPlayer\r\n            };\r\n\r\n            if(recorderType) {\r\n                options.recorderType = recorderType;\r\n\r\n                if(recorderType == WhammyRecorder || recorderType == GifRecorder || recorderType == WebAssemblyRecorder) {\r\n                    options.canvas = options.video = {\r\n                        width: defaultWidth || 320,\r\n                        height: defaultHeight || 240\r\n                    };\r\n                }\r\n            }\r\n\r\n            if(videoBitsPerSecond) {\r\n                options.videoBitsPerSecond = videoBitsPerSecond;\r\n            }\r\n\r\n            options.ignoreMutedMedia = false;\r\n            button.recordRTC = RecordRTC(button.stream, options);\r\n\r\n            button.recordingEndedCallback = function(url) {\r\n                setVideoURL(url);\r\n            };\r\n\r\n            button.recordRTC.startRecording();\r\n            btnPauseRecording.style.display = '';\r\n        };\r\n    }\r\n};\r\n\r\nfunction captureVideo(config) {\r\n    captureUserMedia({video: true}, function(videoStream) {\r\n        config.onMediaCaptured(videoStream);\r\n\r\n        addStreamStopListener(videoStream, function() {\r\n            config.onMediaStopped();\r\n        });\r\n    }, function(error) {\r\n        config.onMediaCapturingFailed(error);\r\n    });\r\n}\r\n\r\nfunction captureAudio(config) {\r\n    captureUserMedia({audio: true}, function(audioStream) {\r\n        config.onMediaCaptured(audioStream);\r\n\r\n        addStreamStopListener(audioStream, function() {\r\n            config.onMediaStopped();\r\n        });\r\n    }, function(error) {\r\n        config.onMediaCapturingFailed(error);\r\n    });\r\n}\r\n\r\nfunction captureAudioPlusVideo(config) {\r\n    captureUserMedia({video: true, audio: true}, function(audioVideoStream) {\r\n        config.onMediaCaptured(audioVideoStream);\r\n\r\n        if(audioVideoStream instanceof Array) {\r\n            audioVideoStream.forEach(function(stream) {\r\n                addStreamStopListener(stream, function() {\r\n                    config.onMediaStopped();\r\n                });\r\n            });\r\n            return;\r\n        }\r\n\r\n        addStreamStopListener(audioVideoStream, function() {\r\n            config.onMediaStopped();\r\n        });\r\n    }, function(error) {\r\n        config.onMediaCapturingFailed(error);\r\n    });\r\n}\r\n\r\nvar MY_DOMAIN = 'webrtc-experiment.com';\r\n\r\nfunction isMyOwnDomain() {\r\n    // replace \"webrtc-experiment.com\" with your own domain name\r\n    return document.domain.indexOf(MY_DOMAIN) !== -1;\r\n}\r\n\r\nfunction isLocalHost() {\r\n    // \"chrome.exe\" --enable-usermedia-screen-capturing\r\n    // or firefox => about:config => \"media.getusermedia.screensharing.allowed_domains\" => add \"localhost\"\r\n    return document.domain === 'localhost' || document.domain === 'http://127.0.0.1:3000/';\r\n}\r\n\r\nvar videoBitsPerSecond;\r\n\r\nfunction setVideoBitrates() {\r\n    var select = document.querySelector('.media-bitrates');\r\n    var value = select.value;\r\n\r\n    if(value == 'default') {\r\n        videoBitsPerSecond = null;\r\n        return;\r\n    }\r\n\r\n    videoBitsPerSecond = parseInt(value);\r\n}\r\n\r\nfunction getFrameRates(mediaConstraints) {\r\n    if(!mediaConstraints.video) {\r\n        return mediaConstraints;\r\n    }\r\n\r\n    var select = document.querySelector('.media-framerates');\r\n    var value = select.value;\r\n\r\n    if(value == 'default') {\r\n        return mediaConstraints;\r\n    }\r\n\r\n    value = parseInt(value);\r\n\r\n    if(DetectRTC.browser.name === 'Firefox') {\r\n        mediaConstraints.video.frameRate = value;\r\n        return mediaConstraints;\r\n    }\r\n\r\n    if(!mediaConstraints.video.mandatory) {\r\n        mediaConstraints.video.mandatory = {};\r\n        mediaConstraints.video.optional = [];\r\n    }\r\n\r\n    var isScreen = recordingMedia.value.toString().toLowerCase().indexOf('screen') != -1;\r\n    if(isScreen) {\r\n        mediaConstraints.video.mandatory.maxFrameRate = value;\r\n    }\r\n    else {\r\n        mediaConstraints.video.mandatory.minFrameRate = value;\r\n    }\r\n\r\n    return mediaConstraints;\r\n}\r\n\r\nfunction setGetFromLocalStorage(selectors) {\r\n    selectors.forEach(function(selector) {\r\n        var storageItem = selector.replace(/\\.|#/g, '');\r\n        if(localStorage.getItem(storageItem)) {\r\n            document.querySelector(selector).value = localStorage.getItem(storageItem);\r\n        }\r\n\r\n        addEventListenerToUploadLocalStorageItem(selector, ['change', 'blur'], function() {\r\n            localStorage.setItem(storageItem, document.querySelector(selector).value);\r\n        });\r\n    });\r\n}\r\n\r\nfunction addEventListenerToUploadLocalStorageItem(selector, arr, callback) {\r\n    arr.forEach(function(event) {\r\n        document.querySelector(selector).addEventListener(event, callback, false);\r\n    });\r\n}\r\n\r\nsetGetFromLocalStorage(['.media-resolutions', '.media-framerates', '.media-bitrates', '.recording-media', '.media-container-format']);\r\n\r\nfunction getVideoResolutions(mediaConstraints) {\r\n    if(!mediaConstraints.video) {\r\n        return mediaConstraints;\r\n    }\r\n\r\n    var select = document.querySelector('.media-resolutions');\r\n    var value = select.value;\r\n\r\n    if(value == 'default') {\r\n        return mediaConstraints;\r\n    }\r\n\r\n    value = value.split('x');\r\n\r\n    if(value.length != 2) {\r\n        return mediaConstraints;\r\n    }\r\n\r\n    defaultWidth = parseInt(value[0]);\r\n    defaultHeight = parseInt(value[1]);\r\n\r\n    if(DetectRTC.browser.name === 'Firefox') {\r\n        mediaConstraints.video.width = defaultWidth;\r\n        mediaConstraints.video.height = defaultHeight;\r\n        return mediaConstraints;\r\n    }\r\n\r\n    if(!mediaConstraints.video.mandatory) {\r\n        mediaConstraints.video.mandatory = {};\r\n        mediaConstraints.video.optional = [];\r\n    }\r\n\r\n    var isScreen = recordingMedia.value.toString().toLowerCase().indexOf('screen') != -1;\r\n\r\n    if(isScreen) {\r\n        mediaConstraints.video.mandatory.maxWidth = defaultWidth;\r\n        mediaConstraints.video.mandatory.maxHeight = defaultHeight;\r\n    }\r\n    else {\r\n        mediaConstraints.video.mandatory.minWidth = defaultWidth;\r\n        mediaConstraints.video.mandatory.minHeight = defaultHeight;\r\n    }\r\n\r\n    return mediaConstraints;\r\n}\r\n\r\nfunction captureUserMedia(mediaConstraints, successCallback, errorCallback) {\r\n    if(mediaConstraints.video == true) {\r\n        mediaConstraints.video = {};\r\n    }\r\n\r\n    setVideoBitrates();\r\n\r\n    mediaConstraints = getVideoResolutions(mediaConstraints);\r\n    mediaConstraints = getFrameRates(mediaConstraints);\r\n\r\n    var isBlackBerry = !!(/BB10|BlackBerry/i.test(navigator.userAgent || ''));\r\n    if(isBlackBerry && !!(navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia)) {\r\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n        navigator.getUserMedia(mediaConstraints, successCallback, errorCallback);\r\n        return;\r\n    }\r\n\r\n    navigator.mediaDevices.getUserMedia(mediaConstraints).then(function(stream) {\r\n        successCallback(stream);\r\n\r\n        setVideoURL(stream, true);\r\n    }).catch(function(error) {\r\n        if(error && (error.name === 'ConstraintNotSatisfiedError' || error.name === 'OverconstrainedError')) {\r\n            alert('Your camera or browser does NOT supports selected resolutions or frame-rates. \\n\\nPlease select \"default\" resolutions.');\r\n        }\r\n        else if(error && error.message) {\r\n            alert(error.message);\r\n        }\r\n        else {\r\n            alert('Unable to make getUserMedia request. Please check browser console logs.');\r\n        }\r\n\r\n        errorCallback(error);\r\n    });\r\n}\r\n\r\nfunction setMediaContainerFormat(arrayOfOptionsSupported) {\r\n    var options = Array.prototype.slice.call(\r\n        mediaContainerFormat.querySelectorAll('option')\r\n    );\r\n\r\n    var localStorageItem;\r\n    if(localStorage.getItem('media-container-format')) {\r\n        localStorageItem = localStorage.getItem('media-container-format');\r\n    }\r\n\r\n    var selectedItem;\r\n    options.forEach(function(option) {\r\n        option.disabled = true;\r\n\r\n        if(arrayOfOptionsSupported.indexOf(option.value) !== -1) {\r\n            option.disabled = false;\r\n\r\n            if(localStorageItem && arrayOfOptionsSupported.indexOf(localStorageItem) != -1) {\r\n                if(option.value != localStorageItem) return;\r\n                option.selected = true;\r\n                selectedItem = option;\r\n                return;\r\n            }\r\n\r\n            if(!selectedItem) {\r\n                option.selected = true;\r\n                selectedItem = option;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction isMimeTypeSupported(mimeType) {\r\n    if(typeof MediaRecorder === 'undefined') {\r\n        return false;\r\n    }\r\n\r\n    if(typeof MediaRecorder.isTypeSupported !== 'function') {\r\n        return true;\r\n    }\r\n\r\n    return MediaRecorder.isTypeSupported(mimeType);\r\n}\r\n\r\nrecordingMedia.onchange = function() {\r\n    if(recordingMedia.value === 'record-audio') {\r\n        var recordingOptions = [];\r\n\r\n        if(isMimeTypeSupported('audio/webm')) {\r\n            recordingOptions.push('opus');\r\n        }\r\n\r\n        if(isMimeTypeSupported('audio/ogg')) {\r\n            recordingOptions.push('ogg');\r\n        }\r\n\r\n        recordingOptions.push('pcm');\r\n\r\n        setMediaContainerFormat(recordingOptions);\r\n        return;\r\n    }\r\n\r\n    var isChrome = !!window.chrome && !(!!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0);\r\n\r\n    var recordingOptions = ['vp8']; // MediaStreamRecorder with vp8\r\n\r\n    if(isMimeTypeSupported('video/webm\\;codecs=vp9')) {\r\n        recordingOptions.push('vp9'); // MediaStreamRecorder with vp9\r\n    }\r\n\r\n    if(isMimeTypeSupported('video/webm\\;codecs=h264')) {\r\n        recordingOptions.push('h264'); // MediaStreamRecorder with h264\r\n    }\r\n\r\n    if(isMimeTypeSupported('video/x-matroska;codecs=avc1')) {\r\n        recordingOptions.push('mkv'); // MediaStreamRecorder with mkv/matroska\r\n    }\r\n\r\n    recordingOptions.push('gif'); // GifRecorder\r\n\r\n    if(DetectRTC.browser.name == 'Chrome') {\r\n        recordingOptions.push('whammy'); // WhammyRecorder\r\n    }\r\n\r\n    if(DetectRTC.browser.name == 'Chrome') {\r\n        recordingOptions.push('WebAssembly'); // WebAssemblyRecorder\r\n    }\r\n\r\n    recordingOptions.push('default'); // Default mimeType for MediaStreamRecorder\r\n\r\n    setMediaContainerFormat(recordingOptions);\r\n};\r\nrecordingMedia.onchange();\r\n\r\nif(typeof MediaRecorder === 'undefined' && (DetectRTC.browser.name === 'Edge' || DetectRTC.browser.name === 'Safari')) {\r\n    // webp isn't supported in Microsoft Edge\r\n    // neither MediaRecorder API\r\n    // so lets disable both video/screen recording options\r\n\r\n    console.warn('Neither MediaRecorder API nor webp is supported in ' + DetectRTC.browser.name + '. You cam merely record audio.');\r\n\r\n    recordingMedia.innerHTML = '<option value=\"record-audio\">Audio</option>';\r\n    setMediaContainerFormat(['pcm']);\r\n}\r\n\r\nfunction stringify(obj) {\r\n    var result = '';\r\n    Object.keys(obj).forEach(function(key) {\r\n        if(typeof obj[key] === 'function') {\r\n            return;\r\n        }\r\n\r\n        if(result.length) {\r\n            result += ',';\r\n        }\r\n\r\n        result += key + ': ' + obj[key];\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nfunction mediaRecorderToStringify(mediaRecorder) {\r\n    var result = '';\r\n    result += 'mimeType: ' + mediaRecorder.mimeType;\r\n    result += ', state: ' + mediaRecorder.state;\r\n    result += ', audioBitsPerSecond: ' + mediaRecorder.audioBitsPerSecond;\r\n    result += ', videoBitsPerSecond: ' + mediaRecorder.videoBitsPerSecond;\r\n    if(mediaRecorder.stream) {\r\n        result += ', streamid: ' + mediaRecorder.stream.id;\r\n        result += ', stream-active: ' + mediaRecorder.stream.active;\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getFailureReport() {\r\n    var info = 'RecordRTC seems failed. \\n\\n' + stringify(DetectRTC.browser) + '\\n\\n' + DetectRTC.osName + ' ' + DetectRTC.osVersion + '\\n';\r\n\r\n    if (typeof recorderType !== 'undefined' && recorderType) {\r\n        info += '\\nrecorderType: ' + recorderType.name;\r\n    }\r\n\r\n    if (typeof mimeType !== 'undefined') {\r\n        info += '\\nmimeType: ' + mimeType;\r\n    }\r\n\r\n    Array.prototype.slice.call(document.querySelectorAll('select')).forEach(function(select) {\r\n        info += '\\n' + (select.id || select.className) + ': ' + select.value;\r\n    });\r\n\r\n    if (btnStartRecording.recordRTC) {\r\n        info += '\\n\\ninternal-recorder: ' + btnStartRecording.recordRTC.getInternalRecorder().name;\r\n\r\n        if(btnStartRecording.recordRTC.getInternalRecorder().getAllStates) {\r\n            info += '\\n\\nrecorder-states: ' + btnStartRecording.recordRTC.getInternalRecorder().getAllStates();\r\n        }\r\n    }\r\n\r\n    if(btnStartRecording.stream) {\r\n        info += '\\n\\naudio-tracks: ' + getTracks(btnStartRecording.stream, 'audio').length;\r\n        info += '\\nvideo-tracks: ' + getTracks(btnStartRecording.stream, 'video').length;\r\n        info += '\\nstream-active? ' + !!btnStartRecording.stream.active;\r\n\r\n        btnStartRecording.stream.getTracks().forEach(function(track) {\r\n            info += '\\n' + track.kind + '-track-' + (track.label || track.id) + ': (enabled: ' + !!track.enabled + ', readyState: ' + track.readyState + ', muted: ' + !!track.muted + ')';\r\n\r\n            if(track.getConstraints && Object.keys(track.getConstraints()).length) {\r\n                info += '\\n' + track.kind + '-track-getConstraints: ' + stringify(track.getConstraints());\r\n            }\r\n\r\n            if(track.getSettings && Object.keys(track.getSettings()).length) {\r\n                info += '\\n' + track.kind + '-track-getSettings: ' + stringify(track.getSettings());\r\n            }\r\n        });\r\n    }\r\n\r\n    if(timeSlice && btnStartRecording.recordRTC) {\r\n        info += '\\ntimeSlice: ' + timeSlice;\r\n\r\n        if(btnStartRecording.recordRTC.getInternalRecorder().getArrayOfBlobs) {\r\n            var blobSizes = [];\r\n            btnStartRecording.recordRTC.getInternalRecorder().getArrayOfBlobs().forEach(function(blob) {\r\n                blobSizes.push(blob.size);\r\n            });\r\n            info += '\\nblobSizes: ' + blobSizes;\r\n        }\r\n    }\r\n\r\n    else if(btnStartRecording.recordRTC && btnStartRecording.recordRTC.getBlob()) {\r\n        info += '\\n\\nblobSize: ' + bytesToSize(btnStartRecording.recordRTC.getBlob().size);\r\n    }\r\n\r\n    if(btnStartRecording.recordRTC && btnStartRecording.recordRTC.getInternalRecorder() && btnStartRecording.recordRTC.getInternalRecorder().getInternalRecorder && btnStartRecording.recordRTC.getInternalRecorder().getInternalRecorder()) {\r\n        info += '\\n\\ngetInternalRecorder: ' + mediaRecorderToStringify(btnStartRecording.recordRTC.getInternalRecorder().getInternalRecorder());\r\n    }\r\n\r\n    return info;\r\n}\r\n\r\nfunction saveToDiskOrOpenNewTab(recordRTC) {\r\n    if(!recordRTC.getBlob().size) {\r\n        var info = getFailureReport();\r\n        console.log('blob', recordRTC.getBlob());\r\n        console.log('recordrtc instance', recordRTC);\r\n        console.log('report', info);\r\n\r\n        if(mediaContainerFormat.value !== 'default') {\r\n            alert('RecordRTC seems failed recording using ' + mediaContainerFormat.value + '. Please choose \"default\" option from the drop down and record again.');\r\n        }\r\n        else {\r\n            alert('RecordRTC seems failed. Unexpected issue. You can read the email in your console log. \\n\\nPlease report using disqus chat below.');\r\n        }\r\n\r\n        if(mediaContainerFormat.value !== 'vp9' && DetectRTC.browser.name === 'Chrome') {\r\n            alert('Please record using VP9 encoder. (select from the dropdown)');\r\n        }\r\n    }\r\n\r\n    var fileName = getFileName(fileExtension);\r\n\r\n    document.querySelector('#save-to-disk').parentNode.style.display = 'block';\r\n    document.querySelector('#save-to-disk').onclick = function() {\r\n        if(!recordRTC) return alert('No recording found.');\r\n\r\n        var file = new File([recordRTC.getBlob()], fileName, {\r\n            type: mimeType\r\n        });\r\n\r\n        invokeSaveAsDialog(file, file.name);\r\n    };\r\n\r\n    document.querySelector('#open-new-tab').onclick = function() {\r\n        if(!recordRTC) return alert('No recording found.');\r\n\r\n        var file = new File([recordRTC.getBlob()], fileName, {\r\n            type: mimeType\r\n        });\r\n\r\n        window.open(URL.createObjectURL(file));\r\n    };\r\n\r\n    // upload to PHP server\r\n    if(isMyOwnDomain()) {\r\n        document.querySelector('#upload-to-php').disabled = true;\r\n        document.querySelector('#upload-to-php').style.display = 'none';\r\n    }\r\n    else {\r\n        document.querySelector('#upload-to-php').disabled = false;\r\n    }\r\n\r\n    document.querySelector('#upload-to-php').onclick = function() {\r\n        if(isMyOwnDomain()) {\r\n            alert('PHP Upload is not available on this domain.');\r\n            return;\r\n        }\r\n\r\n        if(!recordRTC) return alert('No recording found.');\r\n        this.disabled = true;\r\n\r\n        var button = this;\r\n        uploadToPHPServer(fileName, recordRTC, function(progress, fileURL) {\r\n            if(progress === 'ended') {\r\n                button.disabled = false;\r\n                button.innerHTML = 'Click to download from server';\r\n                button.onclick = function() {\r\n                    SaveFileURLToDisk(fileURL, fileName);\r\n                };\r\n\r\n                setVideoURL(fileURL);\r\n\r\n                var html = 'Uploaded to PHP.<br>Download using below link:<br>';\r\n                html += '<a href=\"'+fileURL+'\" download=\"'+fileName+'\" style=\"color: yellow; display: block; margin-top: 15px;\">'+fileName+'</a>';\r\n                recordingPlayer.parentNode.parentNode.querySelector('h2').innerHTML = html;\r\n                return;\r\n            }\r\n            button.innerHTML = progress;\r\n            recordingPlayer.parentNode.parentNode.querySelector('h2').innerHTML = progress;\r\n        });\r\n    };\r\n\r\n    // upload to YouTube!\r\n    document.querySelector('#upload-to-youtube').disabled = false;\r\n    document.querySelector('#upload-to-youtube').onclick = function() {\r\n        if(!recordRTC) return alert('No recording found.');\r\n        this.disabled = true;\r\n\r\n        if(isLocalHost()) {\r\n            alert('This feature is NOT available on localhost.');\r\n            return;\r\n        }\r\n\r\n        if(isMyOwnDomain() === false) {\r\n            var url = 'https://github.com/muaz-khan/RecordRTC/wiki/Upload-to-YouTube';\r\n            alert('YouTube API key is configured to work only on webrtc-experiment.com. Please create your own YouTube key + oAuth client-id and use it instead.\\n\\nWiki page: ' + url);\r\n\r\n            // check instructions on the wiki page\r\n            location.href = url;\r\n            return;\r\n        }\r\n\r\n        var button = this;\r\n        uploadToYouTube(fileName, recordRTC, function(percentageComplete, fileURL) {\r\n            if(percentageComplete == 'uploaded') {\r\n                button.disabled = false;\r\n                button.innerHTML = 'Uploaded. However YouTube is still processing.';\r\n                button.onclick = function() {\r\n                    window.open(fileURL);\r\n                };\r\n                return;\r\n            }\r\n            if(percentageComplete == 'processed') {\r\n                button.disabled = false;\r\n                button.innerHTML = 'Uploaded & Processed. Click to open YouTube video.';\r\n                button.onclick = function() {\r\n                    window.open(fileURL);\r\n                };\r\n\r\n                document.querySelector('h1').innerHTML = 'Your video has been uploaded.';\r\n                window.scrollTo(0, 0);\r\n\r\n                alert('Your video has been uploaded.');\r\n                return;\r\n            }\r\n            if(percentageComplete == 'failed') {\r\n                button.disabled = false;\r\n                button.innerHTML = 'YouTube failed transcoding the video.';\r\n                button.onclick = function() {\r\n                    window.open(fileURL);\r\n                };\r\n                return;\r\n            }\r\n            button.innerHTML = percentageComplete + '% uploaded to YouTube.';\r\n        });\r\n    };\r\n}\r\n\r\nfunction uploadToPHPServer(fileName, recordRTC, callback) {\r\n    var blob = recordRTC instanceof Blob ? recordRTC : recordRTC.getBlob();\r\n\r\n    blob = new File([blob], getFileName(fileExtension), {\r\n        type: mimeType\r\n    });\r\n\r\n    // create FormData\r\n    var formData = new FormData();\r\n    formData.append('video-filename', fileName);\r\n    formData.append('video-blob', blob);\r\n\r\n    callback('Uploading recorded-file to server.');\r\n\r\n    // var upload_url = 'https://your-domain.com/files-uploader/';\r\n    var upload_url = 'RecordRTC-to-PHP/save.php';\r\n\r\n    // var upload_directory = upload_url;\r\n    var upload_directory = 'RecordRTC-to-PHP/uploads/';\r\n\r\n    makeXMLHttpRequest(upload_url, formData, function(progress) {\r\n        if (progress !== 'upload-ended') {\r\n            callback(progress);\r\n            return;\r\n        }\r\n\r\n        callback('ended', upload_directory + fileName);\r\n    });\r\n}\r\n\r\nfunction makeXMLHttpRequest(url, data, callback) {\r\n    var request = new XMLHttpRequest();\r\n    request.onreadystatechange = function() {\r\n        if (request.readyState == 4 && request.status == 200) {\r\n            if(request.responseText === 'success') {\r\n                callback('upload-ended');\r\n                return;\r\n            }\r\n\r\n            document.querySelector('.header').parentNode.style = 'text-align: left; color: red; padding: 5px 10px;';\r\n            document.querySelector('.header').parentNode.innerHTML = request.responseText;\r\n        }\r\n    };\r\n\r\n    request.upload.onloadstart = function() {\r\n        callback('Upload started...');\r\n    };\r\n\r\n    request.upload.onprogress = function(event) {\r\n        callback('Upload Progress ' + Math.round(event.loaded / event.total * 100) + \"%\");\r\n    };\r\n\r\n    request.upload.onload = function() {\r\n        callback('progress-about-to-end');\r\n    };\r\n\r\n    request.upload.onload = function() {\r\n        callback('Getting File URL..');\r\n    };\r\n\r\n    request.upload.onerror = function(error) {\r\n        callback('Failed to upload to server');\r\n    };\r\n\r\n    request.upload.onabort = function(error) {\r\n        callback('Upload aborted.');\r\n    };\r\n\r\n    request.open('POST', url);\r\n    request.send(data);\r\n}\r\n\r\nfunction getRandomString() {\r\n    if (window.crypto && window.crypto.getRandomValues && navigator.userAgent.indexOf('Safari') === -1) {\r\n        var a = window.crypto.getRandomValues(new Uint32Array(3)),\r\n            token = '';\r\n        for (var i = 0, l = a.length; i < l; i++) {\r\n            token += a[i].toString(36);\r\n        }\r\n        return token;\r\n    } else {\r\n        return (Math.random() * new Date().getTime()).toString(36).replace(/\\./g, '');\r\n    }\r\n}\r\n\r\nfunction getFileName(fileExtension) {\r\n    var d = new Date();\r\n    var year = d.getUTCFullYear();\r\n    var month = d.getUTCMonth();\r\n    var date = d.getUTCDate();\r\n    return 'RecordRTC-' + year + month + date + '-' + getRandomString() + '.' + fileExtension;\r\n}\r\n\r\nfunction SaveFileURLToDisk(fileUrl, fileName) {\r\n    var hyperlink = document.createElement('a');\r\n    hyperlink.href = fileUrl;\r\n    hyperlink.target = '_blank';\r\n    hyperlink.download = fileName || fileUrl;\r\n\r\n    (document.body || document.documentElement).appendChild(hyperlink);\r\n    hyperlink.onclick = function() {\r\n       (document.body || document.documentElement).removeChild(hyperlink);\r\n\r\n       // required for Firefox\r\n       window.URL.revokeObjectURL(hyperlink.href);\r\n    };\r\n\r\n    var mouseEvent = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: true,\r\n        cancelable: true\r\n    });\r\n\r\n    hyperlink.dispatchEvent(mouseEvent);\r\n}\r\n\r\nfunction getURL(arg) {\r\n    var url = arg;\r\n\r\n    if(arg instanceof Blob || arg instanceof File) {\r\n        url = URL.createObjectURL(arg);\r\n    }\r\n\r\n    if(arg instanceof RecordRTC || arg.getBlob) {\r\n        url = URL.createObjectURL(arg.getBlob());\r\n    }\r\n\r\n    if(arg instanceof MediaStream || arg.getTracks) {\r\n        // url = URL.createObjectURL(arg);\r\n    }\r\n\r\n    return url;\r\n}\r\n\r\nfunction setVideoURL(arg, forceNonImage) {\r\n    var url = getURL(arg);\r\n\r\n    var parentNode = recordingPlayer.parentNode;\r\n    parentNode.removeChild(recordingPlayer);\r\n    parentNode.innerHTML = '';\r\n\r\n    var elem = 'video';\r\n    if(type == 'gif' && !forceNonImage) {\r\n        elem = 'img';\r\n    }\r\n    if(type == 'audio') {\r\n        elem = 'audio';\r\n    }\r\n\r\n    recordingPlayer = document.createElement(elem);\r\n\r\n    if(arg instanceof MediaStream) {\r\n        recordingPlayer.muted = true;\r\n    }\r\n\r\n    recordingPlayer.addEventListener('loadedmetadata', function() {\r\n        if(navigator.userAgent.toLowerCase().indexOf('android') == -1) return;\r\n\r\n        // android\r\n        setTimeout(function() {\r\n            if(typeof recordingPlayer.play === 'function') {\r\n                recordingPlayer.play();\r\n            }\r\n        }, 2000);\r\n    }, false);\r\n\r\n    recordingPlayer.poster = '';\r\n\r\n    if(arg instanceof MediaStream) {\r\n        recordingPlayer.srcObject = arg;\r\n    }\r\n    else {\r\n        recordingPlayer.src = url;\r\n    }\r\n\r\n    if(typeof recordingPlayer.play === 'function') {\r\n        recordingPlayer.play();\r\n    }\r\n\r\n    recordingPlayer.addEventListener('ended', function() {\r\n        url = getURL(arg);\r\n\r\n        if(arg instanceof MediaStream) {\r\n            recordingPlayer.srcObject = arg;\r\n        }\r\n        else {\r\n            recordingPlayer.src = url;\r\n        }\r\n    });\r\n\r\n    parentNode.appendChild(recordingPlayer);\r\n}\r\nfunction captureScreen(config) {\r\n    if (navigator.getDisplayMedia) {\r\n        navigator.getDisplayMedia({\r\n            video: true\r\n        }).then(screenStream => {\r\n            config.onMediaCaptured(screenStream);\r\n\r\n            addStreamStopListener(screenStream, function() {\r\n                // config.onMediaStopped();\r\n\r\n                btnStartRecording.onclick();\r\n            });\r\n\r\n            setVideoURL(screenStream, true);\r\n        }).catch(function(error) {\r\n            config.onMediaCapturingFailed(error);\r\n        });\r\n    } else if (navigator.mediaDevices.getDisplayMedia) {\r\n        navigator.mediaDevices.getDisplayMedia({\r\n            video: true\r\n        }).then(screenStream => {\r\n            config.onMediaCaptured(screenStream);\r\n\r\n            addStreamStopListener(screenStream, function() {\r\n                // config.onMediaStopped();\r\n\r\n                btnStartRecording.onclick();\r\n            });\r\n\r\n            setVideoURL(screenStream, true);\r\n        }).catch(function(error) {\r\n            config.onMediaCapturingFailed(error);\r\n        });\r\n    } else {\r\n        var error = 'getDisplayMedia API are not supported in this browser.';\r\n        config.onMediaCapturingFailed(error);\r\n        alert(error);\r\n    }\r\n}\r\n\r\nfunction captureAudioPlusScreen(config) {\r\n    if (navigator.getDisplayMedia) {\r\n        navigator.getDisplayMedia({\r\n            video: true\r\n        }).then(screenStream => {\r\n            navigator.mediaDevices.getUserMedia({audio:true}).then(function(mic) {\r\n                screenStream.addTrack(mic.getTracks()[0]);\r\n\r\n                config.onMediaCaptured(screenStream);\r\n\r\n                addStreamStopListener(screenStream, function() {\r\n                    // config.onMediaStopped();\r\n\r\n                    btnStartRecording.onclick();\r\n                });\r\n\r\n                setVideoURL(screenStream, true);\r\n            });\r\n        }).catch(function(error) {\r\n            config.onMediaCapturingFailed(error);\r\n        });\r\n    } else if (navigator.mediaDevices.getDisplayMedia) {\r\n        navigator.mediaDevices.getDisplayMedia({\r\n            video: true\r\n        }).then(screenStream => {\r\n            navigator.mediaDevices.getUserMedia({audio:true}).then(function(mic) {\r\n                screenStream.addTrack(mic.getTracks()[0]);\r\n\r\n                config.onMediaCaptured(screenStream);\r\n\r\n                addStreamStopListener(screenStream, function() {\r\n                    // config.onMediaStopped();\r\n\r\n                    btnStartRecording.onclick();\r\n                });\r\n\r\n                setVideoURL(screenStream, true);\r\n            });\r\n        }).catch(function(error) {\r\n            config.onMediaCapturingFailed(error);\r\n        });\r\n    } else {\r\n        var error = 'getDisplayMedia API are not supported in this browser.';\r\n        config.onMediaCapturingFailed(error);\r\n        alert(error);\r\n    }\r\n}\r\n            function uploadToYouTube(fileName, recordRTC, callback) {\r\n                var blob = recordRTC instanceof Blob ? recordRTC : recordRTC.getBlob();\r\n\r\n                blob = new File([blob], getFileName(fileExtension), {\r\n                    type: mimeType\r\n                });\r\n\r\n                if(!uploadVideo) {\r\n                    alert('YouTube API are not available.');\r\n                    return;\r\n                }\r\n\r\n                uploadVideo.callback = callback;\r\n                uploadVideo.uploadFile(fileName, blob);\r\n            }\r\n\r\n            var uploadVideo;\r\n\r\n            var signinCallback = function (result){\r\n              if(result.access_token) {\r\n                uploadVideo = new UploadVideo();\r\n                uploadVideo.ready(result.access_token);\r\n\r\n                document.querySelector('#signinButton').style.display = 'none';\r\n              }\r\n              else {\r\n                // console.error('YouTube error', result);\r\n                // document.querySelector('#upload-to-youtube').style.display = 'none';\r\n              }\r\n            };\r\n\r\n            var STATUS_POLLING_INTERVAL_MILLIS = 60 * 1000; // One minute.\r\n\r\n            var UploadVideo = function() {\r\n              this.tags = ['recordrtc'];\r\n              this.categoryId = 28; // via: http://stackoverflow.com/a/35877512/552182\r\n              this.videoId = '';\r\n              this.uploadStartTime = 0;\r\n            };\r\n\r\n\r\n            UploadVideo.prototype.ready = function(accessToken) {\r\n              this.accessToken = accessToken;\r\n              this.gapi = gapi;\r\n              this.authenticated = true;\r\n              false && this.gapi.client.request({\r\n                path: '/youtube/v3/channels',\r\n                params: {\r\n                  part: 'snippet',\r\n                  mine: true\r\n                },\r\n                callback: function(response) {\r\n                  if (!response.error) {\r\n                    // response.items[0].snippet.title -- channel title\r\n                    // response.items[0].snippet.thumbnails.default.url -- channel thumbnail\r\n                  }\r\n                }.bind(this)\r\n              });\r\n            };\r\n\r\n            UploadVideo.prototype.uploadFile = function(fileName, file) {\r\n              var metadata = {\r\n                snippet: {\r\n                  title: fileName,\r\n                  description: fileName,\r\n                  tags: this.tags,\r\n                  categoryId: this.categoryId\r\n                },\r\n                status: {\r\n                  privacyStatus: 'public'\r\n                }\r\n              };\r\n              var uploader = new MediaUploader({\r\n                baseUrl: 'http://127.0.0.1:3333/video',\r\n                file: file,\r\n                token: this.accessToken,\r\n                metadata: metadata,\r\n                params: {\r\n                  part: Object.keys(metadata).join(',')\r\n                },\r\n                onError: function(data) {\r\n                  var message = data;\r\n                  try {\r\n                    var errorResponse = JSON.parse(data);\r\n                    message = errorResponse.error.message;\r\n                  } finally {\r\n                    alert(message);\r\n                  }\r\n                }.bind(this),\r\n                onProgress: function(data) {\r\n                  var bytesUploaded = data.loaded;\r\n                  var totalBytes = parseInt(data.total);\r\n                  var percentageComplete = parseInt((bytesUploaded * 100) / totalBytes);\r\n\r\n                  uploadVideo.callback(percentageComplete);\r\n                }.bind(this),\r\n                onComplete: function(data) {\r\n                  var uploadResponse = JSON.parse(data);\r\n                  this.videoId = uploadResponse.id;\r\n                  this.videoURL = 'https://www.youtube.com/watch?v=' + this.videoId;\r\n                  uploadVideo.callback('uploaded', this.videoURL);\r\n\r\n                  setTimeout(this.pollForVideoStatus, 2000);\r\n                }.bind(this)\r\n              });\r\n              this.uploadStartTime = Date.now();\r\n              uploader.upload();\r\n            };\r\n\r\n            UploadVideo.prototype.pollForVideoStatus = function() {\r\n              this.gapi.client.request({\r\n                path: '/youtube/v3/videos',\r\n                params: {\r\n                  part: 'status,player',\r\n                  id: this.videoId\r\n                },\r\n                callback: function(response) {\r\n                  if (response.error) {\r\n                    uploadVideo.pollForVideoStatus();\r\n                  } else {\r\n                    var uploadStatus = response.items[0].status.uploadStatus;\r\n                    switch (uploadStatus) {\r\n                      case 'uploaded':\r\n                        uploadVideo.callback('uploaded', uploadVideo.videoURL);\r\n                        uploadVideo.pollForVideoStatus();\r\n                        break;\r\n                        case 'processed':\r\n                        uploadVideo.callback('processed', uploadVideo.videoURL);\r\n                        break;\r\n                        default:\r\n                        uploadVideo.callback('failed', uploadVideo.videoURL);\r\n                        break;\r\n                    }\r\n                  }\r\n                }.bind(this)\r\n              });\r\n            };\r\nvar DRIVE_UPLOAD_URL = 'https://www.googleapis.com/upload/drive/v2/files/';\r\n\r\nvar RetryHandler = function() {\r\n  this.interval = 1000; // Start at one second\r\n  this.maxInterval = 60 * 1000; // Don't wait longer than a minute\r\n};\r\n\r\nRetryHandler.prototype.retry = function(fn) {\r\n  setTimeout(fn, this.interval);\r\n  this.interval = this.nextInterval_();\r\n};\r\n\r\nRetryHandler.prototype.reset = function() {\r\n  this.interval = 1000;\r\n};\r\n\r\nRetryHandler.prototype.nextInterval_ = function() {\r\n  var interval = this.interval * 2 + this.getRandomInt_(0, 1000);\r\n  return Math.min(interval, this.maxInterval);\r\n};\r\n\r\nRetryHandler.prototype.getRandomInt_ = function(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nvar MediaUploader = function(options) {\r\n  var noop = function() {};\r\n  this.file = options.file;\r\n  this.contentType = options.contentType || this.file.type || 'application/octet-stream';\r\n  this.metadata = options.metadata || {\r\n    'title': this.file.name,\r\n    'mimeType': this.contentType\r\n  };\r\n  this.token = options.token;\r\n  this.onComplete = options.onComplete || noop;\r\n  this.onProgress = options.onProgress || noop;\r\n  this.onError = options.onError || noop;\r\n  this.offset = options.offset || 0;\r\n  this.chunkSize = options.chunkSize || 0;\r\n  this.retryHandler = new RetryHandler();\r\n\r\n  this.url = options.url;\r\n  if (!this.url) {\r\n    var params = options.params || {};\r\n    params.uploadType = 'resumable';\r\n    this.url = this.buildUrl_(options.fileId, params, options.baseUrl);\r\n  }\r\n  this.httpMethod = options.fileId ? 'PUT' : 'POST';\r\n};\r\n\r\nMediaUploader.prototype.upload = function() {\r\n  var self = this;\r\n  var xhr = new XMLHttpRequest();\r\n\r\n  xhr.open(this.httpMethod, this.url, true);\r\n  xhr.setRequestHeader('Authorization', 'Bearer ' + this.token);\r\n  xhr.setRequestHeader('Content-Type', 'application/json');\r\n  xhr.setRequestHeader('X-Upload-Content-Length', this.file.size);\r\n  xhr.setRequestHeader('X-Upload-Content-Type', this.contentType);\r\n\r\n  xhr.onload = function(e) {\r\n    if (e.target.status < 400) {\r\n      var location = e.target.getResponseHeader('Location');\r\n      this.url = location;\r\n      this.sendFile_();\r\n    } else {\r\n      this.onUploadError_(e);\r\n    }\r\n  }.bind(this);\r\n  xhr.onerror = this.onUploadError_.bind(this);\r\n  xhr.send(JSON.stringify(this.metadata));\r\n};\r\n\r\nMediaUploader.prototype.sendFile_ = function() {\r\n  var content = this.file;\r\n  var end = this.file.size;\r\n\r\n  if (this.offset || this.chunkSize) {\r\n    // Only bother to slice the file if we're either resuming or uploading in chunks\r\n    if (this.chunkSize) {\r\n      end = Math.min(this.offset + this.chunkSize, this.file.size);\r\n    }\r\n    content = content.slice(this.offset, end);\r\n  }\r\n\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open('PUT', this.url, true);\r\n  xhr.setRequestHeader('Content-Type', this.contentType);\r\n  xhr.setRequestHeader('Content-Range', 'bytes ' + this.offset + '-' + (end - 1) + '/' + this.file.size);\r\n  xhr.setRequestHeader('X-Upload-Content-Type', this.file.type);\r\n  if (xhr.upload) {\r\n    xhr.upload.addEventListener('progress', this.onProgress);\r\n  }\r\n  xhr.onload = this.onContentUploadSuccess_.bind(this);\r\n  xhr.onerror = this.onContentUploadError_.bind(this);\r\n  xhr.send(content);\r\n};\r\n\r\nMediaUploader.prototype.resume_ = function() {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open('PUT', this.url, true);\r\n  xhr.setRequestHeader('Content-Range', 'bytes */' + this.file.size);\r\n  xhr.setRequestHeader('X-Upload-Content-Type', this.file.type);\r\n  if (xhr.upload) {\r\n    xhr.upload.addEventListener('progress', this.onProgress);\r\n  }\r\n  xhr.onload = this.onContentUploadSuccess_.bind(this);\r\n  xhr.onerror = this.onContentUploadError_.bind(this);\r\n  xhr.send();\r\n};\r\n\r\nMediaUploader.prototype.extractRange_ = function(xhr) {\r\n  var range = xhr.getResponseHeader('Range');\r\n  if (range) {\r\n    this.offset = parseInt(range.match(/\\d+/g).pop(), 10) + 1;\r\n  }\r\n};\r\n\r\nMediaUploader.prototype.onContentUploadSuccess_ = function(e) {\r\n  if (e.target.status == 200 || e.target.status == 201) {\r\n    this.onComplete(e.target.response);\r\n  } else if (e.target.status == 308) {\r\n    this.extractRange_(e.target);\r\n    this.retryHandler.reset();\r\n    this.sendFile_();\r\n  }\r\n};\r\n\r\n\r\nMediaUploader.prototype.onContentUploadError_ = function(e) {\r\n  if (e.target.status && e.target.status < 500) {\r\n    this.onError(e.target.response);\r\n  } else {\r\n    this.retryHandler.retry(this.resume_.bind(this));\r\n  }\r\n};\r\n\r\nMediaUploader.prototype.onUploadError_ = function(e) {\r\n  this.onError(e.target.response); // TODO - Retries for initial upload\r\n};\r\n\r\nMediaUploader.prototype.buildQuery_ = function(params) {\r\n  params = params || {};\r\n  return Object.keys(params).map(function(key) {\r\n    return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n  }).join('&');\r\n};\r\n\r\nMediaUploader.prototype.buildUrl_ = function(id, params, baseUrl) {\r\n  var url = baseUrl || DRIVE_UPLOAD_URL;\r\n  if (id) {\r\n    url += id;\r\n  }\r\n  var query = this.buildQuery_(params);\r\n  if (query) {\r\n    url += '?' + query;\r\n  }\r\n  return url;\r\n};\r\n\r\nvar chkFixSeeking = document.querySelector('#chk-fixSeeking');\r\nchkFixSeeking.onchange = function() {\r\n    if(this.checked === true) {\r\n        localStorage.setItem(this.id, 'true');\r\n    }\r\n    else {\r\n        localStorage.removeItem(this.id);\r\n    }\r\n};\r\nif(localStorage.getItem(chkFixSeeking.id) === 'true') {\r\n    chkFixSeeking.checked = true;\r\n}\r\nvar chkTimeSlice = document.querySelector('#chk-timeSlice');\r\nvar timeSlice = false;\r\n\r\nif(typeof MediaRecorder === 'undefined') {\r\n    chkTimeSlice.disabled = true;\r\n}\r\n\r\nchkTimeSlice.addEventListener('change', function() {\r\n    if(chkTimeSlice.checked === true) {\r\n        var _timeSlice = prompt('Please enter timeSlice in milliseconds e.g. 1000 or 2000 or 3000.', 1000);\r\n        _timeSlice = parseInt(_timeSlice);\r\n        if(!_timeSlice || _timeSlice == NaN || typeof _timeSlice === 'undefined') {\r\n            timeSlice = false;\r\n            return;\r\n        }\r\n\r\n        timeSlice = _timeSlice;\r\n    }\r\n    else {\r\n        timeSlice = false;\r\n    }\r\n}, false);\r\n\r\nvar btnPauseRecording = document.querySelector('#btn-pause-recording');\r\nbtnPauseRecording.onclick = function() {\r\n    if(!btnStartRecording.recordRTC) {\r\n        btnPauseRecording.style.display = 'none';\r\n        return;\r\n    }\r\n\r\n    btnPauseRecording.disabled = true;\r\n    if(btnPauseRecording.innerHTML === 'Pause') {\r\n        btnStartRecording.disabled = true;\r\n        chkFixSeeking.parentNode.style.display = 'none';\r\n        btnStartRecording.style.fontSize = '15px';\r\n        btnStartRecording.recordRTC.pauseRecording();\r\n        recordingPlayer.parentNode.parentNode.querySelector('h2').innerHTML = 'Recording status: paused';\r\n        recordingPlayer.pause();\r\n\r\n        btnPauseRecording.style.fontSize = 'inherit';\r\n        setTimeout(function() {\r\n            btnPauseRecording.innerHTML = 'Resume Recording';\r\n            btnPauseRecording.disabled = false;\r\n        }, 2000);\r\n    }\r\n\r\n    if(btnPauseRecording.innerHTML === 'Resume Recording') {\r\n        btnStartRecording.disabled = false;\r\n        chkFixSeeking.parentNode.style.display = 'none';\r\n        btnStartRecording.style.fontSize = 'inherit';\r\n        btnStartRecording.recordRTC.resumeRecording();\r\n        recordingPlayer.parentNode.parentNode.querySelector('h2').innerHTML = '<img src=\"https://cdn.webrtc-experiment.com/images/progress.gif\">';\r\n        recordingPlayer.play();\r\n\r\n        btnPauseRecording.style.fontSize = '15px';\r\n        btnPauseRecording.innerHTML = 'Pause';\r\n        setTimeout(function() {\r\n            btnPauseRecording.disabled = false;\r\n        }, 2000);\r\n    }\r\n};\r\n"]},"sourceType":"script","hash":"463613b7daad1c909a25a0980321928aae674661"}
