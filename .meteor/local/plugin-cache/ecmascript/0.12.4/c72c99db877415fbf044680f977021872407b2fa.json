{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Sandbox\\test\\packages\\znewsham:dynamic-table\\client\\ui\\components\\headerCell\\headerCell.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/znewsham:dynamic-table/client/ui/components/headerCell/headerCell.js","filename":"C:\\Sandbox\\test\\packages\\znewsham:dynamic-table\\client\\ui\\components\\headerCell\\headerCell.js","passPerPreset":false,"envName":"development","cwd":"C:\\Sandbox\\test","root":"C:\\Sandbox\\test","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Sandbox\\test\\packages\\znewsham:dynamic-table\\client\\ui\\components\\headerCell\\headerCell.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/znewsham:dynamic-table/client/ui/components/headerCell/headerCell.js"}},"code":"module.link(\"./headerCell.html\");\nmodule.link(\"../filterModal/filterModal.js\");\nvar EJSON;\nmodule.link(\"meteor/ejson\", {\n  EJSON: function (v) {\n    EJSON = v;\n  }\n}, 0);\nvar getPosition;\nmodule.link(\"../../../inlineSave.js\", {\n  getPosition: function (v) {\n    getPosition = v;\n  }\n}, 1);\nTemplate.dynamicTableHeaderCell.onCreated(function () {\n  function onCreated() {\n    this.columnTitle = new ReactiveVar();\n\n    if (this.data.column.title) {\n      this.columnTitle.set(this.data.column.title);\n    } else if (this.data.column.titleFn) {\n      this.columnTitle.set(this.data.column.titleFn());\n    }\n  }\n\n  return onCreated;\n}());\nTemplate.dynamicTableHeaderCell.helpers({\n  hasFilter: function () {\n    var templInstance = Template.instance();\n    var fieldName = templInstance.data.column.filterModal.field && templInstance.data.column.filterModal.field.name || templInstance.data.column.data;\n    var searchFunction = templInstance.data.column.search;\n\n    if (searchFunction) {\n      var searchResult = searchFunction(\"\");\n      var advanceSearchAnd = templInstance.data.advancedSearch.$and || [];\n\n      if (advanceSearchAnd) {\n        return advanceSearchAnd.some(function (query) {\n          var queryElements = query.$or || query.$and || query;\n          return _.isEqual(_.sortBy(_.keys(queryElements)), _.sortBy(_.keys(searchResult)));\n        });\n      }\n\n      return false;\n    }\n\n    var columnSearch = templInstance.data.advancedSearch[fieldName];\n    return columnSearch;\n  },\n  columnTitle: function () {\n    return Template.instance().columnTitle.get() || \"\";\n  }\n});\nTemplate.dynamicTableHeaderCell.events({\n  \"click .fa-filter\": function (e, templInstance) {\n    e.preventDefault();\n    e.stopPropagation();\n    var order = templInstance.data.dataTable.api().order();\n    var columns = templInstance.data.dataTable.api().context[0].aoColumns;\n    var column = columns.find(function (c) {\n      return c.id && c.id === templInstance.data.column.id || c.data === templInstance.data.column.data;\n    });\n\n    var columnOrder = _.find(order, function (col) {\n      return col[0] === column.idx;\n    });\n\n    var fieldName = templInstance.data.column.filterModal.field && templInstance.data.column.filterModal.field.name || templInstance.data.column.data;\n    var columnSearch = EJSON.fromJSONValue(templInstance.data.advancedSearch[fieldName]);\n    var selectedOptions;\n    var operator = \"$in\";\n    var searchValue;\n\n    if (columnSearch) {\n      operator = _.keys(columnSearch)[0];\n\n      if (operator === \"$not\") {\n        if (columnSearch.$not.$all) {\n          selectedOptions = columnSearch.$not.$all;\n          operator = \"$not$all\";\n        } else {\n          searchValue = columnSearch.$not.toString().split(\"/\").join(\"\").slice(1);\n        }\n      } else if (operator === \"$regex\") {\n        searchValue = columnSearch.$regex.slice(1);\n      } else if (operator === \"$lte\") {\n        searchValue = columnSearch.$lte;\n\n        if (columnSearch.$gte) {\n          operator = \"$between\";\n        }\n      } else if (operator === \"$gte\") {\n        searchValue = columnSearch.$gte;\n      } else if (columnSearch[operator]) {\n        selectedOptions = columnSearch[operator];\n      }\n    } else {\n      var orColumnPreviousSearch = templInstance.data.advancedSearch.$and || [];\n      var searchFunction = templInstance.data.column.search;\n\n      if (searchFunction) {\n        var searchResult = searchFunction(\"custom_String--Match_ME-JUSTPLAYSS\");\n        var advanceSearchColQuery = orColumnPreviousSearch.find(function (query) {\n          return _.isEqual(_.sortBy(_.keys(query.$or || query.$and || query)), _.sortBy(_.keys(searchResult)));\n        });\n        var previousSearchObj = advanceSearchColQuery ? _.deepToFlat(advanceSearchColQuery.$or || advanceSearchColQuery.$and || advanceSearchColQuery) : {};\n\n        var newSearchObject = _.deepToFlat(searchResult);\n\n        var madeUpField = _.find(_.keys(newSearchObject), function (k) {\n          return newSearchObject[k] === \"custom_String--Match_ME-JUSTPLAYSS\";\n        });\n\n        if (previousSearchObj[madeUpField + \".$not\"]) {\n          operator = \"$not\";\n          searchValue = previousSearchObj[madeUpField + \".$not\"].toString().split(\"/\").join(\"\").slice(1);\n        } else if (previousSearchObj[madeUpField + \".$regex\"]) {\n          operator = \"$regex\";\n          searchValue = previousSearchObj[madeUpField + \".$regex\"].slice(1);\n        } else if (previousSearchObj[madeUpField + \".$in\"]) {\n          operator = \"$in\";\n          selectedOptions = previousSearchObj[madeUpField + \".$in\"];\n        }\n      }\n    }\n\n    var sort = templInstance.data.column.filterModal.sort;\n\n    if (!sort) {\n      sort = templInstance.data.column.sortable !== false ? {\n        enabled: true,\n        direction: columnOrder ? columnOrder[1] === \"asc\" ? 1 : -1 : undefined\n      } : undefined;\n    } else if (!sort.direction) {\n      sort.direction = columnOrder ? columnOrder[1] === \"asc\" ? 1 : -1 : undefined;\n    }\n\n    var schema = templInstance.data.table.collection._c2 && templInstance.data.table.collection._c2._simpleSchema;\n    var type;\n\n    if (schema) {\n      var obj = schema.schema(fieldName);\n\n      if (obj) {\n        type = obj.type;\n      }\n    }\n\n    var field = _.extend({\n      type: type || String,\n      name: fieldName,\n      required: templInstance.data.column.required,\n      label: templInstance.data.column.title\n    }, templInstance.data.column.filterModal.field || {});\n\n    var filterModalOptions = {\n      dataTable: templInstance.data.dataTable,\n      column: templInstance.data.column,\n      editFieldCallback: function (newFieldSpec) {\n        var actualColumn = templInstance.data.dataTable.api().context[0].aoColumns.find(function (c) {\n          return c.data === templInstance.data.column.data;\n        });\n\n        if (newFieldSpec.data !== templInstance.data.column.data) {\n          templInstance.data.filterModalCallback(templInstance.data.columnIndex, undefined, undefined, undefined, false, false);\n          templInstance.data.column.search = newFieldSpec.search;\n          templInstance.data.column.sortableField = newFieldSpec.sortableField;\n\n          if (actualColumn) {\n            actualColumn.data = newFieldSpec.data;\n            actualColumn.mData = newFieldSpec.data;\n\n            var mData = $.fn.dataTable.ext.internal._fnGetObjectDataFn(actualColumn.mData);\n\n            var mRender = actualColumn.mRender ? $.fn.dataTable.ext.internal._fnGetObjectDataFn(actualColumn.mRender) : null;\n\n            actualColumn.fnGetData = function () {\n              function fnGetData(rowData, _type, meta) {\n                var innerData = mData(rowData, _type, undefined, meta);\n                return mRender && _type ? mRender(innerData, _type, rowData, meta) : innerData;\n              }\n\n              return fnGetData;\n            }();\n          }\n\n          templInstance.data.column.data = newFieldSpec.data;\n          templInstance.data.column.mData = newFieldSpec.data;\n          templInstance.data.column.filterModal.field.name = newFieldSpec.filterModalField;\n          templInstance.data.dataTable.api().ajax.reload();\n          templInstance.data.filterModalCallback(templInstance.data.columnIndex, undefined, undefined, undefined, false, true, true);\n        }\n\n        if (templInstance.data.column.filterModal.groupNames) {\n          filterModalOptions.groupNames = templInstance.data.column.filterModal.groupNames();\n        }\n\n        templInstance.data.table.columns[templInstance.data.columnIndex].group = newFieldSpec.groupName;\n        templInstance.data.table.columns[templInstance.data.columnIndex].title = newFieldSpec.label;\n        templInstance.data.column.group = newFieldSpec.groupName;\n        templInstance.data.column.title = newFieldSpec.label;\n\n        if (actualColumn) {\n          if (actualColumn.nTh && actualColumn.nTh.children.length) {\n            Blaze.getView(actualColumn.nTh.children[0]).templateInstance().columnTitle.set(newFieldSpec.label); //actualColumn.nTh.innerHTML = actualColumn.nTh.innerHTML.replace(new RegExp(actualColumn.title, \"g\"), newFieldSpec.label);\n          }\n\n          actualColumn.title = newFieldSpec.label;\n        }\n\n        templInstance.columnTitle.set(newFieldSpec.label);\n      },\n      field: field,\n      sort: sort,\n      groupNames: templInstance.data.column.filterModal.groupNames ? templInstance.data.column.filterModal.groupNames() : [],\n      filter: {\n        enabled: templInstance.data.column.filter && typeof templInstance.data.column.filter.enabled === \"boolean\" ? templInstance.data.column.filter.enabled : true,\n        search: {\n          enabled: true,\n          value: searchValue\n        },\n        options: templInstance.data.column.filterModal.options,\n        selectedOptions: selectedOptions,\n        operator: {\n          enabled: true,\n          selected: operator\n        }\n      },\n      removeColumn: function () {\n        if (templInstance.data.removeColumn) {\n          templInstance.data.removeColumn(column);\n        }\n      },\n      callback: function (optionsOrQuery, operator, sort, multiSort) {\n        templInstance.data.filterModalCallback(templInstance.data.columnIndex, optionsOrQuery, operator, sort, multiSort);\n      }\n    };\n    var target = $(e.currentTarget).closest(\"th\");\n    var bounds = getPosition(target[0]);\n    var div = $(\"#dynamic-table-filter-modal\").length ? $(\"#dynamic-table-filter-modal\") : $(\"<div>\");\n    var left = Math.max(bounds.left + target.outerWidth() - 250, 0);\n    div.attr(\"id\", \"dynamic-table-filter-modal\").html(\"\").css(\"position\", \"absolute\").css(\"top\", bounds.top + target.outerHeight()).css(\"left\", left);\n\n    if (div[0].__blazeTemplate) {\n      Blaze.remove(div[0].__blazeTemplate);\n    }\n\n    div[0].__blazeTemplate = Blaze.renderWithData(Template.dynamicTableFilterModal, filterModalOptions, div[0]);\n    document.body.appendChild(div[0]);\n  }\n});","map":{"version":3,"sources":["packages/znewsham:dynamic-table/client/ui/components/headerCell/headerCell.js"],"names":["module","link","EJSON","v","getPosition","Template","dynamicTableHeaderCell","onCreated","columnTitle","ReactiveVar","data","column","title","set","titleFn","helpers","hasFilter","templInstance","instance","fieldName","filterModal","field","name","searchFunction","search","searchResult","advanceSearchAnd","advancedSearch","$and","some","query","queryElements","$or","_","isEqual","sortBy","keys","columnSearch","get","events","e","preventDefault","stopPropagation","order","dataTable","api","columns","context","aoColumns","find","c","id","columnOrder","col","idx","fromJSONValue","selectedOptions","operator","searchValue","$not","$all","toString","split","join","slice","$regex","$lte","$gte","orColumnPreviousSearch","advanceSearchColQuery","previousSearchObj","deepToFlat","newSearchObject","madeUpField","k","sort","sortable","enabled","direction","undefined","schema","table","collection","_c2","_simpleSchema","type","obj","extend","String","required","label","filterModalOptions","editFieldCallback","newFieldSpec","actualColumn","filterModalCallback","columnIndex","sortableField","mData","$","fn","ext","internal","_fnGetObjectDataFn","mRender","fnGetData","rowData","_type","meta","innerData","filterModalField","ajax","reload","groupNames","group","groupName","nTh","children","length","Blaze","getView","templateInstance","filter","value","options","selected","removeColumn","callback","optionsOrQuery","multiSort","target","currentTarget","closest","bounds","div","left","Math","max","outerWidth","attr","html","css","top","outerHeight","__blazeTemplate","remove","renderWithData","dynamicTableFilterModal","document","body","appendChild"],"mappings":"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","sourcesContent":["import \"./headerCell.html\";\nimport \"../filterModal/filterModal.js\";\n\nimport { EJSON } from \"meteor/ejson\";\nimport { getPosition } from \"../../../inlineSave.js\";\n\nTemplate.dynamicTableHeaderCell.onCreated(function onCreated() {\n  this.columnTitle = new ReactiveVar();\n  if (this.data.column.title) {\n    this.columnTitle.set(this.data.column.title);\n  }\n  else if (this.data.column.titleFn) {\n    this.columnTitle.set(this.data.column.titleFn());\n  }\n});\n\nTemplate.dynamicTableHeaderCell.helpers({\n  hasFilter() {\n    const templInstance = Template.instance();\n    const fieldName = (templInstance.data.column.filterModal.field && templInstance.data.column.filterModal.field.name) || templInstance.data.column.data;\n    const searchFunction = templInstance.data.column.search;\n    if (searchFunction) {\n      const searchResult = searchFunction(\"\");\n      const advanceSearchAnd = templInstance.data.advancedSearch.$and || [];\n      if (advanceSearchAnd) {\n        return advanceSearchAnd.some((query) => {\n          const queryElements = query.$or || query.$and || query;\n          return _.isEqual(_.sortBy(_.keys(queryElements)), _.sortBy(_.keys(searchResult)));\n        });\n      }\n      return false;\n    }\n    const columnSearch = templInstance.data.advancedSearch[fieldName];\n    return columnSearch;\n  },\n  columnTitle() {\n    return Template.instance().columnTitle.get() || \"\";\n  }\n});\nTemplate.dynamicTableHeaderCell.events({\n  \"click .fa-filter\"(e, templInstance) {\n    e.preventDefault();\n    e.stopPropagation();\n    const order = templInstance.data.dataTable.api().order();\n    const columns = templInstance.data.dataTable.api().context[0].aoColumns;\n    const column = columns.find(c => (c.id && c.id === templInstance.data.column.id) || c.data === templInstance.data.column.data);\n    const columnOrder = _.find(order, col => col[0] === column.idx);\n    const fieldName = (templInstance.data.column.filterModal.field && templInstance.data.column.filterModal.field.name) || templInstance.data.column.data;\n    const columnSearch = EJSON.fromJSONValue(templInstance.data.advancedSearch[fieldName]);\n    let selectedOptions;\n    let operator = \"$in\";\n    let searchValue;\n    if (columnSearch) {\n      operator = _.keys(columnSearch)[0];\n      if (operator === \"$not\") {\n        if (columnSearch.$not.$all) {\n          selectedOptions = columnSearch.$not.$all;\n          operator = \"$not$all\";\n        }\n        else {\n          searchValue = columnSearch.$not.toString().split(\"/\").join(\"\").slice(1);\n        }\n      }\n      else if (operator === \"$regex\") {\n        searchValue = columnSearch.$regex.slice(1);\n      }\n      else if (operator === \"$lte\") {\n        searchValue = columnSearch.$lte;\n        if (columnSearch.$gte) {\n          operator = \"$between\";\n        }\n      }\n      else if (operator === \"$gte\") {\n        searchValue = columnSearch.$gte;\n      }\n      else if (columnSearch[operator]) {\n        selectedOptions = columnSearch[operator];\n      }\n    }\n    else {\n      const orColumnPreviousSearch = templInstance.data.advancedSearch.$and || [];\n      const searchFunction = templInstance.data.column.search;\n      if (searchFunction) {\n        const searchResult = searchFunction(\"custom_String--Match_ME-JUSTPLAYSS\");\n        const advanceSearchColQuery = orColumnPreviousSearch.find(query => _.isEqual(_.sortBy(_.keys(query.$or || query.$and || query)), _.sortBy(_.keys(searchResult))));\n        const previousSearchObj = advanceSearchColQuery ? _.deepToFlat(advanceSearchColQuery.$or || advanceSearchColQuery.$and || advanceSearchColQuery) : {};\n        const newSearchObject = _.deepToFlat(searchResult);\n        const madeUpField = _.find(_.keys(newSearchObject), k => newSearchObject[k] === \"custom_String--Match_ME-JUSTPLAYSS\");\n        if (previousSearchObj[`${madeUpField}.$not`]) {\n          operator = \"$not\";\n          searchValue = previousSearchObj[`${madeUpField}.$not`].toString().split(\"/\").join(\"\").slice(1);\n        }\n        else if (previousSearchObj[`${madeUpField}.$regex`]) {\n          operator = \"$regex\";\n          searchValue = previousSearchObj[`${madeUpField}.$regex`].slice(1);\n        }\n        else if (previousSearchObj[`${madeUpField}.$in`]) {\n          operator = \"$in\";\n          selectedOptions = previousSearchObj[`${madeUpField}.$in`];\n        }\n      }\n    }\n    let sort = templInstance.data.column.filterModal.sort;\n    if (!sort) {\n      sort = templInstance.data.column.sortable !== false ? {\n        enabled: true,\n        direction: columnOrder ? (columnOrder[1] === \"asc\" ? 1 : -1) : undefined\n      } : undefined;\n    }\n    else if (!sort.direction) {\n      sort.direction = columnOrder ? (columnOrder[1] === \"asc\" ? 1 : -1) : undefined;\n    }\n    const schema = templInstance.data.table.collection._c2 && templInstance.data.table.collection._c2._simpleSchema;\n    let type;\n    if (schema) {\n      const obj = schema.schema(fieldName);\n      if (obj) {\n        type = obj.type;\n      }\n    }\n    const field = _.extend({\n      type: type || String,\n      name: fieldName,\n      required: templInstance.data.column.required,\n      label: templInstance.data.column.title\n    }, templInstance.data.column.filterModal.field || {});\n\n    const filterModalOptions = {\n      dataTable: templInstance.data.dataTable,\n      column: templInstance.data.column,\n      editFieldCallback(newFieldSpec) {\n        const actualColumn = templInstance.data.dataTable.api().context[0].aoColumns.find(c => c.data === templInstance.data.column.data);\n        if (newFieldSpec.data !== templInstance.data.column.data) {\n          templInstance.data.filterModalCallback(templInstance.data.columnIndex, undefined, undefined, undefined, false, false);\n          templInstance.data.column.search = newFieldSpec.search;\n          templInstance.data.column.sortableField = newFieldSpec.sortableField;\n          if (actualColumn) {\n            actualColumn.data = newFieldSpec.data;\n            actualColumn.mData = newFieldSpec.data;\n            const mData = $.fn.dataTable.ext.internal._fnGetObjectDataFn(actualColumn.mData);\n            const mRender = actualColumn.mRender ? $.fn.dataTable.ext.internal._fnGetObjectDataFn(actualColumn.mRender) : null;\n            actualColumn.fnGetData = function fnGetData(rowData, _type, meta) {\n              const innerData = mData(rowData, _type, undefined, meta);\n              return mRender && _type ? mRender(innerData, _type, rowData, meta) : innerData;\n            };\n          }\n          templInstance.data.column.data = newFieldSpec.data;\n          templInstance.data.column.mData = newFieldSpec.data;\n          templInstance.data.column.filterModal.field.name = newFieldSpec.filterModalField;\n          templInstance.data.dataTable.api().ajax.reload();\n          templInstance.data.filterModalCallback(templInstance.data.columnIndex, undefined, undefined, undefined, false, true, true);\n        }\n\n        if (templInstance.data.column.filterModal.groupNames) {\n          filterModalOptions.groupNames = templInstance.data.column.filterModal.groupNames();\n        }\n        templInstance.data.table.columns[templInstance.data.columnIndex].group = newFieldSpec.groupName;\n        templInstance.data.table.columns[templInstance.data.columnIndex].title = newFieldSpec.label;\n        templInstance.data.column.group = newFieldSpec.groupName;\n        templInstance.data.column.title = newFieldSpec.label;\n        if (actualColumn) {\n          if (actualColumn.nTh && actualColumn.nTh.children.length) {\n            Blaze.getView(actualColumn.nTh.children[0]).templateInstance().columnTitle.set(newFieldSpec.label);\n            //actualColumn.nTh.innerHTML = actualColumn.nTh.innerHTML.replace(new RegExp(actualColumn.title, \"g\"), newFieldSpec.label);\n          }\n          actualColumn.title = newFieldSpec.label;\n        }\n        templInstance.columnTitle.set(newFieldSpec.label);\n      },\n      field,\n      sort,\n      groupNames: templInstance.data.column.filterModal.groupNames ? templInstance.data.column.filterModal.groupNames() : [],\n      filter: {\n        enabled: (templInstance.data.column.filter && typeof templInstance.data.column.filter.enabled === \"boolean\") ? templInstance.data.column.filter.enabled : true,\n        search: {\n          enabled: true,\n          value: searchValue\n        },\n        options: templInstance.data.column.filterModal.options,\n        selectedOptions,\n        operator: {\n          enabled: true,\n          selected: operator\n        }\n      },\n      removeColumn() {\n        if (templInstance.data.removeColumn) {\n          templInstance.data.removeColumn(column);\n        }\n      },\n      callback(optionsOrQuery, operator, sort, multiSort) {\n        templInstance.data.filterModalCallback(templInstance.data.columnIndex, optionsOrQuery, operator, sort, multiSort);\n      }\n    };\n    const target = $(e.currentTarget).closest(\"th\");\n    const bounds = getPosition(target[0]);\n    const div = $(\"#dynamic-table-filter-modal\").length ? $(\"#dynamic-table-filter-modal\") : $(\"<div>\");\n    const left = Math.max((bounds.left + target.outerWidth()) - 250, 0);\n    div.attr(\"id\", \"dynamic-table-filter-modal\")\n    .html(\"\")\n    .css(\"position\", \"absolute\")\n    .css(\"top\", bounds.top + target.outerHeight())\n    .css(\"left\", left);\n    if (div[0].__blazeTemplate) {\n      Blaze.remove(div[0].__blazeTemplate);\n    }\n    div[0].__blazeTemplate = Blaze.renderWithData(\n      Template.dynamicTableFilterModal,\n      filterModalOptions,\n      div[0]\n    );\n    document.body.appendChild(div[0]);\n  }\n});\n"]},"sourceType":"script","hash":"c72c99db877415fbf044680f977021872407b2fa"}
