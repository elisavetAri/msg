{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Sandbox\\test\\packages\\znewsham:dynamic-table\\client\\inlineSave.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/znewsham:dynamic-table/client/inlineSave.js","filename":"C:\\Sandbox\\test\\packages\\znewsham:dynamic-table\\client\\inlineSave.js","passPerPreset":false,"envName":"development","cwd":"C:\\Sandbox\\test","root":"C:\\Sandbox\\test","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Sandbox\\test\\packages\\znewsham:dynamic-table\\client\\inlineSave.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/znewsham:dynamic-table/client/inlineSave.js"}},"code":"module.export({\n  nextField: () => nextField,\n  getColumns: () => getColumns,\n  getPosition: () => getPosition,\n  getValue: () => getValue,\n  getCustom: () => getCustom,\n  inlineSave: () => inlineSave,\n  changed: () => changed\n});\nlet EJSON;\nmodule.link(\"meteor/ejson\", {\n  EJSON(v) {\n    EJSON = v;\n  }\n\n}, 0);\n\nfunction nextField(templInstance) {\n  nextField.inProgress = true;\n\n  try {\n    const tableTmplInstance = Blaze.getView(templInstance.$(\"input,select\").closest(\"table\")[0]).templateInstance();\n    const actualColumns = tableTmplInstance.dataTable.api().context[0].aoColumns;\n\n    const editableColumns = _.sortBy(tableTmplInstance.columns, column => actualColumns.indexOf(actualColumns.find(c => c.id && c.id === column.id || c.data === column.data))).filter(c => c.editTmpl || c.editable);\n\n    const currentColumnIndex = editableColumns.indexOf(templInstance.data.column);\n    let useNextRow = false;\n\n    if (currentColumnIndex === -1) {\n      return;\n    }\n\n    if (currentColumnIndex + 1 >= editableColumns.length) {\n      useNextRow = true;\n    }\n\n    const nextColumn = editableColumns[useNextRow ? 0 : currentColumnIndex + 1];\n    const actualColumn = actualColumns.find(c => c.id && c.id === nextColumn.id || c.data === nextColumn.data);\n    const nextColumnTh = tableTmplInstance.$(\"th[data-column-index=\".concat(actualColumn.idx, \"],td[data-column-index=\").concat(actualColumn.idx, \"]\"))[0]; // NOTE: data-column-index is only added when colReorder is used\n\n    const nextColumnThIndex = nextColumnTh ? _.toArray(nextColumnTh.parentElement.children).indexOf(nextColumnTh) : actualColumn.idx;\n    const $currentTr = templInstance.$(\"input,select\").closest(\"tr\");\n    let $nextTr = $currentTr;\n\n    if (useNextRow) {\n      const trs = _.toArray($currentTr.parent().children());\n\n      const nextTrIndex = trs.indexOf($currentTr[0]) + 1;\n\n      if (nextTrIndex >= trs.length) {\n        return;\n      }\n\n      $nextTr = $(trs[nextTrIndex]);\n    }\n\n    const nextColumnTd = $nextTr.find(\"td\")[nextColumnThIndex];\n    $(nextColumnTd).find(\".dynamic-table-enable-editing\").trigger(\"click\");\n  } catch (e) {\n    throw e;\n  } finally {\n    setTimeout(() => {\n      nextField.inProgress = false;\n    }, 100);\n  }\n}\n\nfunction getColumns(columns) {\n  let reactive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (_.isFunction(columns)) {\n    return reactive ? columns() : Tracker.nonreactive(() => columns());\n  }\n\n  return columns;\n}\n\nfunction offset(el) {\n  const rect = el.getBoundingClientRect();\n  const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n  const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n  return {\n    top: rect.top + scrollTop,\n    left: rect.left + scrollLeft\n  };\n}\n\nfunction getPosition(el) {\n  let xPos = 0;\n  let yPos = 0;\n  const off = offset(el);\n  const width = $(el).width();\n\n  while (el) {\n    if (el.tagName === \"BODY\") {\n      // deal with browser quirks with body/window/document and page scroll\n      const xScroll = el.scrollLeft; // || document.documentElement.scrollLeft;\n\n      const yScroll = el.scrollTop; // || document.documentElement.scrollTop;\n\n      xPos += el.offsetLeft - xScroll + el.clientLeft;\n      yPos += el.offsetTop - yScroll + el.clientTop;\n    } else {\n      // for all other non-BODY elements\n      xPos += el.offsetLeft - el.scrollLeft + el.clientLeft;\n      yPos += el.offsetTop - el.scrollTop + el.clientTop;\n    }\n\n    el = el.offsetParent;\n  }\n\n  return {\n    left: Math.max(off.left, xPos),\n    top: Math.max(off.top, yPos),\n    width\n  };\n}\n\nfunction getValue(doc, field) {\n  let obj = doc;\n  const parts = field.split(\".\");\n\n  while (parts.length) {\n    const part = parts.splice(0, 1)[0];\n    obj = obj && obj[part];\n  }\n\n  return obj;\n}\n\nfunction getCustom(customField, tableId, callback) {\n  let stop = false;\n\n  if (_.isString(customField)) {\n    Tracker.autorun(() => {\n      if (!Meteor.userId()) {\n        return;\n      }\n\n      const custom = getValue(Tracker.nonreactive(() => Meteor.user()), customField);\n\n      if (custom) {\n        callback(custom);\n        stop = true;\n      }\n    });\n  }\n\n  if (!stop && _.isFunction(customField)) {\n    const result = customField(tableId, false, null, asyncResult => {\n      callback(asyncResult);\n      stop = true;\n    });\n\n    if (result instanceof Promise) {\n      result.then(asyncResult => {\n        callback(asyncResult);\n        stop = true;\n      });\n    } else if (result) {\n      callback(result);\n      stop = true;\n    }\n  } else if (!stop && _.isObject(customField)) {\n    callback(customField);\n    stop = true;\n  }\n\n  return stop;\n}\n\nfunction inlineSave(templInstance, val, extra) {\n  if (templInstance.data.editCallback) {\n    return templInstance.data.editCallback(templInstance.data.doc._id, val, templInstance.data.doc, templInstance.data.afterEditCallback, extra);\n  }\n\n  const collection = templInstance.data.collection;\n  const doc = templInstance.data.doc;\n  const fieldName = templInstance.data.column.data;\n  const oldValue = getValue(doc, fieldName); // NOTE: intentionally not tripple.\n\n  if (oldValue != val) {\n    collection.update({\n      _id: doc._id\n    }, {\n      $set: {\n        [fieldName]: val\n      }\n    }, (err, res) => {\n      templInstance.data.afterEditCallback(err, res);\n    });\n  } else {\n    templInstance.data.afterEditCallback(undefined, undefined);\n  }\n}\n\nfunction changed(custom, tableId, _ref) {\n  let {\n    newColumns,\n    newFilter,\n    newOrder,\n    newLimit,\n    newSkip,\n    newGroupChainFields,\n    changeOpenGroups,\n    unset\n  } = _ref;\n  let prefix = \"\";\n  const $set = {};\n  const $pull = {};\n  const $addToSet = {};\n\n  if (_.isString(custom)) {\n    prefix = \"\".concat(custom, \".\");\n  }\n\n  if (changeOpenGroups) {\n    _.each(changeOpenGroups, (open, tableId) => {\n      if (open) {\n        $addToSet[\"\".concat(prefix, \"openGroups\")] = tableId;\n      } else {\n        $pull[\"\".concat(prefix, \"openGroups\")] = tableId;\n      }\n    });\n  }\n\n  if (newColumns) {\n    $set[\"\".concat(prefix, \"columns\")] = newColumns.map(col => ({\n      data: col.data,\n      id: col.id\n    }));\n  }\n\n  if (newGroupChainFields) {\n    $set[\"\".concat(prefix, \"groupChainFields\")] = newGroupChainFields;\n  }\n\n  if (newFilter) {\n    $set[\"\".concat(prefix, \"filter\")] = JSON.stringify(EJSON.toJSONValue(newFilter));\n  }\n\n  if (newOrder) {\n    $set[\"\".concat(prefix, \"order\")] = newOrder;\n  }\n\n  if (newLimit) {\n    $set[\"\".concat(prefix, \"limit\")] = newLimit;\n  }\n\n  if (newSkip || newSkip === 0) {\n    $set[\"\".concat(prefix, \"skip\")] = newSkip;\n  }\n\n  if (unset) {\n    const filter = getValue(Meteor.user(), \"\".concat(prefix, \"filter\"));\n\n    if (filter) {\n      const actualFilter = unset === \"all\" ? {} : JSON.parse(filter);\n      delete actualFilter[unset];\n      $set[\"\".concat(prefix, \"filter\")] = JSON.stringify(actualFilter);\n    }\n  }\n\n  const update = {};\n\n  if (_.keys($set).length) {\n    update.$set = $set;\n  }\n\n  if (_.keys($pull).length) {\n    update.$pull = $pull;\n  }\n\n  if (_.keys($addToSet).length) {\n    update.$addToSet = $addToSet;\n  }\n\n  if (!_.keys(update).length) {\n    return;\n  }\n\n  if (_.isString(custom)) {\n    Meteor.users.update({\n      _id: Meteor.userId()\n    }, update);\n  }\n\n  if (_.isFunction(custom)) {\n    custom(tableId, true, update, () => {});\n  }\n}","map":{"version":3,"sources":["packages/znewsham:dynamic-table/client/inlineSave.js"],"names":["module","export","nextField","getColumns","getPosition","getValue","getCustom","inlineSave","changed","EJSON","link","v","templInstance","inProgress","tableTmplInstance","Blaze","getView","$","closest","templateInstance","actualColumns","dataTable","api","context","aoColumns","editableColumns","_","sortBy","columns","column","indexOf","find","c","id","data","filter","editTmpl","editable","currentColumnIndex","useNextRow","length","nextColumn","actualColumn","nextColumnTh","idx","nextColumnThIndex","toArray","parentElement","children","$currentTr","$nextTr","trs","parent","nextTrIndex","nextColumnTd","trigger","e","setTimeout","reactive","isFunction","Tracker","nonreactive","offset","el","rect","getBoundingClientRect","scrollLeft","window","pageXOffset","document","documentElement","scrollTop","pageYOffset","top","left","xPos","yPos","off","width","tagName","xScroll","yScroll","offsetLeft","clientLeft","offsetTop","clientTop","offsetParent","Math","max","doc","field","obj","parts","split","part","splice","customField","tableId","callback","stop","isString","autorun","Meteor","userId","custom","user","result","asyncResult","Promise","then","isObject","val","extra","editCallback","_id","afterEditCallback","collection","fieldName","oldValue","update","$set","err","res","undefined","newColumns","newFilter","newOrder","newLimit","newSkip","newGroupChainFields","changeOpenGroups","unset","prefix","$pull","$addToSet","each","open","map","col","JSON","stringify","toJSONValue","actualFilter","parse","keys","users"],"mappings":"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","sourcesContent":["import { EJSON } from \"meteor/ejson\";\n\nexport function nextField(templInstance) {\n  nextField.inProgress = true;\n  try {\n    const tableTmplInstance = Blaze.getView(templInstance.$(\"input,select\").closest(\"table\")[0]).templateInstance()\n    const actualColumns = tableTmplInstance.dataTable.api().context[0].aoColumns;\n    const editableColumns = _.sortBy(\n      tableTmplInstance.columns,\n      column => actualColumns.indexOf(actualColumns.find(c => (c.id && c.id === column.id) || c.data === column.data))\n    ).filter(c => c.editTmpl || c.editable);\n    const currentColumnIndex = editableColumns.indexOf(templInstance.data.column);\n    let useNextRow = false;\n    if (currentColumnIndex === -1) {\n      return;\n    }\n    if (currentColumnIndex + 1 >= editableColumns.length) {\n      useNextRow = true;\n    }\n    const nextColumn = editableColumns[useNextRow ? 0 : currentColumnIndex + 1];\n    const actualColumn = actualColumns.find(c => (c.id && c.id === nextColumn.id) || c.data === nextColumn.data);\n    const nextColumnTh = tableTmplInstance.$(`th[data-column-index=${actualColumn.idx}],td[data-column-index=${actualColumn.idx}]`)[0];\n    // NOTE: data-column-index is only added when colReorder is used\n    const nextColumnThIndex = nextColumnTh ? _.toArray(nextColumnTh.parentElement.children).indexOf(nextColumnTh) : actualColumn.idx;\n    const $currentTr = templInstance.$(\"input,select\").closest(\"tr\");\n    let $nextTr = $currentTr;\n    if (useNextRow) {\n      const trs = _.toArray($currentTr.parent().children());\n      const nextTrIndex = trs.indexOf($currentTr[0]) + 1;\n      if (nextTrIndex >= trs.length) {\n        return;\n      }\n      $nextTr = $(trs[nextTrIndex]);\n    }\n    const nextColumnTd = $nextTr.find(\"td\")[nextColumnThIndex];\n    $(nextColumnTd).find(\".dynamic-table-enable-editing\").trigger(\"click\");\n  }\n  catch (e) {\n    throw e;\n  }\n  finally {\n    setTimeout(() => {\n      nextField.inProgress = false;\n    }, 100);\n  }\n}\n\nexport function getColumns(columns, reactive = false) {\n  if (_.isFunction(columns)) {\n    return reactive ? columns() : Tracker.nonreactive(() => columns());\n  }\n  return columns;\n}\n\nfunction offset(el) {\n  const rect = el.getBoundingClientRect();\n  const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n  const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n  return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\n}\nexport function getPosition(el) {\n  let xPos = 0;\n  let yPos = 0;\n  const off = offset(el);\n  const width = $(el).width();\n  while (el) {\n    if (el.tagName === \"BODY\") {\n      // deal with browser quirks with body/window/document and page scroll\n      const xScroll = el.scrollLeft;// || document.documentElement.scrollLeft;\n      const yScroll = el.scrollTop;// || document.documentElement.scrollTop;\n\n      xPos += (el.offsetLeft - xScroll + el.clientLeft);\n      yPos += (el.offsetTop - yScroll + el.clientTop);\n    }\n    else {\n      // for all other non-BODY elements\n      xPos += (el.offsetLeft - el.scrollLeft + el.clientLeft);\n      yPos += (el.offsetTop - el.scrollTop + el.clientTop);\n    }\n\n    el = el.offsetParent;\n  }\n  return {\n    left: Math.max(off.left, xPos),\n    top: Math.max(off.top, yPos),\n    width\n  };\n}\n\nexport function getValue(doc, field) {\n  let obj = doc;\n  const parts = field.split(\".\");\n  while (parts.length) {\n    const part = parts.splice(0, 1)[0];\n    obj = obj && obj[part];\n  }\n  return obj;\n}\n\nexport function getCustom(customField, tableId, callback) {\n  let stop = false;\n  if (_.isString(customField)) {\n    Tracker.autorun(() => {\n      if (!Meteor.userId()) {\n        return;\n      }\n      const custom = getValue(Tracker.nonreactive(() => Meteor.user()), customField);\n      if (custom) {\n        callback(custom);\n        stop = true;\n      }\n    });\n  }\n  if (!stop && _.isFunction(customField)) {\n    const result = customField(tableId, false, null, (asyncResult) => {\n      callback(asyncResult);\n      stop = true;\n    });\n    if (result instanceof Promise) {\n      result.then((asyncResult) => {\n        callback(asyncResult);\n        stop = true;\n      });\n    }\n    else if (result) {\n      callback(result);\n      stop = true;\n    }\n  }\n  else if (!stop && _.isObject(customField)) {\n    callback(customField);\n    stop = true;\n  }\n  return stop;\n}\n\nexport function inlineSave(templInstance, val, extra) {\n  if (templInstance.data.editCallback) {\n    return templInstance.data.editCallback(templInstance.data.doc._id, val, templInstance.data.doc, templInstance.data.afterEditCallback, extra);\n  }\n  const collection = templInstance.data.collection;\n  const doc = templInstance.data.doc;\n  const fieldName = templInstance.data.column.data;\n  const oldValue = getValue(doc, fieldName);\n\n  // NOTE: intentionally not tripple.\n  if (oldValue != val) {\n    collection.update(\n      { _id: doc._id },\n      { $set: { [fieldName]: val } },\n      (err, res) => {\n        templInstance.data.afterEditCallback(err, res);\n      }\n    );\n  }\n  else {\n    templInstance.data.afterEditCallback(undefined, undefined);\n  }\n}\n\nexport function changed(\n  custom,\n  tableId,\n  {\n    newColumns, newFilter, newOrder, newLimit, newSkip, newGroupChainFields, changeOpenGroups, unset\n  }\n) {\n  let prefix = \"\";\n  const $set = {\n  };\n  const $pull = {};\n  const $addToSet = {};\n  if (_.isString(custom)) {\n    prefix = `${custom}.`;\n  }\n  if (changeOpenGroups) {\n    _.each(changeOpenGroups, (open, tableId) => {\n      if (open) {\n        $addToSet[`${prefix}openGroups`] = tableId;\n      }\n      else {\n        $pull[`${prefix}openGroups`] = tableId;\n      }\n    });\n  }\n\n  if (newColumns) {\n    $set[`${prefix}columns`] = newColumns.map(col => ({ data: col.data, id: col.id }));\n  }\n\n  if (newGroupChainFields) {\n    $set[`${prefix}groupChainFields`] = newGroupChainFields;\n  }\n\n  if (newFilter) {\n    $set[`${prefix}filter`] = JSON.stringify(EJSON.toJSONValue(newFilter));\n  }\n  if (newOrder) {\n    $set[`${prefix}order`] = newOrder;\n  }\n  if (newLimit) {\n    $set[`${prefix}limit`] = newLimit;\n  }\n  if (newSkip || newSkip === 0) {\n    $set[`${prefix}skip`] = newSkip;\n  }\n  if (unset) {\n    const filter = getValue(Meteor.user(), `${prefix}filter`);\n    if (filter) {\n      const actualFilter = unset === \"all\" ? {} : JSON.parse(filter);\n      delete actualFilter[unset];\n      $set[`${prefix}filter`] = JSON.stringify(actualFilter);\n    }\n  }\n  const update = {};\n  if (_.keys($set).length) {\n    update.$set = $set;\n  }\n  if (_.keys($pull).length) {\n    update.$pull = $pull;\n  }\n  if (_.keys($addToSet).length) {\n    update.$addToSet = $addToSet;\n  }\n\n  if (!_.keys(update).length) {\n    return;\n  }\n  if (_.isString(custom)) {\n    Meteor.users.update(\n      { _id: Meteor.userId() },\n      update\n    );\n  }\n  if (_.isFunction(custom)) {\n    custom(\n      tableId, true,\n      update,\n      () => {}\n    );\n  }\n}\n"]},"sourceType":"script","hash":"9e5ccaf3fff39830d98ac45835cd5d7b44799c4c"}
