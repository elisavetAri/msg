{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Sandbox\\test\\packages\\znewsham:dynamic-table\\client\\ui\\components\\manageFieldsModal\\manageFieldsModal.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/znewsham:dynamic-table/client/ui/components/manageFieldsModal/manageFieldsModal.js","filename":"C:\\Sandbox\\test\\packages\\znewsham:dynamic-table\\client\\ui\\components\\manageFieldsModal\\manageFieldsModal.js","passPerPreset":false,"envName":"development","cwd":"C:\\Sandbox\\test","root":"C:\\Sandbox\\test","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Sandbox\\test\\packages\\znewsham:dynamic-table\\client\\ui\\components\\manageFieldsModal\\manageFieldsModal.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/znewsham:dynamic-table/client/ui/components/manageFieldsModal/manageFieldsModal.js"}},"code":"module.link(\"./manageFieldsModal.css\");\nmodule.link(\"./manageFieldsModal.html\");\nmodule.link(\"../manageColumnsForm/manageColumnsForm.js\");\nTemplate.dynamicTableManageFieldsModal.onCreated(function () {\n  function onCreated() {\n    this.search = new ReactiveVar();\n    this.editing = new ReactiveVar(false);\n    this.editableField = new ReactiveVar(null);\n    this.availableColumns = new ReactiveVar(this.data.availableColumns);\n  }\n\n  return onCreated;\n}());\nTemplate.dynamicTableManageFieldsModal.onRendered(function () {\n  function onRendered() {\n    var _this = this;\n\n    Tracker.autorun(function () {\n      if (_this.editing.get()) {\n        Tracker.afterFlush(function () {\n          if ($.fn.select2) {\n            _this.$(\".dynamic-table-manage-fields-edit-group\").select2({\n              tags: true,\n              placeholder: \"Select a Group\",\n              allowClear: true,\n              data: _.union([{\n                id: \"\",\n                value: \"\"\n              }], _.compact(_.unique(_.pluck(_this.data.availableColumns, \"group\"))).map(function (g) {\n                return {\n                  id: g,\n                  text: g\n                };\n              }))\n            });\n\n            _this.$(\".dynamic-table-manage-fields-edit-group\").val(_this.editing.get().groupName).trigger(\"change\");\n          }\n        });\n      }\n    });\n  }\n\n  return onRendered;\n}());\nTemplate.dynamicTableManageFieldsModal.events({\n  \"keydown input.search\": function (e, templInstance) {\n    templInstance.search.set($(e.currentTarget).val());\n  },\n  \"keyup input.search\": function (e, templInstance) {\n    templInstance.search.set($(e.currentTarget).val());\n  },\n  \"blur input.search\": function (e, templInstance) {\n    templInstance.search.set($(e.currentTarget).val());\n  },\n  \"click .add-column\": function (e, templInstance) {\n    templInstance.editing.set(true);\n  },\n  \"click li>.fa-pencil\": function (e, templInstance) {\n    e.preventDefault();\n    e.stopPropagation();\n    var colId = $(e.currentTarget).parent().attr(\"data-id\");\n    var colData = $(e.currentTarget).parent().attr(\"data-data\");\n    var column = templInstance.data.availableColumns.find(function (col) {\n      if (colId) {\n        return colId === col.id;\n      }\n\n      return colData === col.data;\n    });\n    templInstance.editing.set(true);\n    var spec = column.manageFieldsModal && column.manageFieldsModal.field.edit.spec || column.filterModal && column.filterModal.field.edit.spec;\n    templInstance.editableField.set(spec);\n  },\n  \"click li\": function (e, templInstance) {\n    var colId = $(e.currentTarget).attr(\"data-id\");\n    var colData = $(e.currentTarget).attr(\"data-data\");\n    var selected = $(e.currentTarget).find(\"i.fa-toggle-on\").length;\n    var column = templInstance.data.availableColumns.find(function (col) {\n      if (colId) {\n        return colId === col.id;\n      }\n\n      return colData === col.data;\n    });\n\n    if (column.required) {\n      return;\n    }\n\n    templInstance.data.changeCallback(column, !selected);\n  },\n  \"click .dynamic-table-manage-fields-group-header\": function (e, templInstance) {\n    $(e.currentTarget).siblings(\"ul\").toggleClass(\"display-table-manage-fields-group-hidden\");\n  },\n  \"click .btn-dynamic-table-cancel\": function (e, templInstance) {\n    templInstance.editing.set(false);\n  },\n  \"click .btn-dynamic-table-save\": function (e, templInstance) {\n    templInstance.$(\".btn-dynamic-table-save\").attr(\"disabled\", \"disabled\");\n    var isEdit = templInstance.editableField.get();\n\n    if (isEdit) {\n      templInstance.editableField.set(null);\n    }\n\n    templInstance.data.edit.callback(e, templInstance, isEdit).then(function (newColumnSpec) {\n      templInstance.$(\".btn-dynamic-table-save\").removeAttr(\"disabled\");\n      templInstance.editing.set(false);\n      var prevColumnSpec;\n\n      if (isEdit) {\n        var columns = templInstance.availableColumns.get();\n        var realColumn = columns.find(function (c) {\n          return c.data === newColumnSpec.data;\n        });\n        var index = columns.indexOf(realColumn);\n        prevColumnSpec = columns.splice(index, 1, newColumnSpec);\n      } else {\n        templInstance.availableColumns.get().push(newColumnSpec);\n      }\n\n      templInstance.availableColumns.dep.changed();\n\n      if (isEdit) {\n        templInstance.data.edit.editedCallback(newColumnSpec, prevColumnSpec[0]);\n      } else {\n        templInstance.data.edit.addedCallback(newColumnSpec);\n      }\n    }).catch(function (err) {\n      console.error(err);\n    });\n  }\n});\nTemplate.dynamicTableManageFieldsModal.helpers({\n  editableField: function () {\n    return Template.instance().editableField.get();\n  },\n  fieldType: function () {\n    var editing = Template.instance().editing.get();\n\n    if (!editing || !editing.filterModal || !editing.filterModal.field || !editing.filterModal.field.type) {\n      return \"string\";\n    }\n\n    var fieldType = editing.filterModal.field.type;\n\n    if (fieldType && fieldType && _.isArray(fieldType)) {\n      fieldType = fieldType[0];\n    }\n\n    return fieldType;\n  },\n  isArray: function () {\n    var editing = Template.instance().editing.get();\n\n    if (!editing || !editing.filterModal || !editing.filterModal.field || !editing.filterModal.field.type) {\n      return false;\n    }\n\n    var fieldType = editing.filterModal.field.type;\n\n    if (fieldType && fieldType && _.isArray(fieldType)) {\n      return true;\n    }\n\n    return false;\n  },\n  editing: function () {\n    return Template.instance().editing.get();\n  },\n  manageFieldsEditContext: function () {\n    return Template.instance().data.edit;\n  },\n  search: function () {\n    if (Template.instance().data.search !== undefined) {\n      return Template.instance().data.search;\n    }\n\n    return Template.instance().availableColumns.get().length >= 15;\n  },\n  add: function () {\n    return Template.instance().data.edit;\n  },\n  title: function (column) {\n    return column.manageFieldsTitle || column.title;\n  },\n  header: function () {\n    var search = false;\n\n    if (Template.instance().data.search !== undefined) {\n      search = Template.instance().data.search;\n    }\n\n    search = Template.instance().availableColumns.get().length >= 15;\n    return search || Template.instance().data.edit;\n  },\n  required: function (column) {\n    return column.required;\n  },\n  selected: function (column) {\n    var templInstance = Template.instance();\n    return _.find(templInstance.data.selectedColumns, function (selectedColumn) {\n      return selectedColumn.id && selectedColumn.id === column.id || selectedColumn.data === column.data;\n    });\n  },\n  groups: function () {\n    var availableColumns = Template.instance().availableColumns.get();\n    var search = Template.instance().search.get();\n\n    if (search) {\n      availableColumns = availableColumns.filter(function (column) {\n        var title = column.manageFieldsTitle || column.title;\n        return title.match(new RegExp(search, \"i\"));\n      });\n    }\n\n    var groups = _.groupBy(availableColumns, \"group\");\n\n    delete groups[undefined];\n    return _.sortBy(_.map(groups, function (columns, title) {\n      return {\n        title: title,\n        columns: _.sortBy(columns, function (field) {\n          return field.label || field.manageGroupFieldsTitle || field.manageFieldsTitle || field.title;\n        })\n      };\n    }), \"title\");\n  },\n  ungroupedColumns: function () {\n    var availableColumns = Template.instance().availableColumns.get();\n    var search = Template.instance().search.get();\n\n    if (search) {\n      availableColumns = availableColumns.filter(function (column) {\n        var title = column.manageFieldsTitle || column.title;\n        return title.match(new RegExp(search, \"i\"));\n      });\n    }\n\n    var groups = _.groupBy(availableColumns, \"group\");\n\n    return _.sortBy(groups.undefined || [], function (field) {\n      return field.label || field.manageGroupFieldsTitle || field.manageFieldsTitle || field.title;\n    });\n  },\n  editable: function (column) {\n    var editable = column && column.manageFieldsModal && column.manageFieldsModal.field && column.manageFieldsModal.field.edit || column && column.filterModal && column.filterModal.field && column.filterModal.field.edit;\n    return editable;\n  },\n  availableColumns: function () {\n    var availableColumns = Template.instance().availableColumns.get();\n    var search = Template.instance().search.get();\n\n    if (search) {\n      return availableColumns.filter(function (column) {\n        var title = column.manageFieldsTitle || column.title;\n        return title.match(new RegExp(search, \"i\"));\n      });\n    }\n\n    return availableColumns;\n  }\n});","map":{"version":3,"sources":["packages/znewsham:dynamic-table/client/ui/components/manageFieldsModal/manageFieldsModal.js"],"names":["module","link","Template","dynamicTableManageFieldsModal","onCreated","search","ReactiveVar","editing","editableField","availableColumns","data","onRendered","Tracker","autorun","get","afterFlush","$","fn","select2","tags","placeholder","allowClear","_","union","id","value","compact","unique","pluck","map","g","text","val","groupName","trigger","events","e","templInstance","set","currentTarget","preventDefault","stopPropagation","colId","parent","attr","colData","column","find","col","spec","manageFieldsModal","field","edit","filterModal","selected","length","required","changeCallback","siblings","toggleClass","isEdit","callback","then","newColumnSpec","removeAttr","prevColumnSpec","columns","realColumn","c","index","indexOf","splice","push","dep","changed","editedCallback","addedCallback","catch","err","console","error","helpers","instance","fieldType","type","isArray","manageFieldsEditContext","undefined","add","title","manageFieldsTitle","header","selectedColumns","selectedColumn","groups","filter","match","RegExp","groupBy","sortBy","label","manageGroupFieldsTitle","ungroupedColumns","editable"],"mappings":"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","sourcesContent":["import \"./manageFieldsModal.css\";\nimport \"./manageFieldsModal.html\";\nimport \"../manageColumnsForm/manageColumnsForm.js\";\n\nTemplate.dynamicTableManageFieldsModal.onCreated(function onCreated() {\n  this.search = new ReactiveVar();\n  this.editing = new ReactiveVar(false);\n  this.editableField = new ReactiveVar(null);\n  this.availableColumns = new ReactiveVar(this.data.availableColumns);\n});\nTemplate.dynamicTableManageFieldsModal.onRendered(function onRendered() {\n  Tracker.autorun(() => {\n    if (this.editing.get()) {\n      Tracker.afterFlush(() => {\n        if ($.fn.select2) {\n          this.$(\".dynamic-table-manage-fields-edit-group\").select2({\n            tags: true,\n            placeholder: \"Select a Group\",\n            allowClear: true,\n            data: _.union(\n              [{ id: \"\", value: \"\" }],\n              _.compact(_.unique(_.pluck(this.data.availableColumns, \"group\"))).map(g => ({ id: g, text: g }))\n            )\n          });\n          this.$(\".dynamic-table-manage-fields-edit-group\").val(this.editing.get().groupName).trigger(\"change\");\n        }\n      });\n    }\n  });\n});\n\nTemplate.dynamicTableManageFieldsModal.events({\n  \"keydown input.search\"(e, templInstance) {\n    templInstance.search.set($(e.currentTarget).val());\n  },\n  \"keyup input.search\"(e, templInstance) {\n    templInstance.search.set($(e.currentTarget).val());\n  },\n  \"blur input.search\"(e, templInstance) {\n    templInstance.search.set($(e.currentTarget).val());\n  },\n  \"click .add-column\"(e, templInstance) {\n    templInstance.editing.set(true);\n  },\n  \"click li>.fa-pencil\"(e, templInstance) {\n    e.preventDefault();\n    e.stopPropagation();\n    const colId = $(e.currentTarget).parent().attr(\"data-id\");\n    const colData = $(e.currentTarget).parent().attr(\"data-data\");\n    const column = templInstance.data.availableColumns.find((col) => {\n      if (colId) {\n        return colId === col.id;\n      }\n      return colData === col.data;\n    });\n    templInstance.editing.set(true);\n    const spec = (column.manageFieldsModal && column.manageFieldsModal.field.edit.spec) ||\n                (column.filterModal && column.filterModal.field.edit.spec);\n    templInstance.editableField.set(spec);\n  },\n  \"click li\"(e, templInstance) {\n    const colId = $(e.currentTarget).attr(\"data-id\");\n    const colData = $(e.currentTarget).attr(\"data-data\");\n    const selected = $(e.currentTarget).find(\"i.fa-toggle-on\").length;\n    const column = templInstance.data.availableColumns.find((col) => {\n      if (colId) {\n        return colId === col.id;\n      }\n      return colData === col.data;\n    });\n    if (column.required) {\n      return;\n    }\n    templInstance.data.changeCallback(column, !selected);\n  },\n  \"click .dynamic-table-manage-fields-group-header\"(e, templInstance) {\n    $(e.currentTarget).siblings(\"ul\").toggleClass(\"display-table-manage-fields-group-hidden\");\n  },\n  \"click .btn-dynamic-table-cancel\"(e, templInstance) {\n    templInstance.editing.set(false);\n  },\n  \"click .btn-dynamic-table-save\"(e, templInstance) {\n    templInstance.$(\".btn-dynamic-table-save\").attr(\"disabled\", \"disabled\");\n    const isEdit = templInstance.editableField.get();\n    if (isEdit) {\n      templInstance.editableField.set(null);\n    }\n    templInstance.data.edit.callback(e, templInstance, isEdit)\n    .then((newColumnSpec) => {\n      templInstance.$(\".btn-dynamic-table-save\").removeAttr(\"disabled\");\n      templInstance.editing.set(false);\n      let prevColumnSpec;\n      if (isEdit) {\n        const columns = templInstance.availableColumns.get();\n        const realColumn = columns.find(c => c.data === newColumnSpec.data);\n        const index = columns.indexOf(realColumn);\n        prevColumnSpec = columns.splice(index, 1, newColumnSpec);\n      }\n      else {\n        templInstance.availableColumns.get().push(newColumnSpec);\n      }\n      templInstance.availableColumns.dep.changed();\n      if (isEdit) {\n        templInstance.data.edit.editedCallback(newColumnSpec, prevColumnSpec[0]);\n      }\n      else {\n        templInstance.data.edit.addedCallback(newColumnSpec);\n      }\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n  }\n});\nTemplate.dynamicTableManageFieldsModal.helpers({\n  editableField() {\n    return Template.instance().editableField.get();\n  },\n  fieldType() {\n    const editing = Template.instance().editing.get();\n    if (!editing || !editing.filterModal || !editing.filterModal.field || !editing.filterModal.field.type) {\n      return \"string\";\n    }\n    let fieldType = editing.filterModal.field.type;\n    if (fieldType && fieldType && _.isArray(fieldType)) {\n      fieldType = fieldType[0];\n    }\n    return fieldType;\n  },\n  isArray() {\n    const editing = Template.instance().editing.get();\n    if (!editing || !editing.filterModal || !editing.filterModal.field || !editing.filterModal.field.type) {\n      return false;\n    }\n    const fieldType = editing.filterModal.field.type;\n    if (fieldType && fieldType && _.isArray(fieldType)) {\n      return true;\n    }\n    return false;\n  },\n  editing() {\n    return Template.instance().editing.get();\n  },\n  manageFieldsEditContext() {\n    return Template.instance().data.edit;\n  },\n  search() {\n    if (Template.instance().data.search !== undefined) {\n      return Template.instance().data.search;\n    }\n    return Template.instance().availableColumns.get().length >= 15;\n  },\n  add() {\n    return Template.instance().data.edit;\n  },\n  title(column) {\n    return column.manageFieldsTitle || column.title;\n  },\n  header() {\n    let search = false;\n    if (Template.instance().data.search !== undefined) {\n      search = Template.instance().data.search;\n    }\n    search = Template.instance().availableColumns.get().length >= 15;\n    return search || Template.instance().data.edit;\n  },\n  required(column) {\n    return column.required;\n  },\n  selected(column) {\n    const templInstance = Template.instance();\n    return _.find(templInstance.data.selectedColumns, selectedColumn => (selectedColumn.id && selectedColumn.id === column.id) || selectedColumn.data === column.data);\n  },\n  groups() {\n    let availableColumns = Template.instance().availableColumns.get();\n    const search = Template.instance().search.get();\n    if (search) {\n      availableColumns = availableColumns.filter((column) => {\n        const title = column.manageFieldsTitle || column.title;\n        return title.match(new RegExp(search, \"i\"));\n      });\n    }\n    const groups = _.groupBy(availableColumns, \"group\");\n    delete groups[undefined];\n    return _.sortBy(_.map(groups, (columns, title) => ({\n      title,\n      columns: _.sortBy(columns, field => field.label || field.manageGroupFieldsTitle || field.manageFieldsTitle || field.title)\n    })), \"title\");\n  },\n  ungroupedColumns() {\n    let availableColumns = Template.instance().availableColumns.get();\n    const search = Template.instance().search.get();\n    if (search) {\n      availableColumns = availableColumns.filter((column) => {\n        const title = column.manageFieldsTitle || column.title;\n        return title.match(new RegExp(search, \"i\"));\n      });\n    }\n    const groups = _.groupBy(availableColumns, \"group\");\n    return _.sortBy(groups.undefined || [], field => field.label || field.manageGroupFieldsTitle || field.manageFieldsTitle || field.title);\n  },\n  editable(column) {\n    const editable = (column && column.manageFieldsModal && column.manageFieldsModal.field && column.manageFieldsModal.field.edit) ||\n                  (column && column.filterModal && column.filterModal.field && column.filterModal.field.edit);\n    return editable;\n  },\n  availableColumns() {\n    const availableColumns = Template.instance().availableColumns.get();\n    const search = Template.instance().search.get();\n    if (search) {\n      return availableColumns.filter((column) => {\n        const title = column.manageFieldsTitle || column.title;\n        return title.match(new RegExp(search, \"i\"));\n      });\n    }\n    return availableColumns;\n  }\n});\n"]},"sourceType":"script","hash":"f3d836dcc04c44b20e55a815049e838e4d4bf1f2"}
