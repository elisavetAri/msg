{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Sandbox\\test\\packages\\znewsham:dynamic-table\\client\\ui\\components\\manageColumnsForm\\manageColumnsForm.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/znewsham:dynamic-table/client/ui/components/manageColumnsForm/manageColumnsForm.js","filename":"C:\\Sandbox\\test\\packages\\znewsham:dynamic-table\\client\\ui\\components\\manageColumnsForm\\manageColumnsForm.js","passPerPreset":false,"envName":"development","cwd":"C:\\Sandbox\\test","root":"C:\\Sandbox\\test","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Sandbox\\test\\packages\\znewsham:dynamic-table\\client\\ui\\components\\manageColumnsForm\\manageColumnsForm.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/znewsham:dynamic-table/client/ui/components/manageColumnsForm/manageColumnsForm.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nmodule.export({\n  ManageColumnsForm: function () {\n    return ManageColumnsForm;\n  }\n});\nmodule.link(\"./manageColumnsForm.html\");\nvar Template;\nmodule.link(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 0);\nvar BlazeComponent;\nmodule.link(\"meteor/znewsham:blaze-component\", {\n  BlazeComponent: function (v) {\n    BlazeComponent = v;\n  }\n}, 1);\n\nvar ManageColumnsForm =\n/*#__PURE__*/\nfunction (_BlazeComponent) {\n  (0, _inheritsLoose2.default)(ManageColumnsForm, _BlazeComponent);\n\n  ManageColumnsForm.HelperMap = function () {\n    function HelperMap() {\n      return {\n        select2: \"select2\",\n        selectedIfEquals: \"selectedIfEquals\",\n        checkedIfTrue: \"checkedIfTrue\",\n        isDynamicFieldForm: \"isDynamicFieldForm\",\n        types: \"types\"\n      };\n    }\n\n    return HelperMap;\n  }();\n\n  var _proto = ManageColumnsForm.prototype;\n\n  _proto.isDynamicFieldForm = function () {\n    function isDynamicFieldForm() {\n      var edit = this.nonReactiveData().manageFieldsEditContext;\n      return edit && edit.dynamicFieldForm;\n    }\n\n    return isDynamicFieldForm;\n  }();\n\n  _proto.select2 = function () {\n    function select2() {\n      return $.fn.select2;\n    }\n\n    return select2;\n  }();\n\n  _proto.selectedIfEquals = function () {\n    function selectedIfEquals(val1, val2) {\n      return val1 == val2 ? {\n        selected: \"selected\"\n      } : {};\n    }\n\n    return selectedIfEquals;\n  }();\n\n  _proto.checkedIfTrue = function () {\n    function checkedIfTrue(val) {\n      return val || val === 0 ? {\n        checked: \"checked\"\n      } : {};\n    }\n\n    return checkedIfTrue;\n  }();\n\n  _proto.types = function () {\n    function types() {\n      var types = this.nonReactiveData().manageFieldsEditContext.types || [];\n      return types.map(function (t) {\n        if (_.isObject(t)) {\n          return t;\n        }\n\n        return {\n          value: t,\n          label: t\n        };\n      });\n    }\n\n    return types;\n  }();\n\n  function ManageColumnsForm(templInstance) {\n    return _BlazeComponent.call(this, templInstance) || this;\n  }\n\n  return ManageColumnsForm;\n}(BlazeComponent);\n\nBlazeComponent.register(Template.manageColumnsForm, ManageColumnsForm);","map":{"version":3,"sources":["packages/znewsham:dynamic-table/client/ui/components/manageColumnsForm/manageColumnsForm.js"],"names":["module","export","ManageColumnsForm","link","Template","v","BlazeComponent","HelperMap","select2","selectedIfEquals","checkedIfTrue","isDynamicFieldForm","types","edit","nonReactiveData","manageFieldsEditContext","dynamicFieldForm","$","fn","val1","val2","selected","val","checked","map","t","_","isObject","value","label","templInstance","register","manageColumnsForm"],"mappings":";;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,iBAAiB,EAAC;AAAA,WAAIA,iBAAJ;AAAA;AAAnB,CAAd;AAAyDF,MAAM,CAACG,IAAP,CAAY,0BAAZ;AAAwC,IAAIC,QAAJ;AAAaJ,MAAM,CAACG,IAAP,CAAY,mBAAZ,EAAgC;AAACC,EAAAA,QAAD,YAAUC,CAAV,EAAY;AAACD,IAAAA,QAAQ,GAACC,CAAT;AAAW;AAAxB,CAAhC,EAA0D,CAA1D;AAA6D,IAAIC,cAAJ;AAAmBN,MAAM,CAACG,IAAP,CAAY,iCAAZ,EAA8C;AAACG,EAAAA,cAAD,YAAgBD,CAAhB,EAAkB;AAACC,IAAAA,cAAc,GAACD,CAAf;AAAiB;AAApC,CAA9C,EAAoF,CAApF;;IAQjLH,iB;;;;;oBACJK,S;yBAAY;AACjB,aAAO;AACLC,QAAAA,OAAO,EAAE,SADJ;AAELC,QAAAA,gBAAgB,EAAE,kBAFb;AAGLC,QAAAA,aAAa,EAAE,eAHV;AAILC,QAAAA,kBAAkB,EAAE,oBAJf;AAKLC,QAAAA,KAAK,EAAE;AALF,OAAP;AAOD;;;;;;;SAEDD,kB;kCAAqB;AACnB,UAAME,IAAI,GAAG,KAAKC,eAAL,GAAuBC,uBAApC;AACA,aAAOF,IAAI,IAAIA,IAAI,CAACG,gBAApB;AACD;;;;;SAEDR,O;uBAAU;AACR,aAAOS,CAAC,CAACC,EAAF,CAAKV,OAAZ;AACD;;;;;SAEDC,gB;8BAAiBU,I,EAAMC,I,EAAM;AAC3B,aAAOD,IAAI,IAAIC,IAAR,GAAe;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAf,GAA0C,EAAjD;AACD;;;;;SAEDX,a;2BAAcY,G,EAAK;AACjB,aAAOA,GAAG,IAAIA,GAAG,KAAK,CAAf,GAAmB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAnB,GAA4C,EAAnD;AACD;;;;;SAEDX,K;qBAAQ;AACN,UAAMA,KAAK,GAAG,KAAKE,eAAL,GAAuBC,uBAAvB,CAA+CH,KAA/C,IAAwD,EAAtE;AACA,aAAOA,KAAK,CAACY,GAAN,CAAU,UAACC,CAAD,EAAO;AACtB,YAAIC,CAAC,CAACC,QAAF,CAAWF,CAAX,CAAJ,EAAmB;AACjB,iBAAOA,CAAP;AACD;;AACD,eAAO;AACLG,UAAAA,KAAK,EAAEH,CADF;AAELI,UAAAA,KAAK,EAAEJ;AAFF,SAAP;AAID,OARM,CAAP;AASD;;;;;AAED,6BAAYK,aAAZ,EAA2B;AAAA,WACzB,2BAAMA,aAAN,CADyB;AAE1B;;;EA3CoCxB,c;;AA8CvCA,cAAc,CAACyB,QAAf,CAAwB3B,QAAQ,CAAC4B,iBAAjC,EAAoD9B,iBAApD","sourcesContent":["\nimport \"./manageColumnsForm.html\";\n\n\nimport { Template } from \"meteor/templating\";\nimport { BlazeComponent } from \"meteor/znewsham:blaze-component\";\n\n\nexport class ManageColumnsForm extends BlazeComponent {\n  static HelperMap() {\n    return {\n      select2: \"select2\",\n      selectedIfEquals: \"selectedIfEquals\",\n      checkedIfTrue: \"checkedIfTrue\",\n      isDynamicFieldForm: \"isDynamicFieldForm\",\n      types: \"types\"\n    }\n  }\n\n  isDynamicFieldForm() {\n    const edit = this.nonReactiveData().manageFieldsEditContext;\n    return edit && edit.dynamicFieldForm;\n  }\n\n  select2() {\n    return $.fn.select2;\n  }\n\n  selectedIfEquals(val1, val2) {\n    return val1 == val2 ? { selected: \"selected\" } : {};\n  }\n\n  checkedIfTrue(val) {\n    return val || val === 0 ? { checked: \"checked\" } : {};\n  }\n\n  types() {\n    const types = this.nonReactiveData().manageFieldsEditContext.types || [];\n    return types.map((t) => {\n      if (_.isObject(t)) {\n        return t;\n      }\n      return {\n        value: t,\n        label: t\n      };\n    });\n  }\n\n  constructor(templInstance) {\n    super(templInstance);\n  }\n}\n\nBlazeComponent.register(Template.manageColumnsForm, ManageColumnsForm);\n"]},"sourceType":"script","hash":"87f5d2437c53ff1249e8d756d256c7498d4b7a50"}
