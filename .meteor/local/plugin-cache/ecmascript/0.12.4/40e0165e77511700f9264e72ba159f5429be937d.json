{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Sandbox\\test\\packages\\maxencecornet:audio-recorder\\lib\\client\\audio-recorder.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/maxencecornet:audio-recorder/lib/client/audio-recorder.js","filename":"C:\\Sandbox\\test\\packages\\maxencecornet:audio-recorder\\lib\\client\\audio-recorder.js","passPerPreset":false,"envName":"development","cwd":"C:\\Sandbox\\test","root":"C:\\Sandbox\\test","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Sandbox\\test\\packages\\maxencecornet:audio-recorder\\lib\\client\\audio-recorder.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/maxencecornet:audio-recorder/lib/client/audio-recorder.js"}},"code":"/**\n * Created by maxencecornet on 06/10/15.\n */\nAudioRecorder = function () {\n  this.mediaStream = null;\n  this.rec = null;\n};\n\nAudioRecorder.prototype.startRecording = function () {\n  var audioContext = this._setCompatibility();\n\n  this._record(audioContext);\n};\n\nAudioRecorder.prototype.stopRecording = function (format, filename, callback) {\n  check(format, String);\n  check(filename, String);\n  check(callback, Match.Optional(Function));\n  var self = this; // stop the media stream -- mediaStream.stop() is deprecated since Chrome 45\n\n  if (typeof self.mediaStream.stop === 'function') {\n    self.mediaStream.stop();\n  } else {\n    self.mediaStream.getTracks()[0].stop();\n  } // stop Recorder.js\n\n\n  self.rec.stop(); // export it to WAV or Uint8Array\n\n  self.rec.exportWAV(function (e) {\n    self.clear();\n\n    if (format == 'wav') {\n      Recorder.forceDownload(e, \"\" + filename + \".wav\");\n    } else if (format == 'Uint8Array') {\n      self._convertToArrayBuffer(e, function (e) {\n        var newFile = new Uint8Array(e.target.result);\n        callback(null, newFile);\n      });\n    }\n  });\n};\n\nAudioRecorder.prototype.clear = function () {\n  this.rec.clear();\n  this.mediaStream = null;\n};\n/*\n Private methods :\n */\n\n\nAudioRecorder.prototype._setCompatibility = function () {\n  var navigator = window.navigator;\n  navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n  var Context = window.AudioContext || window.webkitAudioContext;\n  var context = new Context();\n  return context;\n};\n\nAudioRecorder.prototype._convertToArrayBuffer = function (file, callback) {\n  var fileReader = new FileReader();\n  fileReader.onloadend = callback;\n  fileReader.readAsArrayBuffer(file);\n};\n\nAudioRecorder.prototype._record = function (context) {\n  var self = this; // ask for permission and start recording\n\n  navigator.getUserMedia({\n    audio: true\n  }, function (localMediaStream) {\n    self.mediaStream = localMediaStream; // create a stream source to pass to Recorder.js\n\n    var mediaStreamSource = context.createMediaStreamSource(localMediaStream); // create new instance of Recorder.js using the mediaStreamSource\n\n    self.rec = new Recorder(mediaStreamSource);\n    self.rec.record();\n  }, function (err) {\n    console.log('Browser not supported : ' + err);\n  });\n};","map":{"version":3,"sources":["packages/maxencecornet:audio-recorder/lib/client/audio-recorder.js"],"names":["AudioRecorder","mediaStream","rec","prototype","startRecording","audioContext","_setCompatibility","_record","stopRecording","format","filename","callback","check","String","Match","Optional","Function","self","stop","getTracks","exportWAV","e","clear","Recorder","forceDownload","_convertToArrayBuffer","newFile","Uint8Array","target","result","navigator","window","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Context","AudioContext","webkitAudioContext","context","file","fileReader","FileReader","onloadend","readAsArrayBuffer","audio","localMediaStream","mediaStreamSource","createMediaStreamSource","record","err","console","log"],"mappings":"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","sourcesContent":["/**\n * Created by maxencecornet on 06/10/15.\n */\n\nAudioRecorder = function () {\n    this.mediaStream = null;\n    this.rec = null;\n};\n\nAudioRecorder.prototype.startRecording = function () {\n    var audioContext = this._setCompatibility();\n    this._record(audioContext);\n};\n\nAudioRecorder.prototype.stopRecording = function (format, filename, callback) {\n    check(format, String);\n    check(filename, String);\n    check(callback, Match.Optional(Function));\n\n    var self = this;\n\n    // stop the media stream -- mediaStream.stop() is deprecated since Chrome 45\n    if (typeof(self.mediaStream.stop) === 'function') {\n        self.mediaStream.stop();\n    } else {\n        self.mediaStream.getTracks()[0].stop();\n    }\n\n    // stop Recorder.js\n    self.rec.stop();\n\n    // export it to WAV or Uint8Array\n    self.rec.exportWAV(function (e) {\n        self.clear();\n\n        if (format == 'wav') {\n            Recorder.forceDownload(e, \"\" + filename + \".wav\");\n        } else if (format == 'Uint8Array') {\n            self._convertToArrayBuffer(e, function (e) {\n                var newFile = new Uint8Array(e.target.result);\n                callback(null, newFile);\n\n            });\n        }\n    });\n};\n\nAudioRecorder.prototype.clear = function () {\n    this.rec.clear();\n    this.mediaStream = null;\n};\n\n/*\n Private methods :\n */\n\nAudioRecorder.prototype._setCompatibility = function () {\n    var navigator = window.navigator;\n    navigator.getUserMedia = (\n        navigator.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia ||\n        navigator.msGetUserMedia\n    );\n\n    var Context = window.AudioContext || window.webkitAudioContext;\n    var context = new Context();\n\n    return context;\n};\n\nAudioRecorder.prototype._convertToArrayBuffer = function (file, callback) {\n    var fileReader = new FileReader();\n    fileReader.onloadend = callback;\n    fileReader.readAsArrayBuffer(file);\n};\n\nAudioRecorder.prototype._record = function (context) {\n    var self = this;\n    // ask for permission and start recording\n    navigator.getUserMedia({audio: true}, function (localMediaStream) {\n        self.mediaStream = localMediaStream;\n\n        // create a stream source to pass to Recorder.js\n        var mediaStreamSource = context.createMediaStreamSource(localMediaStream);\n\n        // create new instance of Recorder.js using the mediaStreamSource\n        self.rec = new Recorder(mediaStreamSource);\n\n        self.rec.record();\n    }, function (err) {\n        console.log('Browser not supported : ' + err);\n    });\n};\n\n\n"]},"sourceType":"script","hash":"40e0165e77511700f9264e72ba159f5429be937d"}
