{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Sandbox\\test\\packages\\znewsham:dynamic-table\\client\\ui\\CustomizableTable.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/znewsham:dynamic-table/client/ui/CustomizableTable.js","filename":"C:\\Sandbox\\test\\packages\\znewsham:dynamic-table\\client\\ui\\CustomizableTable.js","passPerPreset":false,"envName":"development","cwd":"C:\\Sandbox\\test","root":"C:\\Sandbox\\test","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Sandbox\\test\\packages\\znewsham:dynamic-table\\client\\ui\\CustomizableTable.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/znewsham:dynamic-table/client/ui/CustomizableTable.js"}},"code":"module.link(\"./CustomizableTable.html\");\nmodule.link(\"./table.js\");\nmodule.link(\"./components/manageFieldsModal/manageFieldsModal.js\");\nvar getColumns, getPosition, changed, getCustom;\nmodule.link(\"../inlineSave.js\", {\n  getColumns: function (v) {\n    getColumns = v;\n  },\n  getPosition: function (v) {\n    getPosition = v;\n  },\n  changed: function (v) {\n    changed = v;\n  },\n  getCustom: function (v) {\n    getCustom = v;\n  }\n}, 0);\n\nvar _;\n\nmodule.link(\"underscore\", {\n  \"default\": function (v) {\n    _ = v;\n  }\n}, 1);\nvar EJSON;\nmodule.link(\"meteor/ejson\", {\n  EJSON: function (v) {\n    EJSON = v;\n  }\n}, 2);\n\nfunction filterColumns(columns, selectedColumnDataOrIds) {\n  return _.compact(selectedColumnDataOrIds.map(function (c) {\n    return columns.find(function (col) {\n      return col.id === c || col.data === c;\n    });\n  }));\n}\n\nTemplate.CustomizableTable.helpers({\n  removeColumn: function () {\n    var templInstance = Template.instance();\n    return function (column) {\n      var columns = templInstance.selectedColumns.get();\n\n      var columnIndex = _.findIndex(columns, function (col) {\n        return col.id === column.id || col.data === column.data;\n      });\n\n      columns.splice(columnIndex, 1);\n      templInstance.selectedColumns.set(columns);\n      changed(templInstance.data.custom, templInstance.data.id, {\n        newColumns: columns\n      });\n    };\n  },\n  advancedFilter: function () {\n    return Template.instance().advancedFilter.get();\n  },\n  modifyFilterCallback: function () {\n    var templInstance = Template.instance();\n    return function (newFilter, newOrder, columns) {\n      if (columns) {\n        var currentColumns = templInstance.selectedColumns.get();\n        columns.filter(function (col) {\n          return col.id;\n        }).forEach(function (col) {\n          var oldColumn = _.findWhere(currentColumns, {\n            id: col.id\n          });\n\n          if (oldColumn.data !== col.data) {\n            oldColumn.data = col.data;\n            templInstance.selectedColumns.dep.changed();\n          }\n        });\n      }\n\n      changed(templInstance.data.custom, templInstance.data.id, {\n        newColumns: Tracker.nonreactive(function () {\n          return templInstance.selectedColumns.get();\n        }),\n        newFilter: newFilter,\n        newOrder: newOrder\n      });\n    };\n  },\n  readyToRender: function () {\n    return Template.instance().selectedColumns.get().length;\n  },\n  buildTable: function () {\n    var tmplInstance = Template.instance();\n\n    var table = _.extend({}, Template.instance().data.table);\n\n    table.columns = Template.instance().selectedColumns.get();\n    var customOrder = Template.instance().order.get();\n    table.pageLength = tmplInstance.limit.get();\n    table.pageNumber = tmplInstance.skip.get() / table.pageLength;\n\n    if (customOrder) {\n      table.order = customOrder.map(function (o) {\n        var column = _.find(table.columns, function (c) {\n          return c.id && c.id === o.id || c.data === o.data;\n        });\n\n        return [table.columns.indexOf(column), o.order];\n      }).filter(function (o) {\n        return o[0] !== -1;\n      });\n    }\n\n    table.lengthChangeCallback = function (dataTable, length) {\n      changed(tmplInstance.data.custom, tmplInstance.data.id, {\n        newLimit: length,\n        newSkip: dataTable.api().page() * length\n      });\n    };\n\n    table.pageChangeCallback = function (dataTable, page) {\n      changed(tmplInstance.data.custom, tmplInstance.data.id, {\n        newSkip: page * tmplInstance.limit.get()\n      });\n    };\n\n    table.orderCallback = function (dataTable, newOrder) {\n      var columns = dataTable.api().context[0].aoColumns;\n      var order = JSON.parse(JSON.stringify(newOrder.map(function (o) {\n        return {\n          id: columns[o[0]].id,\n          data: columns[o[0]].data,\n          order: o[1]\n        };\n      })));\n\n      if (!EJSON.equals(order, Tracker.nonreactive(function () {\n        return tmplInstance.order.get();\n      }))) {\n        changed(tmplInstance.data.custom, tmplInstance.data.id, {\n          newOrder: order\n        });\n      }\n    };\n\n    table.colReorder = {\n      fnReorderCallback: Template.instance().fnReorderCallback\n    };\n    return table;\n  }\n});\nTemplate.CustomizableTable.events({\n  \"click a.clear-fields\": function (e, templInstance) {\n    e.preventDefault();\n    templInstance.selectedColumns.set(templInstance.data.table ? templInstance.data.table.columns : getColumns(templInstance.data.columns));\n    templInstance.advancedFilter.set(undefined);\n    templInstance.order.set(undefined);\n  },\n  \"click a.clear-filters\": function (e, templInstance) {\n    e.preventDefault();\n    var tableTemplateInstance = Blaze.getView(templInstance.$(\"table\")[0]).templateInstance();\n    tableTemplateInstance.advancedSearch.set({});\n    changed(templInstance.data.custom, templInstance.data.id, {\n      newColumns: templInstance.selectedColumns.get(),\n      unset: \"all\"\n    });\n    tableTemplateInstance.query.dep.changed();\n  },\n  \"click a.manage-fields\": function (e, templInstance) {\n    e.preventDefault();\n\n    var manageFieldsOptions = _.extend({\n      availableColumns: getColumns(templInstance.data.columns),\n      selectedColumns: templInstance.selectedColumns.get(),\n      tableData: templInstance.data,\n      changeCallback: function (column, add) {\n        var unsetField = false;\n        var columns = templInstance.selectedColumns.get();\n\n        if (add) {\n          columns.push(column);\n        } else {\n          var actualColumn = columns.find(function (col) {\n            if (column.id) {\n              return column.id === col.id;\n            }\n\n            return column.data === col.data;\n          });\n\n          if (!actualColumn) {\n            return;\n          }\n\n          var tableTemplateInstance = Blaze.getView(templInstance.$(\"table\")[0]).templateInstance();\n          var search = tableTemplateInstance.advancedSearch.get();\n\n          if (actualColumn.sortableField) {\n            delete search[actualColumn.sortableField];\n            unsetField = actualColumn.sortableField;\n          } else {\n            unsetField = actualColumn.data;\n            delete search[actualColumn.data];\n          }\n\n          tableTemplateInstance.advancedSearch.set(search);\n          tableTemplateInstance.query.dep.changed();\n          columns.splice(columns.indexOf(actualColumn), 1);\n        }\n\n        changed(templInstance.data.custom, templInstance.data.id, {\n          newColumns: columns,\n          unset: unsetField\n        });\n        templInstance.selectedColumns.set(columns);\n        manageFieldsOptions.selectedColumns = columns;\n\n        $(\"#dynamic-table-manage-fields-modal\")[0].__blazeTemplate.dataVar.set(manageFieldsOptions);\n      }\n    }, templInstance.data.manageFieldsOptions || {});\n\n    if (manageFieldsOptions.edit) {\n      manageFieldsOptions.edit.addedCallback = function (columnSpec) {\n        if (!_.isFunction(templInstance.data.columns)) {\n          templInstance.data.columns.push(columnSpec);\n        }\n\n        manageFieldsOptions.changeCallback(columnSpec, true);\n      };\n\n      manageFieldsOptions.edit.editedCallback = function (columnSpec, prevColumnSpec) {\n        if (!_.isFunction(templInstance.data.columns)) {\n          var realColumn = templInstance.data.columns.find(function (c) {\n            return c.id && c.id === columnSpec.id || c.data === columnSpec.data;\n          });\n          templInstance.data.columns.splice(templInstance.data.columns.indexOf(realColumn), 1, columnSpec);\n        }\n\n        var columns = templInstance.$(\"table\").dataTable().api().context[0].aoColumns;\n        var actualColumn = columns.find(function (c) {\n          return c.id && c.id === columnSpec.id || c.data === columnSpec.data;\n        });\n\n        if (actualColumn) {\n          if (actualColumn.nTh) {\n            actualColumn.nTh.innerHTML = actualColumn.nTh.innerHTML.replace(actualColumn.title, columnSpec.title);\n          }\n\n          actualColumn.title = columnSpec.label;\n        }\n      };\n    }\n\n    var bounds = getPosition(e.currentTarget);\n    var div = $(\"#dynamic-table-manage-fields-modal\").length ? $(\"#dynamic-table-manage-fields-modal\") : $(\"<div>\");\n    div.attr(\"id\", \"dynamic-table-manage-fields-modal\").html(\"\").css(\"position\", \"absolute\").css(\"top\", bounds.top + $(e.currentTarget).height()).css(\"left\", bounds.left);\n\n    if (div[0].__blazeTemplate) {\n      Blaze.remove(div[0].__blazeTemplate);\n    }\n\n    div[0].__blazeTemplate = Blaze.renderWithData(Template.dynamicTableManageFieldsModal, manageFieldsOptions, div[0]);\n    document.body.appendChild(div[0]);\n    var tooFar = bounds.left + div.width() - $(window).width();\n\n    if (tooFar > 0) {\n      div.css(\"left\", bounds.left - (tooFar + 5) + \"px\");\n    }\n  },\n  \"click a.add-column\": function (e, templInstance) {\n    e.preventDefault();\n    var columns = templInstance.selectedColumns.get();\n    var columnData = $(e.currentTarget).data(\"column\");\n\n    var column = _.findWhere(columns, {\n      data: columnData\n    });\n\n    if (column) {\n      columns.splice(columns.indexOf(column), 1);\n    } else {\n      columns.push(_.findWhere(getColumns(templInstance.data.columns), {\n        data: columnData\n      }));\n    }\n\n    templInstance.selectedColumns.set(columns);\n  }\n});\nTemplate.CustomizableTable.onCreated(function () {\n  function onCreated() {\n    var _this = this;\n\n    this.selectedColumns = new ReactiveVar([]);\n    this.order = new ReactiveVar();\n    this.advancedFilter = new ReactiveVar();\n    this.limit = new ReactiveVar(this.data.table.pageLength || 25);\n    this.skip = new ReactiveVar(0);\n\n    this.fnReorderCallback = function () {\n      var columns = _this.$(\"table\").dataTable().api().context[0].aoColumns;\n\n      var newColumns = _.sortBy(_this.selectedColumns.get(), function (c1) {\n        return columns.indexOf(_.find(columns, function (c2) {\n          return c2.id && c2.id === c1.id || c2.data === c1.data;\n        }));\n      });\n\n      _this.selectedColumns.set(newColumns);\n\n      changed(_this.data.custom, _this.data.id, {\n        newColumns: columns.map(function (col) {\n          return {\n            data: col.data,\n            id: col.id\n          };\n        })\n      });\n    };\n\n    var stop = false;\n\n    if (this.data.custom) {\n      stop = getCustom(this.data.custom, this.data.id, function (custom) {\n        var columnsToUse = custom.columns && custom.columns.length ? custom.columns : _this.data.table.columns;\n\n        _this.selectedColumns.set(filterColumns(getColumns(_this.data.columns), columnsToUse.map(function (c) {\n          return c.id || c.data;\n        })));\n\n        _this.advancedFilter.set(custom.filter ? JSON.parse(custom.filter) : {});\n\n        var oldOrder = Tracker.nonreactive(function () {\n          return _this.order.get();\n        });\n\n        if (EJSON.stringify(oldOrder) !== EJSON.stringify(custom.order || [])) {\n          _this.order.set(custom.order || []);\n        }\n\n        if (Tracker.nonreactive(function () {\n          return _this.limit.get();\n        }) !== (custom.limit || _this.data.table.pageLength || 25)) {\n          _this.limit.set(custom.limit || _this.data.table.pageLength || 25);\n        }\n\n        if (Tracker.nonreactive(function () {\n          return _this.skip.get();\n        }) !== (custom.skip || 0)) {\n          _this.skip.set(custom.skip || 0);\n        }\n      });\n    }\n\n    if (!stop && this.data.table.columns) {\n      this.selectedColumns.set(this.data.table.columns);\n    } else if (!stop) {\n      this.selectedColumns.set(getColumns(this.data.columns));\n    }\n  }\n\n  return onCreated;\n}());","map":{"version":3,"sources":["packages/znewsham:dynamic-table/client/ui/CustomizableTable.js"],"names":["module","link","getColumns","getPosition","changed","getCustom","v","_","EJSON","filterColumns","columns","selectedColumnDataOrIds","compact","map","c","find","col","id","data","Template","CustomizableTable","helpers","removeColumn","templInstance","instance","column","selectedColumns","get","columnIndex","findIndex","splice","set","custom","newColumns","advancedFilter","modifyFilterCallback","newFilter","newOrder","currentColumns","filter","forEach","oldColumn","findWhere","dep","Tracker","nonreactive","readyToRender","length","buildTable","tmplInstance","table","extend","customOrder","order","pageLength","limit","pageNumber","skip","o","indexOf","lengthChangeCallback","dataTable","newLimit","newSkip","api","page","pageChangeCallback","orderCallback","context","aoColumns","JSON","parse","stringify","equals","colReorder","fnReorderCallback","events","e","preventDefault","undefined","tableTemplateInstance","Blaze","getView","$","templateInstance","advancedSearch","unset","query","manageFieldsOptions","availableColumns","tableData","changeCallback","add","unsetField","push","actualColumn","search","sortableField","__blazeTemplate","dataVar","edit","addedCallback","columnSpec","isFunction","editedCallback","prevColumnSpec","realColumn","nTh","innerHTML","replace","title","label","bounds","currentTarget","div","attr","html","css","top","height","left","remove","renderWithData","dynamicTableManageFieldsModal","document","body","appendChild","tooFar","width","window","columnData","onCreated","ReactiveVar","sortBy","c1","c2","stop","columnsToUse","oldOrder"],"mappings":"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","sourcesContent":["import \"./CustomizableTable.html\";\nimport \"./table.js\";\nimport \"./components/manageFieldsModal/manageFieldsModal.js\";\nimport { getColumns, getPosition, changed, getCustom } from \"../inlineSave.js\";\nimport _ from \"underscore\";\nimport { EJSON } from \"meteor/ejson\";\n\nfunction filterColumns(columns, selectedColumnDataOrIds) {\n  return _.compact(selectedColumnDataOrIds.map((c) => {\n    return columns.find(col => col.id === c || col.data === c);\n  }));\n}\n\n\nTemplate.CustomizableTable.helpers({\n  removeColumn() {\n    const templInstance = Template.instance();\n    return (column) => {\n      const columns = templInstance.selectedColumns.get();\n      const columnIndex = _.findIndex(columns, col => col.id === column.id || col.data === column.data);\n      columns.splice(columnIndex, 1);\n      templInstance.selectedColumns.set(columns);\n      changed(templInstance.data.custom, templInstance.data.id, { newColumns: columns });\n    };\n  },\n  advancedFilter() {\n    return Template.instance().advancedFilter.get();\n  },\n  modifyFilterCallback() {\n    const templInstance = Template.instance();\n    return (newFilter, newOrder, columns) => {\n      if (columns) {\n        const currentColumns = templInstance.selectedColumns.get();\n        columns.filter(col => col.id).forEach((col) => {\n          const oldColumn = _.findWhere(currentColumns, { id: col.id });\n          if (oldColumn.data !== col.data) {\n            oldColumn.data = col.data;\n            templInstance.selectedColumns.dep.changed();\n          }\n        });\n      }\n      changed(templInstance.data.custom, templInstance.data.id, { newColumns: Tracker.nonreactive(() => templInstance.selectedColumns.get()), newFilter, newOrder });\n    };\n  },\n  readyToRender() {\n    return Template.instance().selectedColumns.get().length;\n  },\n  buildTable() {\n    const tmplInstance = Template.instance();\n    const table = _.extend({}, Template.instance().data.table);\n    table.columns = Template.instance().selectedColumns.get();\n    const customOrder = Template.instance().order.get();\n    table.pageLength = tmplInstance.limit.get();\n    table.pageNumber = tmplInstance.skip.get() / table.pageLength;\n    if (customOrder) {\n      table.order = customOrder.map((o) => {\n        const column = _.find(table.columns, c => (c.id && c.id === o.id) || c.data === o.data);\n        return [\n          table.columns.indexOf(column),\n          o.order\n        ];\n      }).filter(o => o[0] !== -1);\n    }\n    table.lengthChangeCallback = (dataTable, length) => {\n      changed(tmplInstance.data.custom, tmplInstance.data.id, { newLimit: length, newSkip: dataTable.api().page() * length });\n    };\n    table.pageChangeCallback = (dataTable, page) => {\n      changed(tmplInstance.data.custom, tmplInstance.data.id, { newSkip: page * tmplInstance.limit.get() });\n    };\n    table.orderCallback = (dataTable, newOrder) => {\n      const columns = dataTable.api().context[0].aoColumns;\n      const order = JSON.parse(JSON.stringify(newOrder.map(o => ({\n        id: columns[o[0]].id,\n        data: columns[o[0]].data,\n        order: o[1]\n      }))));\n      if (!EJSON.equals(order, Tracker.nonreactive(() => tmplInstance.order.get()))) {\n        changed(tmplInstance.data.custom, tmplInstance.data.id, { newOrder: order });\n      }\n    };\n    table.colReorder = {\n      fnReorderCallback: Template.instance().fnReorderCallback\n    };\n    return table;\n  }\n});\n\n\nTemplate.CustomizableTable.events({\n  \"click a.clear-fields\"(e, templInstance) {\n    e.preventDefault();\n    templInstance.selectedColumns.set(templInstance.data.table ? templInstance.data.table.columns : getColumns(templInstance.data.columns));\n    templInstance.advancedFilter.set(undefined);\n    templInstance.order.set(undefined);\n  },\n  \"click a.clear-filters\"(e, templInstance) {\n    e.preventDefault();\n    const tableTemplateInstance = Blaze.getView(templInstance.$(\"table\")[0]).templateInstance();\n    tableTemplateInstance.advancedSearch.set({});\n    changed(templInstance.data.custom, templInstance.data.id, { newColumns: templInstance.selectedColumns.get(), unset: \"all\" });\n    tableTemplateInstance.query.dep.changed();\n  },\n  \"click a.manage-fields\"(e, templInstance) {\n    e.preventDefault();\n    const manageFieldsOptions = _.extend({\n      availableColumns: getColumns(templInstance.data.columns),\n      selectedColumns: templInstance.selectedColumns.get(),\n      tableData: templInstance.data,\n      changeCallback(column, add) {\n        let unsetField = false;\n        const columns = templInstance.selectedColumns.get();\n        if (add) {\n          columns.push(column);\n        }\n        else {\n          const actualColumn = columns.find((col) => {\n            if (column.id) {\n              return column.id === col.id;\n            }\n            return column.data === col.data;\n          });\n          if (!actualColumn) {\n            return;\n          }\n          const tableTemplateInstance = Blaze.getView(templInstance.$(\"table\")[0]).templateInstance();\n          const search = tableTemplateInstance.advancedSearch.get();\n          if (actualColumn.sortableField) {\n            delete search[actualColumn.sortableField];\n            unsetField = actualColumn.sortableField;\n          }\n          else {\n            unsetField = actualColumn.data;\n            delete search[actualColumn.data];\n          }\n          tableTemplateInstance.advancedSearch.set(search);\n          tableTemplateInstance.query.dep.changed();\n          columns.splice(columns.indexOf(actualColumn), 1);\n        }\n        changed(templInstance.data.custom, templInstance.data.id, { newColumns: columns, unset: unsetField });\n        templInstance.selectedColumns.set(columns);\n        manageFieldsOptions.selectedColumns = columns;\n\n        $(\"#dynamic-table-manage-fields-modal\")[0].__blazeTemplate.dataVar.set(manageFieldsOptions);\n      }\n    }, templInstance.data.manageFieldsOptions || {});\n    if (manageFieldsOptions.edit) {\n      manageFieldsOptions.edit.addedCallback = (columnSpec) => {\n        if (!_.isFunction(templInstance.data.columns)) {\n          templInstance.data.columns.push(columnSpec);\n        }\n        manageFieldsOptions.changeCallback(columnSpec, true);\n      };\n      manageFieldsOptions.edit.editedCallback = (columnSpec, prevColumnSpec) => {\n        if (!_.isFunction(templInstance.data.columns)) {\n          const realColumn = templInstance.data.columns.find(c => (c.id && c.id === columnSpec.id) || c.data === columnSpec.data);\n          templInstance.data.columns.splice(templInstance.data.columns.indexOf(realColumn), 1, columnSpec);\n        }\n        const columns = templInstance.$(\"table\").dataTable().api().context[0].aoColumns;\n        const actualColumn = columns.find(c => (c.id && c.id === columnSpec.id) || c.data === columnSpec.data);\n        if (actualColumn) {\n          if (actualColumn.nTh) {\n            actualColumn.nTh.innerHTML = actualColumn.nTh.innerHTML.replace(actualColumn.title, columnSpec.title);\n          }\n          actualColumn.title = columnSpec.label;\n        }\n      };\n    }\n    const bounds = getPosition(e.currentTarget);\n    const div = $(\"#dynamic-table-manage-fields-modal\").length ? $(\"#dynamic-table-manage-fields-modal\") : $(\"<div>\");\n    div.attr(\"id\", \"dynamic-table-manage-fields-modal\")\n    .html(\"\")\n    .css(\"position\", \"absolute\")\n    .css(\"top\", bounds.top + $(e.currentTarget).height())\n    .css(\"left\", bounds.left)\n    if (div[0].__blazeTemplate) {\n      Blaze.remove(div[0].__blazeTemplate);\n    }\n    div[0].__blazeTemplate = Blaze.renderWithData(\n      Template.dynamicTableManageFieldsModal,\n      manageFieldsOptions,\n      div[0]\n    );\n    document.body.appendChild(div[0]);\n    const tooFar = (bounds.left + div.width()) - $(window).width();\n    if (tooFar > 0) {\n      div.css(\"left\", (bounds.left - (tooFar + 5)) + \"px\");\n    }\n  },\n  \"click a.add-column\"(e, templInstance) {\n    e.preventDefault();\n    const columns = templInstance.selectedColumns.get();\n    const columnData = $(e.currentTarget).data(\"column\");\n    const column = _.findWhere(columns, { data: columnData });\n    if (column) {\n      columns.splice(columns.indexOf(column), 1);\n    }\n    else {\n      columns.push(_.findWhere(getColumns(templInstance.data.columns), { data: columnData }));\n    }\n    templInstance.selectedColumns.set(columns);\n  }\n});\n\n\nTemplate.CustomizableTable.onCreated(function onCreated() {\n  this.selectedColumns = new ReactiveVar([]);\n  this.order = new ReactiveVar();\n  this.advancedFilter = new ReactiveVar();\n  this.limit = new ReactiveVar(this.data.table.pageLength || 25);\n  this.skip = new ReactiveVar(0);\n  this.fnReorderCallback = () => {\n    const columns = this.$(\"table\").dataTable().api().context[0].aoColumns;\n    const newColumns = _.sortBy(this.selectedColumns.get(), c1 => columns.indexOf(_.find(columns, c2 => (c2.id && c2.id === c1.id) || c2.data === c1.data)));\n    this.selectedColumns.set(newColumns);\n    changed(this.data.custom, this.data.id, { newColumns: columns.map(col => ({ data: col.data, id: col.id })) });\n  };\n  let stop = false;\n  if (this.data.custom) {\n    stop = getCustom(this.data.custom, this.data.id, (custom) => {\n      const columnsToUse = custom.columns && custom.columns.length ? custom.columns : this.data.table.columns;\n      this.selectedColumns.set(filterColumns(getColumns(this.data.columns), columnsToUse.map(c => c.id || c.data)));\n      this.advancedFilter.set(custom.filter ? JSON.parse(custom.filter) : {});\n      const oldOrder = Tracker.nonreactive(() => this.order.get());\n      if (EJSON.stringify(oldOrder) !== EJSON.stringify(custom.order || [])) {\n        this.order.set(custom.order || []);\n      }\n      if (Tracker.nonreactive(() => this.limit.get()) !== (custom.limit || this.data.table.pageLength || 25)) {\n        this.limit.set(custom.limit || this.data.table.pageLength || 25);\n      }\n      if (Tracker.nonreactive(() => this.skip.get()) !== (custom.skip || 0)) {\n        this.skip.set(custom.skip || 0);\n      }\n    });\n  }\n  if (!stop && this.data.table.columns) {\n    this.selectedColumns.set(this.data.table.columns);\n  }\n  else if (!stop) {\n    this.selectedColumns.set(getColumns(this.data.columns));\n  }\n});\n"]},"sourceType":"script","hash":"519ccbefc31bcb2118b3c26e6054a47bffdc2b61"}
