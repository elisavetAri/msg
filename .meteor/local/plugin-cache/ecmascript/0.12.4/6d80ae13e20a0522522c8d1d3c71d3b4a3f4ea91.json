{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Sandbox\\test\\packages\\znewsham:dynamic-table\\client\\db.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/znewsham:dynamic-table/client/db.js","filename":"C:\\Sandbox\\test\\packages\\znewsham:dynamic-table\\client\\db.js","passPerPreset":false,"envName":"development","cwd":"C:\\Sandbox\\test","root":"C:\\Sandbox\\test","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Sandbox\\test\\packages\\znewsham:dynamic-table\\client\\db.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/znewsham:dynamic-table/client/db.js"}},"code":"module.export({\n  getDistinctValuesCollection: () => getDistinctValuesCollection,\n  getGroupedInfoCollection: () => getGroupedInfoCollection,\n  getTableRecordsCollection: () => getTableRecordsCollection\n});\nconst tableRecords = new Mongo.Collection(\"__dynamicTableInformation\");\nconst tableGroupsInfo = new Mongo.Collection(\"__dynamicTableGroupInfo\");\nconst tableDistinctValues = new Mongo.Collection(\"__dynamicTableDistinctValues\");\nconst remoteTableRecords = [];\nconst remoteGroupInfos = [];\nconst remoteDistinctValues = [];\n\nfunction getDistinctValuesCollection(connection) {\n  if (!connection || connection === tableDistinctValues._connection) return tableDistinctValues;\n\n  let remote = _.find(remoteDistinctValues, _remote => _remote.connection === connection);\n\n  if (!remote) {\n    remote = {\n      connection,\n      distinctValues: new Mongo.Collection(\"__dynamicTableDistinctValues\", {\n        connection\n      })\n    };\n    remoteDistinctValues.push(remote);\n  }\n\n  return remote.distinctValues;\n}\n\nfunction getGroupedInfoCollection(connection) {\n  if (!connection || connection === tableGroupsInfo._connection) return tableGroupsInfo;\n\n  let remote = _.find(remoteTableRecords, _remote => _remote.connection === connection);\n\n  if (!remote) {\n    remote = {\n      connection,\n      groupInfo: new Mongo.Collection(\"__dynamicTableGroupInfo\", {\n        connection\n      })\n    };\n    remoteGroupInfos.push(remote);\n  }\n\n  return remote.groupInfo;\n}\n\nfunction getTableRecordsCollection(connection) {\n  if (!connection || connection === tableRecords._connection) return tableRecords;\n\n  let remote = _.find(remoteTableRecords, _remote => _remote.connection === connection);\n\n  if (!remote) {\n    remote = {\n      connection,\n      tableRecords: new Mongo.Collection(\"__dynamicTableInformation\", {\n        connection\n      })\n    };\n    remoteTableRecords.push(remote);\n  }\n\n  return remote.tableRecords;\n}","map":{"version":3,"sources":["packages/znewsham:dynamic-table/client/db.js"],"names":["module","export","getDistinctValuesCollection","getGroupedInfoCollection","getTableRecordsCollection","tableRecords","Mongo","Collection","tableGroupsInfo","tableDistinctValues","remoteTableRecords","remoteGroupInfos","remoteDistinctValues","connection","_connection","remote","_","find","_remote","distinctValues","push","groupInfo"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,2BAA2B,EAAC,MAAIA,2BAAjC;AAA6DC,EAAAA,wBAAwB,EAAC,MAAIA,wBAA1F;AAAmHC,EAAAA,yBAAyB,EAAC,MAAIA;AAAjJ,CAAd;AACA,MAAMC,YAAY,GAAG,IAAIC,KAAK,CAACC,UAAV,CAAqB,2BAArB,CAArB;AACA,MAAMC,eAAe,GAAG,IAAIF,KAAK,CAACC,UAAV,CAAqB,yBAArB,CAAxB;AACA,MAAME,mBAAmB,GAAG,IAAIH,KAAK,CAACC,UAAV,CAAqB,8BAArB,CAA5B;AACA,MAAMG,kBAAkB,GAAG,EAA3B;AACA,MAAMC,gBAAgB,GAAG,EAAzB;AACA,MAAMC,oBAAoB,GAAG,EAA7B;;AAEO,SAASV,2BAAT,CAAqCW,UAArC,EAAiD;AACtD,MAAI,CAACA,UAAD,IAAeA,UAAU,KAAKJ,mBAAmB,CAACK,WAAtD,EAAmE,OAAOL,mBAAP;;AAEnE,MAAIM,MAAM,GAAGC,CAAC,CAACC,IAAF,CAAOL,oBAAP,EAA6BM,OAAO,IAAIA,OAAO,CAACL,UAAR,KAAuBA,UAA/D,CAAb;;AACA,MAAI,CAACE,MAAL,EAAa;AACXA,IAAAA,MAAM,GAAG;AACPF,MAAAA,UADO;AAEPM,MAAAA,cAAc,EAAE,IAAIb,KAAK,CAACC,UAAV,CAAqB,8BAArB,EAAqD;AAAEM,QAAAA;AAAF,OAArD;AAFT,KAAT;AAIAD,IAAAA,oBAAoB,CAACQ,IAArB,CAA0BL,MAA1B;AACD;;AACD,SAAOA,MAAM,CAACI,cAAd;AACD;;AAEM,SAAShB,wBAAT,CAAkCU,UAAlC,EAA8C;AACnD,MAAI,CAACA,UAAD,IAAeA,UAAU,KAAKL,eAAe,CAACM,WAAlD,EAA+D,OAAON,eAAP;;AAE/D,MAAIO,MAAM,GAAGC,CAAC,CAACC,IAAF,CAAOP,kBAAP,EAA2BQ,OAAO,IAAIA,OAAO,CAACL,UAAR,KAAuBA,UAA7D,CAAb;;AACA,MAAI,CAACE,MAAL,EAAa;AACXA,IAAAA,MAAM,GAAG;AACPF,MAAAA,UADO;AAEPQ,MAAAA,SAAS,EAAE,IAAIf,KAAK,CAACC,UAAV,CAAqB,yBAArB,EAAgD;AAAEM,QAAAA;AAAF,OAAhD;AAFJ,KAAT;AAIAF,IAAAA,gBAAgB,CAACS,IAAjB,CAAsBL,MAAtB;AACD;;AACD,SAAOA,MAAM,CAACM,SAAd;AACD;;AACM,SAASjB,yBAAT,CAAmCS,UAAnC,EAA+C;AACpD,MAAI,CAACA,UAAD,IAAeA,UAAU,KAAKR,YAAY,CAACS,WAA/C,EAA4D,OAAOT,YAAP;;AAE5D,MAAIU,MAAM,GAAGC,CAAC,CAACC,IAAF,CAAOP,kBAAP,EAA2BQ,OAAO,IAAIA,OAAO,CAACL,UAAR,KAAuBA,UAA7D,CAAb;;AACA,MAAI,CAACE,MAAL,EAAa;AACXA,IAAAA,MAAM,GAAG;AACPF,MAAAA,UADO;AAEPR,MAAAA,YAAY,EAAE,IAAIC,KAAK,CAACC,UAAV,CAAqB,2BAArB,EAAkD;AAAEM,QAAAA;AAAF,OAAlD;AAFP,KAAT;AAIAH,IAAAA,kBAAkB,CAACU,IAAnB,CAAwBL,MAAxB;AACD;;AACD,SAAOA,MAAM,CAACV,YAAd;AACD","sourcesContent":["\nconst tableRecords = new Mongo.Collection(\"__dynamicTableInformation\");\nconst tableGroupsInfo = new Mongo.Collection(\"__dynamicTableGroupInfo\");\nconst tableDistinctValues = new Mongo.Collection(\"__dynamicTableDistinctValues\");\nconst remoteTableRecords = [];\nconst remoteGroupInfos = [];\nconst remoteDistinctValues = [];\n\nexport function getDistinctValuesCollection(connection) {\n  if (!connection || connection === tableDistinctValues._connection) return tableDistinctValues;\n\n  let remote = _.find(remoteDistinctValues, _remote => _remote.connection === connection);\n  if (!remote) {\n    remote = {\n      connection,\n      distinctValues: new Mongo.Collection(\"__dynamicTableDistinctValues\", { connection })\n    };\n    remoteDistinctValues.push(remote);\n  }\n  return remote.distinctValues;\n}\n\nexport function getGroupedInfoCollection(connection) {\n  if (!connection || connection === tableGroupsInfo._connection) return tableGroupsInfo;\n\n  let remote = _.find(remoteTableRecords, _remote => _remote.connection === connection);\n  if (!remote) {\n    remote = {\n      connection,\n      groupInfo: new Mongo.Collection(\"__dynamicTableGroupInfo\", { connection })\n    };\n    remoteGroupInfos.push(remote);\n  }\n  return remote.groupInfo;\n}\nexport function getTableRecordsCollection(connection) {\n  if (!connection || connection === tableRecords._connection) return tableRecords;\n\n  let remote = _.find(remoteTableRecords, _remote => _remote.connection === connection);\n  if (!remote) {\n    remote = {\n      connection,\n      tableRecords: new Mongo.Collection(\"__dynamicTableInformation\", { connection })\n    };\n    remoteTableRecords.push(remote);\n  }\n  return remote.tableRecords;\n}\n"]},"sourceType":"script","hash":"6d80ae13e20a0522522c8d1d3c71d3b4a3f4ea91"}
