{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Sandbox\\test\\packages\\znewsham:dynamic-table\\client\\ui\\components\\manageColumnsForm\\manageColumnsForm.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/znewsham:dynamic-table/client/ui/components/manageColumnsForm/manageColumnsForm.js","filename":"C:\\Sandbox\\test\\packages\\znewsham:dynamic-table\\client\\ui\\components\\manageColumnsForm\\manageColumnsForm.js","passPerPreset":false,"envName":"development","cwd":"C:\\Sandbox\\test","root":"C:\\Sandbox\\test","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Sandbox\\test\\packages\\znewsham:dynamic-table\\client\\ui\\components\\manageColumnsForm\\manageColumnsForm.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/znewsham:dynamic-table/client/ui/components/manageColumnsForm/manageColumnsForm.js"}},"code":"module.export({\n  ManageColumnsForm: () => ManageColumnsForm\n});\nmodule.link(\"./manageColumnsForm.html\");\nlet Template;\nmodule.link(\"meteor/templating\", {\n  Template(v) {\n    Template = v;\n  }\n\n}, 0);\nlet BlazeComponent;\nmodule.link(\"meteor/znewsham:blaze-component\", {\n  BlazeComponent(v) {\n    BlazeComponent = v;\n  }\n\n}, 1);\n\nclass ManageColumnsForm extends BlazeComponent {\n  static HelperMap() {\n    return {\n      select2: \"select2\",\n      selectedIfEquals: \"selectedIfEquals\",\n      checkedIfTrue: \"checkedIfTrue\",\n      isDynamicFieldForm: \"isDynamicFieldForm\",\n      types: \"types\"\n    };\n  }\n\n  isDynamicFieldForm() {\n    const edit = this.nonReactiveData().manageFieldsEditContext;\n    return edit && edit.dynamicFieldForm;\n  }\n\n  select2() {\n    return $.fn.select2;\n  }\n\n  selectedIfEquals(val1, val2) {\n    return val1 == val2 ? {\n      selected: \"selected\"\n    } : {};\n  }\n\n  checkedIfTrue(val) {\n    return val || val === 0 ? {\n      checked: \"checked\"\n    } : {};\n  }\n\n  types() {\n    const types = this.nonReactiveData().manageFieldsEditContext.types || [];\n    return types.map(t => {\n      if (_.isObject(t)) {\n        return t;\n      }\n\n      return {\n        value: t,\n        label: t\n      };\n    });\n  }\n\n  constructor(templInstance) {\n    super(templInstance);\n  }\n\n}\n\nBlazeComponent.register(Template.manageColumnsForm, ManageColumnsForm);","map":{"version":3,"sources":["packages/znewsham:dynamic-table/client/ui/components/manageColumnsForm/manageColumnsForm.js"],"names":["module","export","ManageColumnsForm","link","Template","v","BlazeComponent","HelperMap","select2","selectedIfEquals","checkedIfTrue","isDynamicFieldForm","types","edit","nonReactiveData","manageFieldsEditContext","dynamicFieldForm","$","fn","val1","val2","selected","val","checked","map","t","_","isObject","value","label","constructor","templInstance","register","manageColumnsForm"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,iBAAiB,EAAC,MAAIA;AAAvB,CAAd;AAAyDF,MAAM,CAACG,IAAP,CAAY,0BAAZ;AAAwC,IAAIC,QAAJ;AAAaJ,MAAM,CAACG,IAAP,CAAY,mBAAZ,EAAgC;AAACC,EAAAA,QAAQ,CAACC,CAAD,EAAG;AAACD,IAAAA,QAAQ,GAACC,CAAT;AAAW;;AAAxB,CAAhC,EAA0D,CAA1D;AAA6D,IAAIC,cAAJ;AAAmBN,MAAM,CAACG,IAAP,CAAY,iCAAZ,EAA8C;AAACG,EAAAA,cAAc,CAACD,CAAD,EAAG;AAACC,IAAAA,cAAc,GAACD,CAAf;AAAiB;;AAApC,CAA9C,EAAoF,CAApF;;AAQvL,MAAMH,iBAAN,SAAgCI,cAAhC,CAA+C;AACpD,SAAOC,SAAP,GAAmB;AACjB,WAAO;AACLC,MAAAA,OAAO,EAAE,SADJ;AAELC,MAAAA,gBAAgB,EAAE,kBAFb;AAGLC,MAAAA,aAAa,EAAE,eAHV;AAILC,MAAAA,kBAAkB,EAAE,oBAJf;AAKLC,MAAAA,KAAK,EAAE;AALF,KAAP;AAOD;;AAEDD,EAAAA,kBAAkB,GAAG;AACnB,UAAME,IAAI,GAAG,KAAKC,eAAL,GAAuBC,uBAApC;AACA,WAAOF,IAAI,IAAIA,IAAI,CAACG,gBAApB;AACD;;AAEDR,EAAAA,OAAO,GAAG;AACR,WAAOS,CAAC,CAACC,EAAF,CAAKV,OAAZ;AACD;;AAEDC,EAAAA,gBAAgB,CAACU,IAAD,EAAOC,IAAP,EAAa;AAC3B,WAAOD,IAAI,IAAIC,IAAR,GAAe;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAf,GAA0C,EAAjD;AACD;;AAEDX,EAAAA,aAAa,CAACY,GAAD,EAAM;AACjB,WAAOA,GAAG,IAAIA,GAAG,KAAK,CAAf,GAAmB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAnB,GAA4C,EAAnD;AACD;;AAEDX,EAAAA,KAAK,GAAG;AACN,UAAMA,KAAK,GAAG,KAAKE,eAAL,GAAuBC,uBAAvB,CAA+CH,KAA/C,IAAwD,EAAtE;AACA,WAAOA,KAAK,CAACY,GAAN,CAAWC,CAAD,IAAO;AACtB,UAAIC,CAAC,CAACC,QAAF,CAAWF,CAAX,CAAJ,EAAmB;AACjB,eAAOA,CAAP;AACD;;AACD,aAAO;AACLG,QAAAA,KAAK,EAAEH,CADF;AAELI,QAAAA,KAAK,EAAEJ;AAFF,OAAP;AAID,KARM,CAAP;AASD;;AAEDK,EAAAA,WAAW,CAACC,aAAD,EAAgB;AACzB,UAAMA,aAAN;AACD;;AA3CmD;;AA8CtDzB,cAAc,CAAC0B,QAAf,CAAwB5B,QAAQ,CAAC6B,iBAAjC,EAAoD/B,iBAApD","sourcesContent":["\nimport \"./manageColumnsForm.html\";\n\n\nimport { Template } from \"meteor/templating\";\nimport { BlazeComponent } from \"meteor/znewsham:blaze-component\";\n\n\nexport class ManageColumnsForm extends BlazeComponent {\n  static HelperMap() {\n    return {\n      select2: \"select2\",\n      selectedIfEquals: \"selectedIfEquals\",\n      checkedIfTrue: \"checkedIfTrue\",\n      isDynamicFieldForm: \"isDynamicFieldForm\",\n      types: \"types\"\n    }\n  }\n\n  isDynamicFieldForm() {\n    const edit = this.nonReactiveData().manageFieldsEditContext;\n    return edit && edit.dynamicFieldForm;\n  }\n\n  select2() {\n    return $.fn.select2;\n  }\n\n  selectedIfEquals(val1, val2) {\n    return val1 == val2 ? { selected: \"selected\" } : {};\n  }\n\n  checkedIfTrue(val) {\n    return val || val === 0 ? { checked: \"checked\" } : {};\n  }\n\n  types() {\n    const types = this.nonReactiveData().manageFieldsEditContext.types || [];\n    return types.map((t) => {\n      if (_.isObject(t)) {\n        return t;\n      }\n      return {\n        value: t,\n        label: t\n      };\n    });\n  }\n\n  constructor(templInstance) {\n    super(templInstance);\n  }\n}\n\nBlazeComponent.register(Template.manageColumnsForm, ManageColumnsForm);\n"]},"sourceType":"script","hash":"8599ffb102fa60183baf2f2e748e06f8c53ea5a9"}
