{"head":"","body":"","js":"\nTemplate.__checkName(\"dynamicTableFilterModal\");\nTemplate[\"dynamicTableFilterModal\"] = new Template(\"Template.dynamicTableFilterModal\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"dynamic-table-filter\"\n  }, \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"field\"), \"label\"));\n  }, function() {\n    return [ \"\\n      \", HTML.HEADER({\n      class: \"dynamic-table-filter-header\"\n    }, \"\\n        \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"editing\"));\n    }, function() {\n      return \"Edit\";\n    }, function() {\n      return \"Filter by\";\n    }), \": \", HTML.B(Blaze.View(\"lookup:fieldLabel\", function() {\n      return Spacebars.mustache(view.lookup(\"fieldLabel\"));\n    })), \"\\n        \", Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"field\"), \"edit\"));\n    }, function() {\n      return [ \"\\n          \", Blaze.Unless(function() {\n        return Spacebars.call(view.lookup(\"editing\"));\n      }, function() {\n        return [ \"\\n            \", HTML.SPAN({\n          class: \"dynamic-table-filter-edit-btn\"\n        }, \"\\n              \", HTML.I({\n          class: \"fa fa-pencil\"\n        }), \" Edit\\n            \"), \"\\n          \" ];\n      }), \"\\n        \" ];\n    }), \"\\n      \"), \"\\n    \" ];\n  }), \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"loading\"));\n  }, function() {\n    return [ \"\\n      \", HTML.DIV({\n      style: \"position: absolute; top: 0px; bottom: 0px; left: 0px; right: 0px; background-color: #fff; opacity: 0.5;\"\n    }, \"\\n\\n      \"), \"\\n    \" ];\n  }), \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"editing\"));\n  }, function() {\n    return [ \"\\n      \", Blaze._TemplateWith(function() {\n      return {\n        editableField: Spacebars.call(view.lookup(\"editableField\")),\n        manageFieldsEditContext: Spacebars.call(view.lookup(\"manageFieldsEditContext\"))\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"manageColumnsForm\"));\n    }), \"\\n    \" ];\n  }, function() {\n    return [ \"\\n      \", Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"sort\"), \"enabled\"));\n    }, function() {\n      return [ \"\\n        \", HTML.SECTION({\n        class: \"dynamic-table-filter-sort\"\n      }, \"\\n          \", HTML.LABEL(\"Sort\"), \"\\n          \", HTML.DIV(\"\\n            \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"isNumericOrDate\"));\n      }, function() {\n        return [ \"\\n              \", HTML.BUTTON({\n          class: function() {\n            return [ \"btn btn-dynamic-table-sort \", Blaze.If(function() {\n              return Spacebars.dataMustache(view.lookup(\"sortDirection\"), 1);\n            }, function() {\n              return \"btn-dynamic-table-selected\";\n            }) ];\n          },\n          \"data-direction\": \"1\"\n        }, \"0-9\"), \"\\n              \", HTML.BUTTON({\n          class: function() {\n            return [ \"btn btn-dynamic-table-sort \", Blaze.If(function() {\n              return Spacebars.dataMustache(view.lookup(\"sortDirection\"), -1);\n            }, function() {\n              return \"btn-dynamic-table-selected\";\n            }) ];\n          },\n          \"data-direction\": \"-1\"\n        }, \"9-0\"), \"\\n            \" ];\n      }), \"\\n            \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"isStringOrCustom\"));\n      }, function() {\n        return [ \"\\n              \", HTML.BUTTON({\n          class: function() {\n            return [ \"btn btn-dynamic-table-sort \", Blaze.If(function() {\n              return Spacebars.dataMustache(view.lookup(\"sortDirection\"), 1);\n            }, function() {\n              return \"btn-dynamic-table-selected\";\n            }) ];\n          },\n          \"data-direction\": \"1\"\n        }, \"A-Z\"), \"\\n              \", HTML.BUTTON({\n          class: function() {\n            return [ \"btn btn-dynamic-table-sort \", Blaze.If(function() {\n              return Spacebars.dataMustache(view.lookup(\"sortDirection\"), -1);\n            }, function() {\n              return \"btn-dynamic-table-selected\";\n            }) ];\n          },\n          \"data-direction\": \"-1\"\n        }, \"Z-A\"), \"\\n            \" ];\n      }), \"\\n          \"), \"\\n          \", HTML.HR(), \"\\n        \"), \"\\n      \" ];\n    }), \"\\n      \", Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"filter\"), \"enabled\"));\n    }, function() {\n      return [ \"\\n        \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"hasSelectedOptions\"));\n      }, function() {\n        return [ \"\\n          \", HTML.SECTION({\n          class: \"dynamic-table-filter-selected\"\n        }, \"\\n            \", Blaze.Each(function() {\n          return {\n            _sequence: Spacebars.call(view.lookup(\"selectedOptions\")),\n            _variable: \"option\"\n          };\n        }, function() {\n          return [ \"\\n              \", HTML.LABEL({\n            \"data-value\": function() {\n              return Spacebars.mustache(Spacebars.dot(view.lookup(\"option\"), \"value\"));\n            },\n            class: \"label-dynamic-table-selected\"\n          }, \"\\n                \", Blaze.View(\"lookup:option.label\", function() {\n            return Spacebars.mustache(Spacebars.dot(view.lookup(\"option\"), \"label\"));\n          }), \"\\n                \", HTML.I({\n            class: \"fa fa-times\"\n          }), \"\\n              \"), \"\\n            \" ];\n        }), \"\\n          \"), \"\\n        \" ];\n      }), \"\\n        \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"searchEnabled\"));\n      }, function() {\n        return [ \"\\n          \", HTML.SECTION({\n          class: \"dynamic-table-filter-search\"\n        }, \"\\n            \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"isStringOrCustom\"));\n        }, function() {\n          return [ \"\\n              \", HTML.INPUT({\n            type: \"text\",\n            class: \"input-dynamic-table-search\",\n            placeholder: function() {\n              return Blaze.If(function() {\n                return Spacebars.call(view.lookup(\"hasOptions\"));\n              }, function() {\n                return \"Search values...\";\n              }, function() {\n                return \"Search...\";\n              });\n            },\n            value: function() {\n              return Spacebars.mustache(Spacebars.dot(view.lookup(\"filter\"), \"search\", \"value\"));\n            }\n          }), \"\\n\\n              \", Blaze.If(function() {\n            return Spacebars.call(Spacebars.dot(view.lookup(\"filter\"), \"operator\", \"enabled\"));\n          }, function() {\n            return [ \"\\n                \", HTML.I({\n              class: \"fa fa-cog\"\n            }), \"\\n              \" ];\n          }), \"\\n            \" ];\n        }), \"\\n            \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"isNumber\"));\n        }, function() {\n          return [ \"\\n              \", HTML.INPUT({\n            type: \"number\",\n            class: \"input-dynamic-table-search\",\n            placeholder: \"Value\",\n            value: function() {\n              return Spacebars.mustache(view.lookup(\"numberValue\"));\n            }\n          }), \"\\n              \", Blaze.If(function() {\n            return Spacebars.call(Spacebars.dot(view.lookup(\"filter\"), \"operator\", \"enabled\"));\n          }, function() {\n            return [ \"\\n                \", HTML.I({\n              class: \"fa fa-cog\"\n            }), \"\\n              \" ];\n          }), \"\\n            \" ];\n        }), \"\\n            \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"isDate\"));\n        }, function() {\n          return [ \"\\n              \", HTML.LABEL(\"Date\"), \"\\n              \", HTML.INPUT({\n            type: \"date\",\n            class: \"input-dynamic-table-search\",\n            placeholder: \"Date...\",\n            value: function() {\n              return Spacebars.mustache(view.lookup(\"dateValue\"));\n            }\n          }), \"\\n            \" ];\n        }), \"\\n            \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"isTime\"));\n        }, function() {\n          return [ \"\\n              \", HTML.LABEL(\"Time\"), \"\\n              \", HTML.INPUT({\n            type: \"number\",\n            class: \"input-dynamic-table-search\",\n            placeholder: \"Min\",\n            value: function() {\n              return Spacebars.mustache(view.lookup(\"minuteValue\"));\n            },\n            style: \"width: 49%;\"\n          }), \"\\n              \", HTML.INPUT({\n            type: \"number\",\n            class: \"input-dynamic-table-search\",\n            placeholder: \"Sec\",\n            value: function() {\n              return Spacebars.mustache(view.lookup(\"secondValue\"));\n            },\n            style: \"width: 49%;\"\n          }), \"\\n            \" ];\n        }), \"\\n          \"), \"\\n        \" ];\n      }), \"\\n          \", Blaze.If(function() {\n        return Spacebars.call(Spacebars.dot(view.lookup(\"filter\"), \"operator\", \"enabled\"));\n      }, function() {\n        return [ \"\\n          \", HTML.SECTION({\n          class: \"dynamic-table-filter-operator\",\n          style: function() {\n            return Blaze.Unless(function() {\n              return Spacebars.call(view.lookup(\"showOperators\"));\n            }, function() {\n              return \"display: none;\";\n            });\n          }\n        }, \"\\n            \", HTML.LABEL(\"Where column\"), \"\\n            \", HTML.SELECT({\n          class: \"select-dynamic-table-operator\"\n        }, \"\\n            \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"isNumericOrDateAndNoOptions\"));\n        }, function() {\n          return [ \"\\n              \", HTML.OPTION(HTML.Attrs({\n            value: \"$between\"\n          }, function() {\n            return Spacebars.attrMustache(view.lookup(\"checkedIfWithValue\"));\n          }), \"Equals\"), \"\\n              \", HTML.OPTION({\n            value: \"$gte\"\n          }, \"Greater\"), \"\\n              \", HTML.OPTION({\n            value: \"$lte\"\n          }, \"Less Than\"), \"\\n            \" ];\n        }, function() {\n          return [ \"\\n              \", HTML.OPTION(HTML.Attrs({\n            value: \"$in\"\n          }, function() {\n            return Spacebars.attrMustache(view.lookup(\"checkedIfWithValue\"));\n          }), \"contains (OR)\"), \"\\n              \", Blaze.If(function() {\n            return Spacebars.call(view.lookup(\"hasOptions\"));\n          }, function() {\n            return [ \"\\n                \", Blaze.If(function() {\n              return Spacebars.call(view.lookup(\"isArrayField\"));\n            }, function() {\n              return [ \"\\n                  \", HTML.OPTION(HTML.Attrs({\n                value: \"$all\"\n              }, function() {\n                return Spacebars.attrMustache(view.lookup(\"checkedIfWithAllValue\"));\n              }), \"contains (ALL)\"), \"\\n                \" ];\n            }), \"\\n              \" ];\n          }), \"\\n              \", HTML.OPTION(HTML.Attrs({\n            value: \"$nin\"\n          }, function() {\n            return Spacebars.attrMustache(view.lookup(\"checkedIfWithoutValue\"));\n          }), \"does not contain (OR)\"), \"\\n              \", Blaze.If(function() {\n            return Spacebars.call(view.lookup(\"hasOptions\"));\n          }, function() {\n            return [ \"\\n                \", Blaze.If(function() {\n              return Spacebars.call(view.lookup(\"isArrayField\"));\n            }, function() {\n              return [ \"\\n                  \", HTML.OPTION(HTML.Attrs({\n                value: \"$not$all\"\n              }, function() {\n                return Spacebars.attrMustache(view.lookup(\"checkedIfWithoutAllValue\"));\n              }), \"does not contain (ALL)\"), \"\\n                \" ];\n            }), \"\\n              \" ];\n          }), \"\\n            \" ];\n        }), \"\\n            \"), \"\\n          \"), \"\\n        \" ];\n      }), \"\\n        \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"hasOptions\"));\n      }, function() {\n        return [ \"\\n          \", HTML.SECTION({\n          class: \"dynamic-table-filter-options\"\n        }, \"\\n            \", HTML.LABEL(\"Values\", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"searching\"));\n        }, function() {\n          return \"...\";\n        })), \"\\n            \", Blaze.Unless(function() {\n          return Spacebars.call(Spacebars.dot(view.lookup(\"options\"), \"length\"));\n        }, function() {\n          return \"\\n              Start typing to see your options\\n            \";\n        }), \"\\n            \", HTML.DIV({\n          class: \"inner\"\n        }, \"\\n              \", Blaze.Each(function() {\n          return {\n            _sequence: Spacebars.call(view.lookup(\"options\")),\n            _variable: \"option\"\n          };\n        }, function() {\n          return [ \"\\n                \", HTML.LABEL(HTML.INPUT(HTML.Attrs({\n            class: \"input-dynamic-table-option\",\n            type: \"checkbox\",\n            value: function() {\n              return Spacebars.mustache(Spacebars.dot(view.lookup(\"option\"), \"value\"));\n            }\n          }, function() {\n            return Spacebars.attrMustache(view.lookup(\"checkedIfSelected\"), Spacebars.dot(view.lookup(\"option\"), \"value\"));\n          })), \" \", HTML.SPAN({\n            class: \"dynamic-table-option-value\"\n          }, Blaze.View(\"lookup:option.label\", function() {\n            return Spacebars.mustache(Spacebars.dot(view.lookup(\"option\"), \"label\"));\n          }))), \"\\n              \" ];\n        }), \"\\n            \"), \"\\n          \"), \"\\n        \" ];\n      }), \"\\n      \" ];\n    }), \"\\n    \" ];\n  }), \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"hasFooter\"));\n  }, function() {\n    return [ \"\\n      \", HTML.FOOTER({\n      class: \"dynamic-table-filter-footer\",\n      style: function() {\n        return Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"editing\"));\n        }, function() {\n          return \"text-align: right; padding: 6px;\";\n        });\n      }\n    }, \"\\n        \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"editing\"));\n    }, function() {\n      return [ \"\\n          \", HTML.BUTTON({\n        class: \"btn btn-default btn-dynamic-table-cancel\"\n      }, \"Cancel\"), \"\\n          \", HTML.BUTTON({\n        class: \"btn btn-success btn-dynamic-table-save\"\n      }, \"Save\"), \"\\n        \" ];\n    }, function() {\n      return [ \"\\n          \", Blaze.Unless(function() {\n        return Spacebars.call(Spacebars.dot(view.lookup(\"field\"), \"required\"));\n      }, function() {\n        return [ \"\\n            \", HTML.SPAN({\n          class: \"btn-dynamic-table-remove\"\n        }, HTML.I({\n          class: \"fa fa-eye-slash\"\n        }), \" Hide Column\"), \"\\n          \" ];\n      }), \"\\n          \", Blaze.If(function() {\n        return Spacebars.call(Spacebars.dot(view.lookup(\"filter\"), \"enabled\"));\n      }, function() {\n        return [ \"\\n            \", HTML.SPAN({\n          class: \"btn-dynamic-table-clear\"\n        }, HTML.I({\n          class: \"fa fa-times\"\n        }), \" Clear\"), \"\\n          \" ];\n      }), \"\\n        \" ];\n    }), \"\\n      \"), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n","bodyAttrs":{}}