{"head":"","body":"","js":"\nTemplate.__checkName(\"dynamicTableExportModal\");\nTemplate[\"dynamicTableExportModal\"] = new Template(\"Template.dynamicTableExportModal\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"modal fade in\",\n    id: \"dynamicTableExportModal\",\n    role: \"dialog\",\n    \"aria-labelledby\": \"modal-tabularExportModal\",\n    \"aria-hidden\": \"false\",\n    style: \"display: none;\"\n  }, \"\\n    \", HTML.DIV({\n    class: \"modal-dialog modal-large-height\"\n  }, \"\\n      \", HTML.DIV({\n    class: \"modal-content\"\n  }, \"\\n        \", HTML.Raw('<div class=\"modal-header\">\\n          <h4 class=\"modal-title\" id=\"modal-dynamicTableExportModal\">\\n            Export\\n          </h4>\\n        </div>'), \"\\n        \", HTML.DIV({\n    class: \"modal-body\"\n  }, \"\\n          \", HTML.DIV({\n    class: \"container-fluid\",\n    style: \"height: 100%\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"col-md-4 col-sm-4\"\n  }, \"\\n              \", HTML.DIV({\n    class: \"row\"\n  }, \"\\n                \", HTML.Raw('<label for=\"dynamicTableExportModal-limit\">Records</label>'), \"\\n                \", HTML.SELECT({\n    id: \"dynamicTableExportModal-limit\",\n    class: \"limit\"\n  }, \"\\n                  \", HTML.Raw('<option value=\"\">All</option>'), \"\\n                  \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"selectedIds\"));\n  }, function() {\n    return [ \"\\n                    \", HTML.OPTION({\n      value: \"selected\",\n      selected: \"selected\"\n    }, \"Selected\"), \"\\n                  \" ];\n  }), \"\\n                  \", HTML.Raw('<option value=\"current\">Visible</option>'), \"\\n                \"), \"\\n              \"), \"\\n              \", HTML.DIV({\n    class: \"row\"\n  }, \"\\n                \", HTML.Raw('<label for=\"dynamicTableExportModal-sort\">Sort</label>'), \"\\n                \", HTML.SELECT({\n    id: \"dynamicTableExportModal-sort\",\n    class: \"sort\"\n  }, \"\\n                  \", HTML.Raw('<option value=\"current\">Current</option>'), \"\\n                  \", Blaze.Each(function() {\n    return {\n      _sequence: Spacebars.call(view.lookup(\"sortableFields\")),\n      _variable: \"field\"\n    };\n  }, function() {\n    return [ \"\\n                    \", HTML.OPTION({\n      value: function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"field\"), \"field\"));\n      }\n    }, Blaze.View(\"lookup:field.label\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"field\"), \"label\"));\n    })), \"\\n                  \" ];\n  }), \"\\n                \"), \"\\n              \"), \"\\n            \"), \"\\n            \", HTML.DIV({\n    class: \"col-md-8 col-sm-8\"\n  }, \"\\n              \", HTML.Raw('<label for=\"dynamicTableExportModalselected-fields\">Fields to Export</label>'), \"\\n              \", HTML.SELECT({\n    id: \"dynamicTableExportModalselected-fields\",\n    style: \"width: 100%\"\n  }, \"\\n                \", Blaze.Each(function() {\n    return {\n      _sequence: Spacebars.call(view.lookup(\"fields\")),\n      _variable: \"field\"\n    };\n  }, function() {\n    return [ \"\\n                  \", HTML.OPTION({\n      value: function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"field\"), \"field\"));\n      }\n    }, Blaze.View(\"lookup:field.label\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"field\"), \"label\"));\n    })), \"\\n                \" ];\n  }), \"\\n              \"), \"\\n            \"), \"\\n\\n            \", HTML.Raw('<!--<div class=\"col-md-4 col-sm-4\">\\n              {{#each field in fields}}\\n                {{#if isEven @index}}\\n                  <div class=\"row\">\\n                    <label for=\"dynamicTableExportModal-field-{{field.field}}\">{{field.label}}\\n                      <input type=\"checkbox\" data-target=\"{{field.field}}\" id=\"dynamicTableExportModal-field-{{field.field}}\" {{checked (enableField field)}} />\\n                    </label>\\n                  </div>\\n                {{/if}}\\n              {{/each}}\\n            </div>\\n            <div class=\"col-md-4 col-sm-4\">\\n              {{#each field in fields}}\\n                {{#unless isEven @index}}\\n                  <div class=\"row\">\\n                    <label for=\"dynamicTableExportModal-field-{{field.field}}\">{{field.label}}\\n                      <input type=\"checkbox\" data-target=\"{{field.field}}\" id=\"dynamicTableExportModal-field-{{field.field}}\" {{checked (enableField field)}} />\\n                    </label>\\n                  </div>\\n                {{/unless}}\\n              {{/each}}\\n            </div>-->'), \"\\n            \", Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(view.lookup(\"collection\")),\n      id: Spacebars.call(\"dynamicTableExportModalForm\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n              \", Blaze.Each(function() {\n        return {\n          _sequence: Spacebars.call(view.lookup(\"fields\")),\n          _variable: \"field\"\n        };\n      }, function() {\n        return [ \"\\n                \", Blaze.If(function() {\n          return Spacebars.call(Spacebars.dot(view.lookup(\"field\"), \"filters\"));\n        }, function() {\n          return [ \"\\n                  \", HTML.DIV({\n            class: \"row\"\n          }, \"\\n                    \", HTML.DIV({\n            class: \"col-md-12 col-sm-12\"\n          }, \"\\n                      \", HTML.H4(\"Filter \", Blaze.View(\"lookup:field.label\", function() {\n            return Spacebars.mustache(Spacebars.dot(view.lookup(\"field\"), \"label\"));\n          })), \"\\n                    \"), \"\\n                    \", Blaze.Each(function() {\n            return {\n              _sequence: Spacebars.call(Spacebars.dot(view.lookup(\"field\"), \"filters\")),\n              _variable: \"filter\"\n            };\n          }, function() {\n            return [ \"\\n                    \", HTML.DIV({\n              class: \"col-md-3 col-sm-3\"\n            }, \"\\n                      \", HTML.LABEL(Blaze.View(\"lookup:filter.label\", function() {\n              return Spacebars.mustache(Spacebars.dot(view.lookup(\"filter\"), \"label\"));\n            })), \"\\n                    \"), \"\\n                    \", HTML.DIV({\n              class: \"col-md-2 col-sm-2\"\n            }, \"\\n                      \", Blaze.If(function() {\n              return Spacebars.call(Spacebars.dot(view.lookup(\"filter\"), \"comparators\"));\n            }, function() {\n              return [ \"\\n                        \", HTML.SELECT({\n                style: \"width: 100%\",\n                class: \"comparator\",\n                \"data-target\": function() {\n                  return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"field\"), \"field\")), \"-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"filter\"), \"field\")) ];\n                },\n                id: function() {\n                  return [ \"dynamicTableExportModalForm-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"field\"), \"field\")), \"-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"filter\"), \"field\")), \"-comparator\" ];\n                }\n              }, \"\\n                          \", Blaze.Each(function() {\n                return {\n                  _sequence: Spacebars.call(Spacebars.dot(view.lookup(\"filter\"), \"comparators\")),\n                  _variable: \"option\"\n                };\n              }, function() {\n                return [ \"\\n                            \", HTML.OPTION({\n                  value: function() {\n                    return Spacebars.mustache(Spacebars.dot(view.lookup(\"option\"), \"operator\"));\n                  }\n                }, Blaze.View(\"lookup:option.label\", function() {\n                  return Spacebars.mustache(Spacebars.dot(view.lookup(\"option\"), \"label\"));\n                })), \"\\n                          \" ];\n              }), \"\\n                        \"), \"\\n                      \" ];\n            }, function() {\n              return [ \"\\n                        \", HTML.INPUT({\n                type: \"hidden\",\n                \"data-target\": function() {\n                  return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"field\"), \"field\")), \"-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"filter\"), \"field\")) ];\n                },\n                id: function() {\n                  return [ \"dynamicTableExportModalForm-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"field\"), \"field\")), \"-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"filter\"), \"field\")), \"-comparator\" ];\n                },\n                value: function() {\n                  return Spacebars.mustache(view.lookup(\"op\"), Spacebars.dot(view.lookup(\"filter\"), \"comparator\"), \"||\", \"\");\n                }\n              }), \"\\n                      \" ];\n            }), \"\\n                    \"), \"\\n                    \", HTML.DIV({\n              class: \"col-md-7 col-sm-7\"\n            }, \"\\n                      \", Blaze.If(function() {\n              return Spacebars.call(Spacebars.dot(view.lookup(\"filter\"), \"type\"));\n            }, function() {\n              return [ \"\\n                        \", Blaze._TemplateWith(function() {\n                return {\n                  required: Spacebars.call(false),\n                  type: Spacebars.call(Spacebars.dot(view.lookup(\"filter\"), \"type\")),\n                  options: Spacebars.call(Spacebars.dot(view.lookup(\"filter\"), \"options\")),\n                  name: Spacebars.call(Spacebars.dot(view.lookup(\"filter\"), \"field\")),\n                  id: Spacebars.call(Spacebars.dataMustache(view.lookup(\"concat\"), \"dynamicTableExportModalForm-\", Spacebars.dot(view.lookup(\"field\"), \"field\"), \"-\", Spacebars.dot(view.lookup(\"filter\"), \"field\"))),\n                  style: Spacebars.call(\"width: 100%\")\n                };\n              }, function() {\n                return Spacebars.include(view.lookupTemplate(\"afFieldInput\"));\n              }), \"\\n                      \" ];\n            }, function() {\n              return [ \"\\n                        \", Blaze._TemplateWith(function() {\n                return {\n                  required: Spacebars.call(false),\n                  name: Spacebars.call(Spacebars.dot(view.lookup(\"filter\"), \"field\")),\n                  id: Spacebars.call(Spacebars.dataMustache(view.lookup(\"concat\"), \"dynamicTableExportModalForm-\", Spacebars.dot(view.lookup(\"field\"), \"field\"), \"-\", Spacebars.dot(view.lookup(\"filter\"), \"field\"))),\n                  style: Spacebars.call(\"width: 100%\")\n                };\n              }, function() {\n                return Spacebars.include(view.lookupTemplate(\"afFieldInput\"));\n              }), \"\\n                      \" ];\n            }), \"\\n                    \"), \"\\n                    \" ];\n          }), \"\\n                  \"), \"\\n                \" ];\n        }), \"\\n              \" ];\n      }), \"\\n            \" ];\n    });\n  }), \"\\n          \"), \"\\n        \"), \"\\n        \", HTML.Raw('<div class=\"modal-footer\">\\n          <button type=\"submit\" class=\"btn btn-inverse\">Export</button>\\n          <button type=\"button\" class=\"btn btn-default\">Cancel</button>\\n        </div>'), \"\\n      \"), \"\\n    \"), \"\\n  \");\n}));\n","bodyAttrs":{}}