[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nBlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nmoment = Package['momentjs:moment'].moment;\nRestivus = Package['nimble:restivus'].Restivus;\nHTTP = Package.http.HTTP;\nHTTPInternals = Package.http.HTTPInternals;\nSyncedCron = Package['percolate:synced-cron'].SyncedCron;\nlodash = Package['erasaur:meteor-lodash'].lodash;\n_ = Package['erasaur:meteor-lodash']._;\nNpmModuleBcrypt = Package['npm-bcrypt'].NpmModuleBcrypt;\nEmail = Package.email.Email;\nEmailInternals = Package.email.EmailInternals;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"startup\":{\"rest\":{\"index.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// imports/startup/rest/index.js                                        //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n                                                                        //\nlet User;\nmodule.link(\"/imports/api/user/user.js\", {\n  User(v) {\n    User = v;\n  }\n\n}, 0);\nvar Api = new Restivus({\n  useDefaultAuth: false,\n  prettyJson: false,\n  enableCors: true\n});\nApi.addRoute('test', {\n  get: function (req, res) {\n    var name = this.bodyParams.name;\n    var name1 = User.findOne({\n      name: name\n    });\n    var userId = this.queryParams.userId;\n    return {\n      status: \"OK\",\n      name: this.queryParams.name\n    };\n  }\n});\n//////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"index.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// imports/startup/server/index.js                                      //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n                                                                        //\nmodule.link(\"/imports/api/user/user.js\");\nlet User;\nmodule.link(\"/imports/api/user/user.js\", {\n  User(v) {\n    User = v;\n  }\n\n}, 0);\nlet Email;\nmodule.link(\"meteor/email\", {\n  Email(v) {\n    Email = v;\n  }\n\n}, 1);\nMeteor.methods({\n  Login(name, password, country, phone, email) {\n    var user = User.findOne({\n      name: name,\n      password: password,\n      phone: phone,\n      email: email\n    });\n    if (user) return user._id;\n    return false;\n  }\n\n}); // // Define a rule that matches login attempts by non-admin users.\n// const loginRule = {\n//   userId(userId) {\n//     const user = Meteor.users.findOne(userId);\n//     return user && user.type !== 'admin';\n//   },\n//\n//   type: 'method',\n//   name: 'login'\n// };\n//\n// // Add the rule, allowing up to 5 messages every 1000 milliseconds.\n// DDPRateLimiter.addRule(loginRule, 5, 1000);\n//////////////////////////////////////////////////////////////////////////\n\n}}}},\"server\":{\"main.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// server/main.js                                                       //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n                                                                        //\nmodule.link(\"/imports/startup/server\");\nmodule.link(\"/imports/startup/rest\");\n//////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/server/main.js\");","hash":"3c1dfe9db391ab3d11893dd55f03370889affa82","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/startup/rest/index.js","imports/startup/server/index.js","server/main.js"],"names":["User","module","link","v","Api","Restivus","useDefaultAuth","prettyJson","enableCors","addRoute","get","req","res","name","bodyParams","name1","findOne","userId","queryParams","status","Email","Meteor","methods","Login","password","country","phone","email","user","_id"],"mappings":";;;;;;;;AAAA,IAAIA,IAAJ;AAASC,MAAM,CAACC,IAAP,CAAY,2BAAZ,EAAwC;AAACF,MAAI,CAACG,CAAD,EAAG;AAACH,QAAI,GAACG,CAAL;AAAO;;AAAhB,CAAxC,EAA0D,CAA1D;AAET,IAAIC,GAAG,GAAG,IAAIC,QAAJ,CAAa;AACrBC,gBAAc,EAAE,KADK;AAErBC,YAAU,EAAE,KAFS;AAGrBC,YAAU,EAAG;AAHQ,CAAb,CAAV;AAMAJ,GAAG,CAACK,QAAJ,CAAa,MAAb,EAAqB;AACnBC,KAAG,EAAG,UAASC,GAAT,EAAcC,GAAd,EAAkB;AACtB,QAAIC,IAAI,GAAG,KAAKC,UAAL,CAAgBD,IAA3B;AACA,QAAIE,KAAK,GAAGf,IAAI,CAACgB,OAAL,CAAa;AAACH,UAAI,EAACA;AAAN,KAAb,CAAZ;AACA,QAAII,MAAM,GAAG,KAAKC,WAAL,CAAiBD,MAA9B;AACA,WAAO;AAACE,YAAM,EAAG,IAAV;AAAgBN,UAAI,EAAE,KAAKK,WAAL,CAAiBL;AAAvC,KAAP;AACD;AANkB,CAArB,E;;;;;;;;;;;ACRAZ,MAAM,CAACC,IAAP,CAAY,2BAAZ;AAAyC,IAAIF,IAAJ;AAASC,MAAM,CAACC,IAAP,CAAY,2BAAZ,EAAwC;AAACF,MAAI,CAACG,CAAD,EAAG;AAACH,QAAI,GAACG,CAAL;AAAO;;AAAhB,CAAxC,EAA0D,CAA1D;AAA6D,IAAIiB,KAAJ;AAAUnB,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACkB,OAAK,CAACjB,CAAD,EAAG;AAACiB,SAAK,GAACjB,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAIzHkB,MAAM,CAACC,OAAP,CAAe;AACfC,OAAK,CAACV,IAAD,EAAMW,QAAN,EAAeC,OAAf,EAAuBC,KAAvB,EAA6BC,KAA7B,EAAmC;AACtC,QAAIC,IAAI,GAAG5B,IAAI,CAACgB,OAAL,CAAa;AACtBH,UAAI,EAAGA,IADe;AAEtBW,cAAQ,EAAGA,QAFW;AAGtBE,WAAK,EAAGA,KAHc;AAItBC,WAAK,EAAEA;AAJe,KAAb,CAAX;AAMA,QAAIC,IAAJ,EAAU,OAAOA,IAAI,CAACC,GAAZ;AACV,WAAO,KAAP;AACD;;AAVc,CAAf,E,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;;;;;;;;AC5BA5B,MAAM,CAACC,IAAP,CAAY,yBAAZ;AAAuCD,MAAM,CAACC,IAAP,CAAY,uBAAZ,E","file":"/app.js","sourcesContent":["import { User } from '/imports/api/user/user.js';\r\n\r\nvar Api = new Restivus({\r\n  useDefaultAuth: false,\r\n  prettyJson: false,\r\n  enableCors : true\r\n});\r\n\r\nApi.addRoute('test', {\r\n  get : function(req, res){\r\n    var name = this.bodyParams.name;\r\n    var name1 = User.findOne({name:name});\r\n    var userId = this.queryParams.userId;\r\n    return {status : \"OK\", name: this.queryParams.name};\r\n  }\r\n});\r\n","import '/imports/api/user/user.js';\r\nimport { User } from '/imports/api/user/user.js';\r\nimport { Email } from 'meteor/email';\r\n\r\nMeteor.methods({\r\nLogin(name,password,country,phone,email){\r\n  var user = User.findOne({\r\n    name : name,\r\n    password : password,\r\n    phone : phone,\r\n    email :email\r\n  });\r\n  if (user) return user._id;\r\n  return false;\r\n}\r\n});\r\n// // Define a rule that matches login attempts by non-admin users.\r\n// const loginRule = {\r\n//   userId(userId) {\r\n//     const user = Meteor.users.findOne(userId);\r\n//     return user && user.type !== 'admin';\r\n//   },\r\n//\r\n//   type: 'method',\r\n//   name: 'login'\r\n// };\r\n//\r\n// // Add the rule, allowing up to 5 messages every 1000 milliseconds.\r\n// DDPRateLimiter.addRule(loginRule, 5, 1000);\r\n","import \"/imports/startup/server\";\nimport \"/imports/startup/rest\";\n"]}}]