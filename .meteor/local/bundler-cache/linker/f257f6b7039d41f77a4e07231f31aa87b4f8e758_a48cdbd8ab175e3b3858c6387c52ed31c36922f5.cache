[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Symbol = Package['ecmascript-runtime-client'].Symbol;\nvar Map = Package['ecmascript-runtime-client'].Map;\nvar Set = Package['ecmascript-runtime-client'].Set;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"socialize:server-time\":{\"client\":{\"server-time.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// packages/socialize_server-time/client/server-time.js                                        //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\nmodule.export({\n  ServerTime: function () {\n    return ServerTime;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar ServerTime;\nmodule.link(\"../common/server-time\", {\n  ServerTime: function (v) {\n    ServerTime = v;\n  }\n}, 1);\n\nServerTime.init = function () {\n  ServerTime._diffStart = Date.now();\n  Meteor.call('socialize:getServerTime', function (error, serverTimeStamp) {\n    if (!error) {\n      var now = Date.now();\n      var latency = now - ServerTime._diffStart;\n      ServerTime._timeDifference = serverTimeStamp + latency - now;\n    } else {\n      throw error;\n    }\n  });\n}; // At startup, wait a couple seconds so that we can get a more accurate latency estimation.\n// This is far from optimal but should work.\n\n\nMeteor.startup(function () {\n  Meteor.setTimeout(function () {\n    ServerTime.init();\n  }, 2000);\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"common\":{\"server-time.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// packages/socialize_server-time/common/server-time.js                                        //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\nmodule.export({\n  ServerTime: function () {\n    return ServerTime;\n  }\n});\nvar ServerTime = {\n  _timeDifference: 0\n};\n\nServerTime.now = function () {\n  function now() {\n    return Date.now() + this._timeDifference;\n  }\n\n  return now;\n}();\n\nServerTime.date = function () {\n  function date() {\n    return new Date(this.now());\n  }\n\n  return date;\n}();\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/node_modules/meteor/socialize:server-time/client/server-time.js\");\n\n/* Exports */\nPackage._define(\"socialize:server-time\", exports);\n\n})();\n","servePath":"/packages/socialize_server-time.js","sourceMap":{"version":3,"sources":["packages/socialize:server-time/client/server-time.js","packages/socialize:server-time/common/server-time.js"],"names":["module","export","ServerTime","Meteor","link","v","init","_diffStart","Date","now","call","error","serverTimeStamp","latency","_timeDifference","startup","setTimeout","date"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,YAAU,EAAC;AAAA,WAAIA,UAAJ;AAAA;AAAZ,CAAd;AAA2C,IAAIC,MAAJ;AAAWH,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACD,QAAD,YAAQE,CAAR,EAAU;AAACF,UAAM,GAACE,CAAP;AAAS;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIH,UAAJ;AAAeF,MAAM,CAACI,IAAP,CAAY,uBAAZ,EAAoC;AAACF,YAAD,YAAYG,CAAZ,EAAc;AAACH,cAAU,GAACG,CAAX;AAAa;AAA5B,CAApC,EAAkE,CAAlE;;AAO1HH,UAAU,CAACI,IAAX,GAAkB,YAAM;AACpBJ,YAAU,CAACK,UAAX,GAAwBC,IAAI,CAACC,GAAL,EAAxB;AAEAN,QAAM,CAACO,IAAP,CAAY,yBAAZ,EAAuC,UAACC,KAAD,EAAQC,eAAR,EAA4B;AAC/D,QAAI,CAACD,KAAL,EAAY;AACR,UAAMF,GAAG,GAAGD,IAAI,CAACC,GAAL,EAAZ;AACA,UAAMI,OAAO,GAAGJ,GAAG,GAAGP,UAAU,CAACK,UAAjC;AAEAL,gBAAU,CAACY,eAAX,GAA8BF,eAAe,GAAGC,OAAnB,GAA8BJ,GAA3D;AACH,KALD,MAKO;AACH,YAAOE,KAAP;AACH;AACJ,GATD;AAUH,CAbD,C,CAeA;AACA;;;AACAR,MAAM,CAACY,OAAP,CAAe,YAAM;AACjBZ,QAAM,CAACa,UAAP,CAAkB,YAAM;AACpBd,cAAU,CAACI,IAAX;AACH,GAFD,EAEG,IAFH;AAGH,CAJD,E;;;;;;;;;;;ACxBAN,MAAM,CAACC,MAAP,CAAc;AAACC,YAAU,EAAC;AAAA,WAAIA,UAAJ;AAAA;AAAZ,CAAd;AAAO,IAAMA,UAAU,GAAG;AACtBY,iBAAe,EAAE;AADK,CAAnB;;AAIPZ,UAAU,CAACO,GAAX;AAAiB,WAASA,GAAT,GAAe;AAAE,WAAOD,IAAI,CAACC,GAAL,KAAa,KAAKK,eAAzB;AAA2C;;AAA7E,SAA0BL,GAA1B;AAAA;;AAEAP,UAAU,CAACe,IAAX;AAAkB,WAASA,IAAT,GAAgB;AAAE,WAAO,IAAIT,IAAJ,CAAS,KAAKC,GAAL,EAAT,CAAP;AAA8B;;AAAlE,SAA2BQ,IAA3B;AAAA,I","file":"/packages/socialize_server-time.js","sourcesContent":["/* eslint-disable import/no-unresolved */\nimport { Meteor } from 'meteor/meteor';\n\n/* eslint-enable import/no-unresolved */\n\nimport { ServerTime } from '../common/server-time';\n\nServerTime.init = () => {\n    ServerTime._diffStart = Date.now();\n\n    Meteor.call('socialize:getServerTime', (error, serverTimeStamp) => {\n        if (!error) {\n            const now = Date.now();\n            const latency = now - ServerTime._diffStart;\n\n            ServerTime._timeDifference = (serverTimeStamp + latency) - now;\n        } else {\n            throw (error);\n        }\n    });\n};\n\n// At startup, wait a couple seconds so that we can get a more accurate latency estimation.\n// This is far from optimal but should work.\nMeteor.startup(() => {\n    Meteor.setTimeout(() => {\n        ServerTime.init();\n    }, 2000);\n});\n\nexport { ServerTime };\n","export const ServerTime = {\n    _timeDifference: 0,\n};\n\nServerTime.now = function now() { return Date.now() + this._timeDifference; };\n\nServerTime.date = function date() { return new Date(this.now()); };\n"]}}]