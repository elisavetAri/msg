[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar AudioRecorder;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"maxencecornet:audio-recorder\":{\"lib\":{\"client\":{\"compatibility\":{\"recorder.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/maxencecornet_audio-recorder/lib/client/compatibility/recorder.js                   //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nvar WORKER_PATH = '/packages/maxencecornet_audio-recorder/assets/recorderWorker.js';\n\nvar Recorder = function (source, cfg) {\n  var config = cfg || {};\n  var bufferLen = config.bufferLen || 4096;\n  var numChannels = config.numChannels || 2;\n  this.context = source.context;\n  this.node = (this.context.createScriptProcessor || this.context.createJavaScriptNode).call(this.context, bufferLen, numChannels, numChannels);\n  var worker = new Worker(config.workerPath || WORKER_PATH);\n  worker.postMessage({\n    command: 'init',\n    config: {\n      sampleRate: this.context.sampleRate,\n      numChannels: numChannels\n    }\n  });\n  var recording = false,\n      currCallback;\n\n  this.node.onaudioprocess = function (e) {\n    if (!recording) return;\n    var buffer = [];\n\n    for (var channel = 0; channel < numChannels; channel++) {\n      buffer.push(e.inputBuffer.getChannelData(channel));\n    }\n\n    worker.postMessage({\n      command: 'record',\n      buffer: buffer\n    });\n  };\n\n  this.configure = function (cfg) {\n    for (var prop in cfg) {\n      if (cfg.hasOwnProperty(prop)) {\n        config[prop] = cfg[prop];\n      }\n    }\n  };\n\n  this.record = function () {\n    recording = true;\n  };\n\n  this.stop = function () {\n    recording = false;\n  };\n\n  this.clear = function () {\n    worker.postMessage({\n      command: 'clear'\n    });\n  };\n\n  this.getBuffer = function (cb) {\n    currCallback = cb || config.callback;\n    worker.postMessage({\n      command: 'getBuffer'\n    });\n  };\n\n  this.exportWAV = function (cb, type) {\n    currCallback = cb || config.callback;\n    type = type || config.type || 'audio/wav';\n    if (!currCallback) throw new Error('Callback not set');\n    worker.postMessage({\n      command: 'exportWAV',\n      type: type\n    });\n  };\n\n  worker.onmessage = function (e) {\n    var blob = e.data;\n    currCallback(blob);\n  };\n\n  source.connect(this.node);\n  this.node.connect(this.context.destination); //this should not be necessary\n};\n\nRecorder.forceDownload = function (blob, filename) {\n  var url = (window.URL || window.webkitURL).createObjectURL(blob);\n  var link = window.document.createElement('a');\n  link.href = url;\n  link.download = filename || 'output.wav';\n  var click = document.createEvent(\"Event\");\n  click.initEvent(\"click\", true, true);\n  link.dispatchEvent(click);\n};\n\nwindow.Recorder = Recorder;\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"audio-recorder.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/maxencecornet_audio-recorder/lib/client/audio-recorder.js                           //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\n/**\n * Created by maxencecornet on 06/10/15.\n */\nAudioRecorder = function () {\n  this.mediaStream = null;\n  this.rec = null;\n};\n\nAudioRecorder.prototype.startRecording = function () {\n  var audioContext = this._setCompatibility();\n\n  this._record(audioContext);\n};\n\nAudioRecorder.prototype.stopRecording = function (format, filename, callback) {\n  check(format, String);\n  check(filename, String);\n  check(callback, Match.Optional(Function));\n  var self = this; // stop the media stream -- mediaStream.stop() is deprecated since Chrome 45\n\n  if (typeof self.mediaStream.stop === 'function') {\n    self.mediaStream.stop();\n  } else {\n    self.mediaStream.getTracks()[0].stop();\n  } // stop Recorder.js\n\n\n  self.rec.stop(); // export it to WAV or Uint8Array\n\n  self.rec.exportWAV(function (e) {\n    self.clear();\n\n    if (format == 'wav') {\n      Recorder.forceDownload(e, \"\" + filename + \".wav\");\n    } else if (format == 'Uint8Array') {\n      self._convertToArrayBuffer(e, function (e) {\n        var newFile = new Uint8Array(e.target.result);\n        callback(null, newFile);\n      });\n    }\n  });\n};\n\nAudioRecorder.prototype.clear = function () {\n  this.rec.clear();\n  this.mediaStream = null;\n};\n/*\n Private methods :\n */\n\n\nAudioRecorder.prototype._setCompatibility = function () {\n  var navigator = window.navigator;\n  navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n  var Context = window.AudioContext || window.webkitAudioContext;\n  var context = new Context();\n  return context;\n};\n\nAudioRecorder.prototype._convertToArrayBuffer = function (file, callback) {\n  var fileReader = new FileReader();\n  fileReader.onloadend = callback;\n  fileReader.readAsArrayBuffer(file);\n};\n\nAudioRecorder.prototype._record = function (context) {\n  var self = this; // ask for permission and start recording\n\n  navigator.getUserMedia({\n    audio: true\n  }, function (localMediaStream) {\n    self.mediaStream = localMediaStream; // create a stream source to pass to Recorder.js\n\n    var mediaStreamSource = context.createMediaStreamSource(localMediaStream); // create new instance of Recorder.js using the mediaStreamSource\n\n    self.rec = new Recorder(mediaStreamSource);\n    self.rec.record();\n  }, function (err) {\n    console.log('Browser not supported : ' + err);\n  });\n};\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nrequire(\"/node_modules/meteor/maxencecornet:audio-recorder/lib/client/compatibility/recorder.js\");\nrequire(\"/node_modules/meteor/maxencecornet:audio-recorder/lib/client/audio-recorder.js\");\n\n/* Exports */\nPackage._define(\"maxencecornet:audio-recorder\", {\n  AudioRecorder: AudioRecorder\n});\n\n})();\n","servePath":"/packages/maxencecornet_audio-recorder.js","sourceMap":{"version":3,"sources":["packages/maxencecornet:audio-recorder/lib/client/compatibility/recorder.js","packages/maxencecornet:audio-recorder/lib/client/audio-recorder.js"],"names":["WORKER_PATH","Recorder","source","cfg","config","bufferLen","numChannels","context","node","createScriptProcessor","createJavaScriptNode","call","worker","Worker","workerPath","postMessage","command","sampleRate","recording","currCallback","onaudioprocess","e","buffer","channel","push","inputBuffer","getChannelData","configure","prop","hasOwnProperty","record","stop","clear","getBuffer","cb","callback","exportWAV","type","Error","onmessage","blob","data","connect","destination","forceDownload","filename","url","window","URL","webkitURL","createObjectURL","link","document","createElement","href","download","click","createEvent","initEvent","dispatchEvent","AudioRecorder","mediaStream","rec","prototype","startRecording","audioContext","_setCompatibility","_record","stopRecording","format","check","String","Match","Optional","Function","self","getTracks","_convertToArrayBuffer","newFile","Uint8Array","target","result","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Context","AudioContext","webkitAudioContext","file","fileReader","FileReader","onloadend","readAsArrayBuffer","audio","localMediaStream","mediaStreamSource","createMediaStreamSource","err","console","log"],"mappings":"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","file":"/packages/maxencecornet_audio-recorder.js","sourcesContent":["var WORKER_PATH = '/packages/maxencecornet_audio-recorder/assets/recorderWorker.js';\n\nvar Recorder = function (source, cfg) {\n    var config = cfg || {};\n    var bufferLen = config.bufferLen || 4096;\n    var numChannels = config.numChannels || 2;\n    this.context = source.context;\n    this.node = (this.context.createScriptProcessor ||\n    this.context.createJavaScriptNode).call(this.context,\n        bufferLen, numChannels, numChannels);\n    var worker = new Worker(config.workerPath || WORKER_PATH);\n    worker.postMessage({\n        command: 'init',\n        config: {\n            sampleRate: this.context.sampleRate,\n            numChannels: numChannels\n        }\n    });\n    var recording = false,\n        currCallback;\n\n    this.node.onaudioprocess = function (e) {\n        if (!recording) return;\n        var buffer = [];\n        for (var channel = 0; channel < numChannels; channel++) {\n            buffer.push(e.inputBuffer.getChannelData(channel));\n        }\n        worker.postMessage({\n            command: 'record',\n            buffer: buffer\n        });\n    };\n\n    this.configure = function (cfg) {\n        for (var prop in cfg) {\n            if (cfg.hasOwnProperty(prop)) {\n                config[prop] = cfg[prop];\n            }\n        }\n    };\n\n    this.record = function () {\n        recording = true;\n    };\n\n    this.stop = function () {\n        recording = false;\n    };\n\n    this.clear = function () {\n        worker.postMessage({command: 'clear'});\n    };\n\n    this.getBuffer = function (cb) {\n        currCallback = cb || config.callback;\n        worker.postMessage({command: 'getBuffer'})\n    };\n\n    this.exportWAV = function (cb, type) {\n        currCallback = cb || config.callback;\n        type = type || config.type || 'audio/wav';\n        if (!currCallback) throw new Error('Callback not set');\n        worker.postMessage({\n            command: 'exportWAV',\n            type: type\n        });\n    };\n\n    worker.onmessage = function (e) {\n        var blob = e.data;\n        currCallback(blob);\n    };\n\n    source.connect(this.node);\n    this.node.connect(this.context.destination);    //this should not be necessary\n};\n\nRecorder.forceDownload = function (blob, filename) {\n    var url = (window.URL || window.webkitURL).createObjectURL(blob);\n    var link = window.document.createElement('a');\n    link.href = url;\n    link.download = filename || 'output.wav';\n    var click = document.createEvent(\"Event\");\n    click.initEvent(\"click\", true, true);\n    link.dispatchEvent(click);\n};\n\nwindow.Recorder = Recorder;\n\n\n","/**\n * Created by maxencecornet on 06/10/15.\n */\n\nAudioRecorder = function () {\n    this.mediaStream = null;\n    this.rec = null;\n};\n\nAudioRecorder.prototype.startRecording = function () {\n    var audioContext = this._setCompatibility();\n    this._record(audioContext);\n};\n\nAudioRecorder.prototype.stopRecording = function (format, filename, callback) {\n    check(format, String);\n    check(filename, String);\n    check(callback, Match.Optional(Function));\n\n    var self = this;\n\n    // stop the media stream -- mediaStream.stop() is deprecated since Chrome 45\n    if (typeof(self.mediaStream.stop) === 'function') {\n        self.mediaStream.stop();\n    } else {\n        self.mediaStream.getTracks()[0].stop();\n    }\n\n    // stop Recorder.js\n    self.rec.stop();\n\n    // export it to WAV or Uint8Array\n    self.rec.exportWAV(function (e) {\n        self.clear();\n\n        if (format == 'wav') {\n            Recorder.forceDownload(e, \"\" + filename + \".wav\");\n        } else if (format == 'Uint8Array') {\n            self._convertToArrayBuffer(e, function (e) {\n                var newFile = new Uint8Array(e.target.result);\n                callback(null, newFile);\n\n            });\n        }\n    });\n};\n\nAudioRecorder.prototype.clear = function () {\n    this.rec.clear();\n    this.mediaStream = null;\n};\n\n/*\n Private methods :\n */\n\nAudioRecorder.prototype._setCompatibility = function () {\n    var navigator = window.navigator;\n    navigator.getUserMedia = (\n        navigator.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia ||\n        navigator.msGetUserMedia\n    );\n\n    var Context = window.AudioContext || window.webkitAudioContext;\n    var context = new Context();\n\n    return context;\n};\n\nAudioRecorder.prototype._convertToArrayBuffer = function (file, callback) {\n    var fileReader = new FileReader();\n    fileReader.onloadend = callback;\n    fileReader.readAsArrayBuffer(file);\n};\n\nAudioRecorder.prototype._record = function (context) {\n    var self = this;\n    // ask for permission and start recording\n    navigator.getUserMedia({audio: true}, function (localMediaStream) {\n        self.mediaStream = localMediaStream;\n\n        // create a stream source to pass to Recorder.js\n        var mediaStreamSource = context.createMediaStreamSource(localMediaStream);\n\n        // create new instance of Recorder.js using the mediaStreamSource\n        self.rec = new Recorder(mediaStreamSource);\n\n        self.rec.record();\n    }, function (err) {\n        console.log('Browser not supported : ' + err);\n    });\n};\n\n\n"]}}]