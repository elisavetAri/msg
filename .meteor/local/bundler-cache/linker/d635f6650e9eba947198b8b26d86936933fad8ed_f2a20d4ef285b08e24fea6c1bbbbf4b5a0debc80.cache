[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nBlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nmoment = Package['momentjs:moment'].moment;\nRestivus = Package['nimble:restivus'].Restivus;\nHTTP = Package.http.HTTP;\nHTTPInternals = Package.http.HTTPInternals;\nSyncedCron = Package['percolate:synced-cron'].SyncedCron;\nlodash = Package['erasaur:meteor-lodash'].lodash;\n_ = Package['erasaur:meteor-lodash']._;\nNpmModuleBcrypt = Package['npm-bcrypt'].NpmModuleBcrypt;\nEmail = Package.email.Email;\nEmailInternals = Package.email.EmailInternals;\nTemplate = Package['meteorhacks:ssr'].Template;\nSSR = Package['meteorhacks:ssr'].SSR;\nTwilio = Package['abhiaiyer:meteor-twilio'].Twilio;\nemojione = Package['emojione:emojione'].emojione;\nMeteorEmoji = Package['georgemccann:meteor-emoji-picker'].MeteorEmoji;\nTabular = Package['aldeed:tabular'].Tabular;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"user\":{\"user.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                        //\n// imports/api/user/user.js                                                               //\n//                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                          //\nmodule.export({\n  User: () => User\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nconst User = new Mongo.Collection('user');\n\nif (Meteor.isServer) {\n  Meteor.publish('users', function () {\n    return User.find();\n  });\n}\n\nMeteor.methods({\n  \"user.insert\"(name, password, phone, email) {\n    const uid = User.insert({\n      name: name,\n      password: password,\n      phone: phone,\n      email: email,\n      created_at: moment().valueOf()\n    });\n    return uid;\n  },\n\n  \"user.remove\"(userId) {\n    return User.remove(userId);\n  },\n\n  \"user.update\"(userId, update) {\n    return User.update(userId, {\n      $set: update\n    });\n  },\n\n  \"user.changePassword\"(userId, oldPassword, newPassword) {\n    var user = User.findOne({\n      _id: userId,\n      password: oldPassword\n    });\n\n    if (user) {\n      return User.update(userId, {\n        $set: {\n          password: newPassword\n        }\n      });\n    }\n  }\n\n});\n////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"startup\":{\"email\":{\"index.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                        //\n// imports/startup/email/index.js                                                         //\n//                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                          //\nprocess.env.MAIL_URL = 'smtps://elisavetar638@gmail.com:ELISAVET1311@smtp.gmail.com:465';\nMeteor.methods({\n  \"email.send\"(to, subject, text) {\n    Email.send({\n      from: \"from@mailinator.com\",\n      to: to,\n      subject: subject,\n      text: text\n    });\n  }\n\n});\n////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"files\":{\"index.js\":function(require){\n\n////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                        //\n// imports/startup/files/index.js                                                         //\n//                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                          //\nconst fs = Npm.require('fs');\n\nconst path = Npm.require('path');\n\nconst URL = Npm.require('url');\n\nconst http = Npm.require('http');\n\nconst formidable = Npm.require('formidable');\n\nvar basePath = path.resolve('.').split('.meteor')[0];\nvar defaultPath = path.resolve(basePath, '../files');\nhttp.createServer(function (req, res) {\n  var url = URL.parse(req.url, true);\n  var query = url.query;\n\n  if (url.pathname == \"/\") {\n    var file = Object.keys(query)[0];\n\n    if (file.indexOf('.') > 0) {\n      // res.writeHead(200,{'content-type':'image/png'});\n      res.setHeader('Content-disposition', 'attachment; filename=' + file);\n      return fs.createReadStream(path.resolve(defaultPath, \"img\", file)).pipe(res);\n    }\n  }\n\n  if (url.pathname.indexOf(\"upload\") > -1) {\n    var form = new formidable.IncomingForm({\n      maxFieldsSize: 2042220174,\n      maxFileSize: 2042220174\n    });\n    form.parse(req, function (err, fields, files) {\n      if (!files.file) return res.end(JSON.stringify({\n        status: \"err\"\n      }));\n      var oldpath = files.file.path;\n      var newpath = path.resolve(defaultPath, \"img\", files.file.name);\n      fs.rename(oldpath, newpath, function (err) {\n        if (err) return res.end(JSON.stringify({\n          status: \"err\",\n          msg: \"Unexpected error\"\n        }));\n        res.end(JSON.stringify({\n          status: \"ok\"\n        }));\n      });\n    });\n  }\n\n  res.writeHead(200, {\n    'content-type': 'text/json'\n  });\n  res.end(JSON.stringify(url));\n}).listen(3333);\nconsole.log(\"File Server running at http://localhost:3333/\");\n////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"rest\":{\"index.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                        //\n// imports/startup/rest/index.js                                                          //\n//                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                          //\nlet User;\nmodule.link(\"/imports/api/user/user.js\", {\n  User(v) {\n    User = v;\n  }\n\n}, 0);\nvar Api = new Restivus({\n  useDefaultAuth: false,\n  prettyJson: false,\n  enableCors: true\n});\nApi.addRoute('test', {\n  get: function (req, res) {\n    var name = this.bodyParams.name;\n    var name1 = User.findOne({\n      name: name\n    });\n    var userId = this.queryParams.userId;\n    return {\n      status: \"OK\",\n      name: this.queryParams.name\n    };\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"index.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                        //\n// imports/startup/server/index.js                                                        //\n//                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                          //\nmodule.link(\"/imports/api/user/user.js\");\nlet User;\nmodule.link(\"/imports/api/user/user.js\", {\n  User(v) {\n    User = v;\n  }\n\n}, 0);\nlet Message;\nmodule.link(\"/imports/api/messages/messages.js\", {\n  Message(v) {\n    Message = v;\n  }\n\n}, 1);\nMeteor.methods({\n  Login(name, password, country, phone, email) {\n    var user = User.findOne({\n      name: name,\n      password: password,\n      phone: phone,\n      email: email\n    });\n    if (user) return user._id;\n    return false;\n  }\n\n});\n////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},\"server\":{\"main.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                        //\n// server/main.js                                                                         //\n//                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                          //\nmodule.link(\"/imports/startup/server\");\nmodule.link(\"/imports/startup/rest\");\nmodule.link(\"/imports/startup/email\");\nmodule.link(\"/imports/startup/files\");\n////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/server/main.js\");","hash":"896166e867a5edb601f157471729c51bef307950","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/user/user.js","imports/startup/email/index.js","imports/startup/files/index.js","imports/startup/rest/index.js","imports/startup/server/index.js","server/main.js"],"names":["module","export","User","Meteor","link","v","Mongo","Collection","isServer","publish","find","methods","name","password","phone","email","uid","insert","created_at","moment","valueOf","userId","remove","update","$set","oldPassword","newPassword","user","findOne","_id","process","env","MAIL_URL","to","subject","text","Email","send","from","fs","Npm","require","path","URL","http","formidable","basePath","resolve","split","defaultPath","createServer","req","res","url","parse","query","pathname","file","Object","keys","indexOf","setHeader","createReadStream","pipe","form","IncomingForm","maxFieldsSize","maxFileSize","err","fields","files","end","JSON","stringify","status","oldpath","newpath","rename","msg","writeHead","listen","console","log","Api","Restivus","useDefaultAuth","prettyJson","enableCors","addRoute","get","bodyParams","name1","queryParams","Message","Login","country"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\r\nimport { Mongo } from 'meteor/mongo';\r\nexport const User = new Mongo.Collection('user');\r\nif (Meteor.isServer){\r\n  Meteor.publish('users',function(){\r\n    return User.find();\r\n  })\r\n}\r\n\r\nMeteor.methods({\r\n  \"user.insert\"(name,password,phone,email){\r\n    const uid = User.insert({\r\n      name:name,\r\n      password:password,\r\n      phone : phone,\r\n      email : email,\r\n      created_at:moment().valueOf()\r\n    });\r\n    return uid;\r\n  },\r\n  \"user.remove\"(userId){\r\n    return User.remove(userId);\r\n  },\r\n  \"user.update\"(userId,update){\r\n    return User.update(userId,{$set:update});\r\n  },\r\n  \"user.changePassword\"(userId,oldPassword,newPassword){\r\n    var user = User.findOne({\r\n      _id : userId,\r\n      password : oldPassword\r\n    });\r\n    if (user) {\r\n      return User.update(userId,{$set:{\r\n        password:newPassword\r\n      }});\r\n    }\r\n  }\r\n});\r\n","process.env.MAIL_URL = 'smtps://elisavetar638@gmail.com:ELISAVET1311@smtp.gmail.com:465';\r\n\r\nMeteor.methods({\r\n  \"email.send\"(to,subject, text){\r\n    Email.send({\r\n    from: \"from@mailinator.com\",\r\n    to: to,\r\n    subject: subject,\r\n    text: text\r\n    });\r\n  }\r\n});\r\n","const fs = Npm.require('fs');\r\nconst path = Npm.require('path');\r\nconst URL = Npm.require('url');\r\nconst http = Npm.require('http');\r\nconst formidable = Npm.require('formidable');\r\n\r\nvar basePath = path.resolve('.').split('.meteor')[0];\r\nvar defaultPath = path.resolve(basePath, '../files');\r\n\r\nhttp.createServer(function (req, res) {\r\n  var url = URL.parse(req.url, true);\r\n  var query = url.query;\r\n  if(url.pathname == \"/\"){\r\n    var file = Object.keys(query)[0];\r\n    if(file.indexOf('.') > 0){\r\n      // res.writeHead(200,{'content-type':'image/png'});\r\n      res.setHeader('Content-disposition', 'attachment; filename='+file);\r\n      return fs.createReadStream(path.resolve(defaultPath, \"img\", file)).pipe(res);\r\n    }\r\n  }\r\n  if(url.pathname.indexOf(\"upload\")>-1){\r\n    var form = new formidable.IncomingForm({maxFieldsSize:2042220174, maxFileSize:2042220174});\r\n    form.parse(req, function (err, fields, files) {\r\n      if (!files.file)return res.end(JSON.stringify({status : \"err\"}));\r\n      var oldpath = files.file.path;\r\n      var newpath = path.resolve(defaultPath, \"img\", files.file.name);\r\n      fs.rename(oldpath, newpath, function (err) {\r\n        if (err) return res.end(JSON.stringify({status : \"err\", msg : \"Unexpected error\"}));\r\n        res.end(JSON.stringify({status : \"ok\"}));\r\n      });\r\n    });\r\n  }\r\n  res.writeHead(200,{'content-type':'text/json'});\r\n  res.end(JSON.stringify(url));\r\n}).listen(3333);\r\nconsole.log(\"File Server running at http://localhost:3333/\");\r\n","import { User } from '/imports/api/user/user.js';\r\n\r\nvar Api = new Restivus({\r\n  useDefaultAuth: false,\r\n  prettyJson: false,\r\n  enableCors : true\r\n});\r\n\r\nApi.addRoute('test', {\r\n  get : function(req, res){\r\n    var name = this.bodyParams.name;\r\n    var name1 = User.findOne({name:name});\r\n    var userId = this.queryParams.userId;\r\n    return {status : \"OK\", name: this.queryParams.name};\r\n  }\r\n});\r\n","import '/imports/api/user/user.js';\r\nimport { User } from '/imports/api/user/user.js';\r\nimport { Message } from '/imports/api/messages/messages.js';\r\n\r\nMeteor.methods({\r\nLogin(name,password,country,phone,email){\r\n  var user = User.findOne({\r\n    name : name,\r\n    password : password,\r\n    phone : phone,\r\n    email :email\r\n  });\r\n  if (user) return user._id;\r\n  return false;\r\n}\r\n});\r\n","import \"/imports/startup/server\";\nimport \"/imports/startup/rest\";\nimport \"/imports/startup/email\";\nimport \"/imports/startup/files\";\n"]}}]