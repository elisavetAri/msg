[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nBlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nmoment = Package['momentjs:moment'].moment;\nRestivus = Package['nimble:restivus'].Restivus;\nHTTP = Package.http.HTTP;\nHTTPInternals = Package.http.HTTPInternals;\nSyncedCron = Package['percolate:synced-cron'].SyncedCron;\nlodash = Package['erasaur:meteor-lodash'].lodash;\n_ = Package['erasaur:meteor-lodash']._;\nNpmModuleBcrypt = Package['npm-bcrypt'].NpmModuleBcrypt;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"user\":{\"user.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/api/user/user.js                                          //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.export({\n  User: () => User\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nconst User = new Mongo.Collection('user');\n\nif (Meteor.isServer) {\n  Meteor.publish('users', function () {\n    return User.find();\n  });\n}\n\nMeteor.methods({\n  \"user.insert\"(name, password, phone) {\n    const uid = User.insert({\n      name: name,\n      password: password,\n      phone: phone,\n      created_at: moment().valueOf()\n    });\n    return uid;\n  },\n\n  \"user.remove\"(userId) {\n    return User.remove(userId);\n  },\n\n  \"user.update\"(userId, update) {\n    return User.update(userId, {\n      $set: update\n    });\n  },\n\n  \"user.changePassword\"(userId, oldPassword, newPassword) {\n    var user = User.findOne({\n      _id: userId,\n      password: oldPassword\n    });\n\n    if (user) {\n      return User.update(userId, {\n        $set: {\n          password: newPassword\n        }\n      });\n    }\n  }\n\n});\n///////////////////////////////////////////////////////////////////////\n\n}}},\"startup\":{\"server\":{\"index.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/startup/server/index.js                                   //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.link(\"/imports/api/user/user.js\");\nlet User;\nmodule.link(\"/imports/api/user/user.js\", {\n  User(v) {\n    User = v;\n  }\n\n}, 0);\nMeteor.methods({\n  Login(name, password, country, phone) {\n    var user = User.findOne({\n      name: name,\n      password: password,\n      phone: phone\n    });\n    if (user) return user._id;\n    return false;\n  }\n\n});\n///////////////////////////////////////////////////////////////////////\n\n}}}},\"server\":{\"main.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/main.js                                                    //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.link(\"/imports/startup/server\");\nmodule.link(\"/imports/startup/rest\");\n///////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/server/main.js\");","hash":"821c25faa9ab0b374bc8332ea9c3272e249d484b","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/user/user.js","imports/startup/server/index.js","server/main.js"],"names":["module","export","User","Meteor","link","v","Mongo","Collection","isServer","publish","find","methods","name","password","phone","uid","insert","created_at","moment","valueOf","userId","remove","update","$set","oldPassword","newPassword","user","findOne","_id","Login","country"],"mappings":";;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,MAAI,EAAC,MAAIA;AAAV,CAAd;AAA+B,IAAIC,MAAJ;AAAWH,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACD,QAAM,CAACE,CAAD,EAAG;AAACF,UAAM,GAACE,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,KAAJ;AAAUN,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA2B;AAACE,OAAK,CAACD,CAAD,EAAG;AAACC,SAAK,GAACD,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAElG,MAAMH,IAAI,GAAG,IAAII,KAAK,CAACC,UAAV,CAAqB,MAArB,CAAb;;AACP,IAAIJ,MAAM,CAACK,QAAX,EAAoB;AAClBL,QAAM,CAACM,OAAP,CAAe,OAAf,EAAuB,YAAU;AAC/B,WAAOP,IAAI,CAACQ,IAAL,EAAP;AACD,GAFD;AAGD;;AAEDP,MAAM,CAACQ,OAAP,CAAe;AACb,gBAAcC,IAAd,EAAmBC,QAAnB,EAA4BC,KAA5B,EAAkC;AAChC,UAAMC,GAAG,GAAGb,IAAI,CAACc,MAAL,CAAY;AACtBJ,UAAI,EAACA,IADiB;AAEtBC,cAAQ,EAACA,QAFa;AAGtBC,WAAK,EAAGA,KAHc;AAItBG,gBAAU,EAACC,MAAM,GAAGC,OAAT;AAJW,KAAZ,CAAZ;AAMA,WAAOJ,GAAP;AACD,GATY;;AAUb,gBAAcK,MAAd,EAAqB;AACnB,WAAOlB,IAAI,CAACmB,MAAL,CAAYD,MAAZ,CAAP;AACD,GAZY;;AAab,gBAAcA,MAAd,EAAqBE,MAArB,EAA4B;AAC1B,WAAOpB,IAAI,CAACoB,MAAL,CAAYF,MAAZ,EAAmB;AAACG,UAAI,EAACD;AAAN,KAAnB,CAAP;AACD,GAfY;;AAgBb,wBAAsBF,MAAtB,EAA6BI,WAA7B,EAAyCC,WAAzC,EAAqD;AACnD,QAAIC,IAAI,GAAGxB,IAAI,CAACyB,OAAL,CAAa;AACtBC,SAAG,EAAGR,MADgB;AAEtBP,cAAQ,EAAGW;AAFW,KAAb,CAAX;;AAIA,QAAIE,IAAJ,EAAU;AACR,aAAOxB,IAAI,CAACoB,MAAL,CAAYF,MAAZ,EAAmB;AAACG,YAAI,EAAC;AAC9BV,kBAAQ,EAACY;AADqB;AAAN,OAAnB,CAAP;AAGD;AACF;;AA1BY,CAAf,E;;;;;;;;;;;ACTAzB,MAAM,CAACI,IAAP,CAAY,2BAAZ;AAAyC,IAAIF,IAAJ;AAASF,MAAM,CAACI,IAAP,CAAY,2BAAZ,EAAwC;AAACF,MAAI,CAACG,CAAD,EAAG;AAACH,QAAI,GAACG,CAAL;AAAO;;AAAhB,CAAxC,EAA0D,CAA1D;AAGlDF,MAAM,CAACQ,OAAP,CAAe;AACfkB,OAAK,CAACjB,IAAD,EAAMC,QAAN,EAAeiB,OAAf,EAAuBhB,KAAvB,EAA6B;AAChC,QAAIY,IAAI,GAAGxB,IAAI,CAACyB,OAAL,CAAa;AACtBf,UAAI,EAAGA,IADe;AAEtBC,cAAQ,EAAGA,QAFW;AAGtBC,WAAK,EAAGA;AAHc,KAAb,CAAX;AAKA,QAAIY,IAAJ,EAAU,OAAOA,IAAI,CAACE,GAAZ;AACV,WAAO,KAAP;AACD;;AATc,CAAf,E;;;;;;;;;;;ACHA5B,MAAM,CAACI,IAAP,CAAY,yBAAZ;AAAuCJ,MAAM,CAACI,IAAP,CAAY,uBAAZ,E","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\r\nimport { Mongo } from 'meteor/mongo';\r\nexport const User = new Mongo.Collection('user');\r\nif (Meteor.isServer){\r\n  Meteor.publish('users',function(){\r\n    return User.find();\r\n  })\r\n}\r\n\r\nMeteor.methods({\r\n  \"user.insert\"(name,password,phone){\r\n    const uid = User.insert({\r\n      name:name,\r\n      password:password,\r\n      phone : phone,\r\n      created_at:moment().valueOf()\r\n    });\r\n    return uid;\r\n  },\r\n  \"user.remove\"(userId){\r\n    return User.remove(userId);\r\n  },\r\n  \"user.update\"(userId,update){\r\n    return User.update(userId,{$set:update});\r\n  },\r\n  \"user.changePassword\"(userId,oldPassword,newPassword){\r\n    var user = User.findOne({\r\n      _id : userId,\r\n      password : oldPassword\r\n    });\r\n    if (user) {\r\n      return User.update(userId,{$set:{\r\n        password:newPassword\r\n      }});\r\n    }\r\n  }\r\n});\r\n","import '/imports/api/user/user.js';\r\nimport { User } from '/imports/api/user/user.js';\r\n\r\nMeteor.methods({\r\nLogin(name,password,country,phone){\r\n  var user = User.findOne({\r\n    name : name,\r\n    password : password,\r\n    phone : phone\r\n  });\r\n  if (user) return user._id;\r\n  return false;\r\n}\r\n});\r\n","import \"/imports/startup/server\";\nimport \"/imports/startup/rest\";\n"]}}]