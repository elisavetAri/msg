[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Template = Package['templating-runtime'].Template;\nvar Session = Package.session.Session;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar ReactiveVar = Package['reactive-var'].ReactiveVar;\nvar HTML = Package.htmljs.HTML;\nvar Spacebars = Package.spacebars.Spacebars;\n\n/* Package-scope variables */\nvar MeteorCamera, desiredHeight;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// packages/mikkelking_camera/packages/mikkelking_camera.js          //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/mikkelking:camera/template.photo.js                                                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n                                                                                                                     // 1\nTemplate.__checkName(\"camera\");                                                                                      // 2\nTemplate[\"camera\"] = new Template(\"Template.camera\", (function() {                                                   // 3\n  var view = this;                                                                                                   // 4\n  return [ HTML.Raw('<div class=\"camera-overlay\">\\n    \\n  </div>\\n\\n  '), HTML.DIV({                                // 5\n    \"class\": function() {                                                                                            // 6\n      return [ \"camera-popup \", Blaze.If(function() {                                                                // 7\n        return Spacebars.call(view.lookup(\"permissionDeniedError\"));                                                 // 8\n      }, function() {                                                                                                // 9\n        return \"camera-popup-wide\";                                                                                  // 10\n      }) ];                                                                                                          // 11\n    }                                                                                                                // 12\n  }, \"\\n    \", Blaze.If(function() {                                                                                 // 13\n    return Spacebars.call(view.lookup(\"error\"));                                                                     // 14\n  }, function() {                                                                                                    // 15\n    return [ \"\\n      \", Blaze.If(function() {                                                                       // 16\n      return Spacebars.call(view.lookup(\"permissionDeniedError\"));                                                   // 17\n    }, function() {                                                                                                  // 18\n      return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"permissionDenied\")), \"\\n      \" ];               // 19\n    }, function() {                                                                                                  // 20\n      return [ \"\\n        \", Blaze.If(function() {                                                                   // 21\n        return Spacebars.call(view.lookup(\"browserNotSupportedError\"));                                              // 22\n      }, function() {                                                                                                // 23\n        return [ \"\\n          \", Blaze._TemplateWith(function() {                                                    // 24\n          return {                                                                                                   // 25\n            message: Spacebars.call(\"Sorry, this browser is currently not supported for camera functionality.\")      // 26\n          };                                                                                                         // 27\n        }, function() {                                                                                              // 28\n          return Spacebars.include(view.lookupTemplate(\"genericError\"));                                             // 29\n        }), \"\\n        \" ];                                                                                          // 30\n      }, function() {                                                                                                // 31\n        return [ \"\\n          \", Blaze._TemplateWith(function() {                                                    // 32\n          return {                                                                                                   // 33\n            message: Spacebars.call(\"There was an error accessing the camera.\")                                      // 34\n          };                                                                                                         // 35\n        }, function() {                                                                                              // 36\n          return Spacebars.include(view.lookupTemplate(\"genericError\"));                                             // 37\n        }), \"\\n        \" ];                                                                                          // 38\n      }), \"\\n      \" ];                                                                                              // 39\n    }), \"\\n    \" ];                                                                                                  // 40\n  }, function() {                                                                                                    // 41\n    return [ \"\\n      \", Blaze.If(function() {                                                                       // 42\n      return Spacebars.call(view.lookup(\"photo\"));                                                                   // 43\n    }, function() {                                                                                                  // 44\n      return [ \"\\n        \", HTML.DIV({                                                                              // 45\n        \"class\": \"center\"                                                                                            // 46\n      }, \"\\n        \", HTML.Comment(\" Buttons above the image works better on small screens \"), \"\\n          \", HTML.DIV(\"\\n            \", HTML.BUTTON({\n        \"class\": \"btn use-photo btn-success\"                                                                         // 48\n      }, \"Use Photo\"), \" \\n            \", HTML.BUTTON({                                                              // 49\n        \"class\": \"button new-photo\"                                                                                  // 50\n      }, \"Take New Photo\"), \"\\n          \"), \"\\n          \", HTML.IMG({                                              // 51\n        src: function() {                                                                                            // 52\n          return Spacebars.mustache(view.lookup(\"photo\"));                                                           // 53\n        },                                                                                                           // 54\n        \"class\": \"photo-preview\"                                                                                     // 55\n      }), \"\\n        \"), \"\\n      \" ];                                                                               // 56\n    }, function() {                                                                                                  // 57\n      return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"viewfinder\")), \"\\n      \" ];                     // 58\n    }), \"\\n    \" ];                                                                                                  // 59\n  }), \"\\n  \") ];                                                                                                     // 60\n}));                                                                                                                 // 61\n                                                                                                                     // 62\nTemplate.__checkName(\"viewfinder\");                                                                                  // 63\nTemplate[\"viewfinder\"] = new Template(\"Template.viewfinder\", (function() {                                           // 64\n  var view = this;                                                                                                   // 65\n  return [ HTML.DIV({                                                                                                // 66\n    \"class\": \"viewfinder\"                                                                                            // 67\n  }, \"\\n    \\n    \", HTML.DIV(\"\\n      \", Blaze.If(function() {                                                      // 68\n    return Spacebars.call(view.lookup(\"waitingForPermission\"));                                                      // 69\n  }, function() {                                                                                                    // 70\n    return [ \"\\n        \", HTML.P(\"Waiting for camera permissions...\"), \"\\n      \" ];                                // 71\n  }, function() {                                                                                                    // 72\n    return [ \"\\n        \", HTML.Comment(\" Buttons above the image works better on small screens \"), \"\\n        \", HTML.BUTTON({\n      \"class\": \"button shutter\"                                                                                      // 74\n    }, \"Take Photo\"), \"\\n      \" ];                                                                                  // 75\n  }), \"\\n      \", HTML.Raw('<button class=\"button cancel\">Cancel</button>'), \"\\n    \"), \"\\n    \", HTML.VIDEO({       // 76\n    id: \"video\",                                                                                                     // 77\n    \"class\": function() {                                                                                            // 78\n      return Blaze.If(function() {                                                                                   // 79\n        return Spacebars.call(view.lookup(\"waitingForPermission\"));                                                  // 80\n      }, function() {                                                                                                // 81\n        return \"hidden\";                                                                                             // 82\n      });                                                                                                            // 83\n    }                                                                                                                // 84\n  }, \"\\n      \"), \"\\n  \"), HTML.Raw('\\n\\n  <canvas id=\"canvas\" style=\"visibility: hidden\"></canvas>') ];             // 85\n}));                                                                                                                 // 86\n                                                                                                                     // 87\nTemplate.__checkName(\"genericError\");                                                                                // 88\nTemplate[\"genericError\"] = new Template(\"Template.genericError\", (function() {                                       // 89\n  var view = this;                                                                                                   // 90\n  return HTML.DIV({                                                                                                  // 91\n    \"class\": \"generic-error\"                                                                                         // 92\n  }, \"\\n    \", HTML.P(Blaze.View(\"lookup:message\", function() {                                                      // 93\n    return Spacebars.mustache(view.lookup(\"message\"));                                                               // 94\n  })), HTML.Raw('\\n    <button class=\"button cancel\">Close Popup</button>\\n  '));                                    // 95\n}));                                                                                                                 // 96\n                                                                                                                     // 97\nTemplate.__checkName(\"permissionDenied\");                                                                            // 98\nTemplate[\"permissionDenied\"] = new Template(\"Template.permissionDenied\", (function() {                               // 99\n  var view = this;                                                                                                   // 100\n  return HTML.Raw('<div class=\"permission-denied-error\">\\n    <h2>Camera Permissions Denied</h2>\\n\\n    <p>\\n      You have denied this app permission to use your camera.\\n      If you would like to allow permissions, follow the directions for your\\n      browser below.\\n    </p>\\n\\n    <dl class=\"permissions-howto\">\\n      <dt>Google Chrome</dt>\\n        <dd>Go to Settings > \"Show advanced settings...\" >\\n          \"Content settings...\" > Media heading > \"Manage exceptions...\",\\n          then find this website in the list and allow video capture.</dd>\\n      <dt>Mozilla Firefox</dt>\\n        <dd>Reload the page and try again.</dd>\\n      <dt>Opera</dt>\\n        <dd>Go to Preferences > Websites > Media heading >\\n          \"Manage exceptions...\", then find this website in the list and\\n          allow video capture.</dd>\\n    </dl>\\n\\n    <button class=\"button cancel\">Close Popup</button>\\n  </div>');\n}));                                                                                                                 // 102\n                                                                                                                     // 103\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/mikkelking:camera/photo.js                                                                               //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nMeteorCamera = {};                                                                                                   // 1\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/mikkelking:camera/photo-browser.js                                                                       //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nvar stream;                                                                                                          // 1\nvar closeAndCallback;                                                                                                // 2\n                                                                                                                     // 3\nvar photo = new ReactiveVar(null);                                                                                   // 4\nvar error = new ReactiveVar(null);                                                                                   // 5\nvar waitingForPermission = new ReactiveVar(null);                                                                    // 6\n                                                                                                                     // 7\nvar canvasWidth = 0;                                                                                                 // 8\nvar canvasHeight = 0;                                                                                                // 9\nvar magnification = 4;    // Magnification factor - more effective than image quality                                // 10\n                                                                                                                     // 11\nvar quality = 80;                                                                                                    // 12\n                                                                                                                     // 13\nTemplate.viewfinder.rendered = function() {                                                                          // 14\n  var template = this;                                                                                               // 15\n                                                                                                                     // 16\n  waitingForPermission.set(true);                                                                                    // 17\n                                                                                                                     // 18\n  var video = template.find(\"video\");                                                                                // 19\n                                                                                                                     // 20\n  // stream webcam video to the <video> element                                                                      // 21\n  var success = function(newStream) {                                                                                // 22\n    stream = newStream;                                                                                              // 23\n                                                                                                                     // 24\n    if (navigator.mozGetUserMedia) {                                                                                 // 25\n      video.mozSrcObject = stream;                                                                                   // 26\n    } else {                                                                                                         // 27\n      var vendorURL = window.URL || window.webkitURL;                                                                // 28\n      video.src = vendorURL.createObjectURL(stream);                                                                 // 29\n    }                                                                                                                // 30\n    video.play();                                                                                                    // 31\n                                                                                                                     // 32\n    waitingForPermission.set(false);                                                                                 // 33\n  };                                                                                                                 // 34\n                                                                                                                     // 35\n  // user declined or there was some other error                                                                     // 36\n  var failure = function(err) {                                                                                      // 37\n    error.set(err);                                                                                                  // 38\n  };                                                                                                                 // 39\n                                                                                                                     // 40\n  // tons of different browser prefixes                                                                              // 41\n  navigator.getUserMedia = (                                                                                         // 42\n    navigator.getUserMedia ||                                                                                        // 43\n    navigator.webkitGetUserMedia ||                                                                                  // 44\n    navigator.mozGetUserMedia ||                                                                                     // 45\n    navigator.msGetUserMedia                                                                                         // 46\n  );                                                                                                                 // 47\n                                                                                                                     // 48\n  if (! navigator.getUserMedia) {                                                                                    // 49\n    // no browser support, sorry                                                                                     // 50\n    failure(\"BROWSER_NOT_SUPPORTED\");                                                                                // 51\n    return;                                                                                                          // 52\n  }                                                                                                                  // 53\n                                                                                                                     // 54\n  // initiate request for webcam                                                                                     // 55\n  navigator.getUserMedia({                                                                                           // 56\n      video: true,                                                                                                   // 57\n      audio: false                                                                                                   // 58\n  }, success, failure);                                                                                              // 59\n                                                                                                                     // 60\n  // resize viewfinder to a reasonable size, not necessarily photo size                                              // 61\n  var viewfinderWidth = 280;                                                                                         // 62\n  var viewfinderHeight = 210;                                                                                        // 63\n  var resized = false;                                                                                               // 64\n  video.addEventListener('canplay', function() {                                                                     // 65\n    if (! resized) {                                                                                                 // 66\n      viewfinderHeight = video.videoHeight / (video.videoWidth / viewfinderWidth);                                   // 67\n      video.setAttribute('width', viewfinderWidth);                                                                  // 68\n      video.setAttribute('height', viewfinderHeight);                                                                // 69\n      resized = true;                                                                                                // 70\n    }                                                                                                                // 71\n  }, false);                                                                                                         // 72\n};                                                                                                                   // 73\n                                                                                                                     // 74\n// is the current error a permission denied error?                                                                   // 75\nvar permissionDeniedError = function () {                                                                            // 76\n  return error.get() && (                                                                                            // 77\n    error.get().name === \"PermissionDeniedError\" || // Chrome and Opera                                              // 78\n    error.get() === \"PERMISSION_DENIED\" // Firefox                                                                   // 79\n  );                                                                                                                 // 80\n};                                                                                                                   // 81\n                                                                                                                     // 82\n// is the current error a browser not supported error?                                                               // 83\nvar browserNotSupportedError = function () {                                                                         // 84\n  return error.get() && error.get() === \"BROWSER_NOT_SUPPORTED\";                                                     // 85\n};                                                                                                                   // 86\n                                                                                                                     // 87\nTemplate.camera.helpers({                                                                                            // 88\n  photo: function () {                                                                                               // 89\n    return photo.get();                                                                                              // 90\n  },                                                                                                                 // 91\n  error: function () {                                                                                               // 92\n    return error.get();                                                                                              // 93\n  },                                                                                                                 // 94\n  permissionDeniedError: permissionDeniedError,                                                                      // 95\n  browserNotSupportedError: browserNotSupportedError                                                                 // 96\n});                                                                                                                  // 97\n                                                                                                                     // 98\nTemplate.camera.events({                                                                                             // 99\n  \"click .use-photo\": function () {                                                                                  // 100\n    closeAndCallback(null, photo.get());                                                                             // 101\n  },                                                                                                                 // 102\n  \"click .new-photo\": function () {                                                                                  // 103\n    photo.set(null);                                                                                                 // 104\n  },                                                                                                                 // 105\n  \"click .cancel\": function () {                                                                                     // 106\n    if (permissionDeniedError()) {                                                                                   // 107\n      closeAndCallback(new Meteor.Error(\"permissionDenied\", \"Camera permissions were denied.\"));                     // 108\n    } else if (browserNotSupportedError()) {                                                                         // 109\n      closeAndCallback(new Meteor.Error(\"browserNotSupported\", \"This browser isn't supported.\"));                    // 110\n    } else if (error.get()) {                                                                                        // 111\n      closeAndCallback(new Meteor.Error(\"unknownError\", \"There was an error while accessing the camera.\"));          // 112\n    } else {                                                                                                         // 113\n      closeAndCallback(new Meteor.Error(\"cancel\", \"Photo taking was cancelled.\"));                                   // 114\n    }                                                                                                                // 115\n                                                                                                                     // 116\n    if (stream) {                                                                                                    // 117\n      stream.stop();                                                                                                 // 118\n    }                                                                                                                // 119\n  }                                                                                                                  // 120\n});                                                                                                                  // 121\n                                                                                                                     // 122\nTemplate.viewfinder.events({                                                                                         // 123\n  'click .shutter': function (event, template) {                                                                     // 124\n    var video = template.find(\"video\");                                                                              // 125\n    var canvas = template.find(\"canvas\");                                                                            // 126\n    canvasWidth = video.width * magnification;    // Pick up the dimensions from the video frame                     // 127\n    canvasHeight = video.height * magnification;  // - then it's not clipped (if in portrait mode)                   // 128\n    canvas.width = canvasWidth;                                                                                      // 129\n    canvas.height = canvasHeight;                                                                                    // 130\n    canvas.getContext('2d').drawImage(video, 0, 0, canvasWidth, canvasHeight);                                       // 131\n    var data = canvas.toDataURL('image/jpeg', quality);                                                              // 132\n    photo.set(data);                                                                                                 // 133\n    stream.stop();                                                                                                   // 134\n  }                                                                                                                  // 135\n});                                                                                                                  // 136\n                                                                                                                     // 137\nTemplate.viewfinder.helpers({                                                                                        // 138\n  \"waitingForPermission\": function () {                                                                              // 139\n    return waitingForPermission.get();                                                                               // 140\n  }                                                                                                                  // 141\n});                                                                                                                  // 142\n                                                                                                                     // 143\n/**                                                                                                                  // 144\n * @summary Get a picture from the device's default camera.                                                          // 145\n * @param  {Object}   options  Options                                                                               // 146\n * @param {Number} options.magnification - Magnification factor x 640px. Use 1 to get a 640x480 image                // 147\n * @param {Number} options.height The minimum height of the image                                                    // 148\n * @param {Number} options.width The minimum width of the image - NOT REQUIRED, JUST SPECIFY WIDTH,                  // 149\n *                               ASPECT RATIO is preserved                                                           // 150\n * @param {Number} options.quality [description]                                                                     // 151\n * @param  {Function} callback A callback that is called with two arguments:                                         // 152\n * 1. error, an object that contains error.message and possibly other properties                                     // 153\n * depending on platform                                                                                             // 154\n * 2. data, a Data URI string with the image encoded in JPEG format, ready to                                        // 155\n * use as the `src` attribute on an `<img />` tag.                                                                   // 156\n */                                                                                                                  // 157\nMeteorCamera.getPicture = function (options, callback) {                                                             // 158\n  // if options are not passed                                                                                       // 159\n  if (! callback) {                                                                                                  // 160\n    callback = options;                                                                                              // 161\n    options = {};                                                                                                    // 162\n  }                                                                                                                  // 163\n                                                                                                                     // 164\n  magnification = options.magnification || 640/280;   // We are using a 280px wide video control as a starting point // 165\n                                                                                                                     // 166\n  if (options.width) {                                                                                               // 167\n    magnification = options.width / 280;                                                                             // 168\n  }                                                                                                                  // 169\n  desiredHeight = options.height || 480;    // Deprecated                                                            // 170\n                                                                                                                     // 171\n  // Canvas#toDataURL takes the quality as a 0-1 value, not a percentage                                             // 172\n  quality = (options.quality || 49) / 100;                                                                           // 173\n                                                                                                                     // 174\n  var view;                                                                                                          // 175\n                                                                                                                     // 176\n  closeAndCallback = function () {                                                                                   // 177\n    var originalArgs = arguments;                                                                                    // 178\n    UI.remove(view);                                                                                                 // 179\n    photo.set(null);                                                                                                 // 180\n    callback.apply(null, originalArgs);                                                                              // 181\n  };                                                                                                                 // 182\n                                                                                                                     // 183\n  view = UI.renderWithData(Template.camera);                                                                         // 184\n  UI.insert(view, document.body);                                                                                    // 185\n};                                                                                                                   // 186\n                                                                                                                     // 187\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n///////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nPackage._define(\"mikkelking:camera\", {\n  MeteorCamera: MeteorCamera\n});\n\n})();\n","servePath":"/packages/mikkelking_camera.js"}]